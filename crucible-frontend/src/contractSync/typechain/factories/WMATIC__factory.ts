/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WMATIC, WMATICInterface } from "../WMATIC";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c57726170706564204d6174696360981b60a090815261002e916000919061007c565b5060408051808201909152600680825265574d4154494360d01b602090920191825261005c9160019161007c565b506002805460ff1916601217905534801561007657600080fd5b50610150565b82805461008890610115565b90600052602060002090601f0160209004810192826100aa57600085556100f0565b82601f106100c357805160ff19168380011785556100f0565b828001600101855582156100f0579182015b828111156100f05782518255916020019190600101906100d5565b506100fc929150610100565b5090565b5b808211156100fc5760008155600101610101565b60028104600182168061012957607f821691505b6020821081141561014a57634e487b7160e01b600052602260045260246000fd5b50919050565b6108a38061015f6000396000f3fe6080604052600436106100c05760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101f5578063d0e30db014610215578063dd62ed3e1461021d576100cf565b8063313ce5671461019e57806370a08231146101c057806395d89b41146101e0576100cf565b806318160ddd116100a557806318160ddd1461013c57806323b872dd1461015e5780632e1a7d4d1461017e576100cf565b806306fdde03146100e4578063095ea7b31461010f576100cf565b366100cf576100cd61023d565b005b3480156100db57600080fd5b506100cd61023d565b3480156100f057600080fd5b506100f961029d565b6040516101069190610733565b60405180910390f35b34801561011b57600080fd5b5061012f61012a3660046106e7565b61032b565b6040516101069190610728565b34801561014857600080fd5b50610151610395565b60405161010691906107a4565b34801561016a57600080fd5b5061012f6101793660046106ac565b610399565b34801561018a57600080fd5b506100cd610199366004610710565b610539565b3480156101aa57600080fd5b506101b36105eb565b60405161010691906107ad565b3480156101cc57600080fd5b506101516101db366004610660565b6105f4565b3480156101ec57600080fd5b506100f9610606565b34801561020157600080fd5b5061012f6102103660046106e7565b610613565b6100cd61023d565b34801561022957600080fd5b5061015161023836600461067a565b610627565b336000908152600360205260408120805434929061025c9084906107bb565b909155505060405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906102939034906107a4565b60405180910390a2565b600080546102aa906107ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102d6906107ea565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103849086906107a4565b60405180910390a350600192915050565b4790565b6001600160a01b0383166000908152600360205260408120548211156103be57600080fd5b6001600160a01b038416331480159061041a57506001600160a01b03841660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b15610488576001600160a01b038416600090815260046020908152604080832033845290915290205482111561044f57600080fd5b6001600160a01b0384166000908152600460209081526040808320338452909152812080548492906104829084906107d3565b90915550505b6001600160a01b038416600090815260036020526040812080548492906104b09084906107d3565b90915550506001600160a01b038316600090815260036020526040812080548492906104dd9084906107bb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161052791906107a4565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561055557600080fd5b33600090815260036020526040812080548392906105749084906107d3565b9091555050604051339082156108fc029083906000818181858888f193505050501580156105a6573d6000803e3d6000fd5b50336001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516105e091906107a4565b60405180910390a250565b60025460ff1681565b60036020526000908152604090205481565b600180546102aa906107ea565b6000610620338484610399565b9392505050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b038116811461065b57600080fd5b919050565b600060208284031215610671578081fd5b61062082610644565b6000806040838503121561068c578081fd5b61069583610644565b91506106a360208401610644565b90509250929050565b6000806000606084860312156106c0578081fd5b6106c984610644565b92506106d760208501610644565b9150604084013590509250925092565b600080604083850312156106f9578182fd5b61070283610644565b946020939093013593505050565b600060208284031215610721578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b8181101561075f57858101830151858201604001528201610743565b818111156107705783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b90815260200190565b60ff91909116815260200190565b600082198211156107ce576107ce61083e565b500190565b6000828210156107e5576107e561083e565b500390565b6002810460018216806107fe57607f821691505b60208210811415610838577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220baa53743416aba1c3476bbb0bc64021a3b5eb3eefff3ef5efdfb85d3e1c414c264736f6c63430008000033";

export class WMATIC__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WMATIC> {
    return super.deploy(overrides || {}) as Promise<WMATIC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WMATIC {
    return super.attach(address) as WMATIC;
  }
  connect(signer: Signer): WMATIC__factory {
    return super.connect(signer) as WMATIC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WMATICInterface {
    return new utils.Interface(_abi) as WMATICInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WMATIC {
    return new Contract(address, _abi, signerOrProvider) as WMATIC;
  }
}
