/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QuantumPortalLedgerMgr,
  QuantumPortalLedgerMgrInterface,
} from "../QuantumPortalLedgerMgr";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "authorityFinalizers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "blockNonce",
        type: "uint64",
      },
    ],
    name: "blockByNonce",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "chainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct QuantumPortalLedgerMgr.Block",
        name: "_block",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "remoteChainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "blockNonce",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "remoteContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "remoteOrigin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "method",
            type: "bytes",
          },
        ],
        internalType: "struct QuantumPortalLedgerMgr.Context[]",
        name: "transactions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "finalizations",
    outputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "finalizedBlocksHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "finalizersHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalBlockStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNonce",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
    ],
    name: "isLocalBlockReady",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
    ],
    name: "lastRemoteBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "blockNonce",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "localBlocks",
    outputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "remoteChainId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "blockNonce",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "remoteContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "remoteOrigin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "method",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
    ],
    name: "mineRemoteBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "blockNonce",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "minedBlocks",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "miner",
        type: "address",
      },
      {
        internalType: "address",
        name: "finalizer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "chainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct QuantumPortalLedgerMgr.Block",
        name: "blockMetadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingTransactions",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "remoteChainId",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "blockNonce",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "remoteContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "remoteOrigin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "method",
            type: "bytes",
          },
        ],
        internalType: "struct QuantumPortalLedgerMgr.Context[]",
        name: "pending",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610804806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063746db38911610066578063746db3891461019f5780637b580515146101de578063a6e3e6af146101ec578063b6013cef1461028f578063b6cec070146102a35761009e565b806308710df6146100a35780631328ed0a146101135780632ee5e2eb1461013857806352484df61461014757806357479eeb14610174575b600080fd5b6100e46100b1366004610416565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919084565b604080516001600160a01b03909516855260208501939093529183015260608201526080015b60405180910390f35b61012661012136600461044f565b6102c1565b60405161010a9695949392919061073b565b606060405161010a9190610675565b61015b610155366004610416565b50600090565b60405167ffffffffffffffff909116815260200161010a565b61018761018236600461042e565b6103c1565b6040516001600160a01b03909116815260200161010a565b6101d06101ad366004610482565b505060408051606080820183526000808352602083018190529282019290925291565b60405161010a9291906106f0565b61015b610155366004610461565b61027d6101fa36600461044f565b6001602081815260009384526040808520825292845292829020805491810154600282015460038301546004840154865160608101885260059095015467ffffffffffffffff8082168752600160401b8204811699870199909952600160801b90049097169584019590955292946001600160a01b039182169493909116929186565b60405161010a96959493929190610688565b6102a161029d36600461044f565b5050565b005b6102b1610155366004610461565b604051901515815260200161010a565b600060205281600052604060002081815481106102dd57600080fd5b6000918252602090912060069091020180546001820154600283015460058401805467ffffffffffffffff8086169850600160401b860481169750600160801b909504909416946001600160a01b0393841694939092169261033e90610793565b80601f016020809104026020016040519081016040528092919081815260200182805461036a90610793565b80156103b75780601f1061038c576101008083540402835291602001916103b7565b820191906000526020600020905b81548152906001019060200180831161039a57829003601f168201915b5050505050905086565b600360205281600052604060002081815481106103dd57600080fd5b6000918252602090912001546001600160a01b03169150829050565b803567ffffffffffffffff8116811461041157600080fd5b919050565b600060208284031215610427578081fd5b5035919050565b60008060408385031215610440578081fd5b50508035926020909101359150565b60008060408385031215610440578182fd5b600060208284031215610472578081fd5b61047b826103f9565b9392505050565b60008060408385031215610494578182fd5b61049d836103f9565b91506104ab602084016103f9565b90509250929050565b6000815180845260208085019450808401835b838110156104ec5781516001600160a01b0316875295820195908201906001016104c7565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156105ee5782840389528151805167ffffffffffffffff1685526101008187015167ffffffffffffffff8116878901525060408281015167ffffffffffffffff81168883015250506060828101516001600160a01b0381168883015250506080828101516001600160a01b03811688830152505060a08083015182828901526105a1838901826104b4565b9250505060c080830151878303828901526105bc83826105fb565b9250505060e080830151925086820381880152506105da818361062a565b9a87019a9550505090840190600101610513565b5091979650505050505050565b6000815180845260208085019450808401835b838110156104ec5781518752958201959082019060010161060e565b60008151808452815b8181101561064f57602081850181015186830182015201610633565b818111156106605782602083870101525b50601f01601f19169290920160200192915050565b60006020825261047b60208301846104f7565b8681526001600160a01b03868116602083015285166040820152606081018490526080810183905261010081016106e560a0830184805167ffffffffffffffff908116835260208083015182169084015260409182015116910152565b979650505050505050565b600061071f8285805167ffffffffffffffff908116835260208083015182169084015260409182015116910152565b6080606083015261073360808301846104f7565b949350505050565b67ffffffffffffffff87811682528681166020830152851660408201526001600160a01b0384811660608301528316608082015260c060a082018190526000906107879083018461062a565b98975050505050505050565b6002810460018216806107a757607f821691505b602082108114156107c857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220cd82410c89e6f9a522a7137b16fc0be95d4c249cd1d49a94a4fe567266cee63864736f6c63430008020033";

export class QuantumPortalLedgerMgr__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QuantumPortalLedgerMgr> {
    return super.deploy(overrides || {}) as Promise<QuantumPortalLedgerMgr>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QuantumPortalLedgerMgr {
    return super.attach(address) as QuantumPortalLedgerMgr;
  }
  connect(signer: Signer): QuantumPortalLedgerMgr__factory {
    return super.connect(signer) as QuantumPortalLedgerMgr__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuantumPortalLedgerMgrInterface {
    return new utils.Interface(_abi) as QuantumPortalLedgerMgrInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuantumPortalLedgerMgr {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as QuantumPortalLedgerMgr;
  }
}
