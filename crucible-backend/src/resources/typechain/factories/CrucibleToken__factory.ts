/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrucibleToken, CrucibleTokenInterface } from "../CrucibleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ICrucibleToken.OverrideState",
        name: "overrideType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "feeX10k",
        type: "uint64",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOnTransferX10000",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOnWithdrawX10000",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeOverrides",
    outputs: [
      {
        internalType: "enum ICrucibleToken.OverrideState",
        name: "over",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "feeX10000",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "enum ICrucibleToken.OverrideState",
        name: "overrideType",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "newFeeX10000",
        type: "uint64",
      },
    ],
    name: "overrideFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526002805460ff191660121790553480156200001e57600080fd5b50600080336001600160a01b031663890357306040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005e57600080fd5b505af115801562000073573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009d91908101906200045b565b805160079060149060089060009081908190620000c29060019060208a0190620002d8565b50508651620000d791906020890190620002d8565b508691906101000a8154816001600160401b0302191690836001600160401b031602179055508591906101000a8154816001600160401b0302191690836001600160401b031602179055508497508596505050505050506200013f826200021660201b60201c565b600260006101000a81548160ff021916908360ff16021790555081600760006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663f887ea406040518163ffffffff1660e01b815260040160206040518083038186803b158015620001ba57600080fd5b505afa158015620001cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f5919062000437565b6001600160601b0319606091821b811660a05291901b1660805250620005d3565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b038616916200025e91906200052f565b600060405180830381855afa9150503d80600081146200029b576040519150601f19603f3d011682016040523d82523d6000602084013e620002a0565b606091505b50915091508115620002cc5780806020019051810190620002c291906200050c565b92505050620002d3565b6012925050505b919050565b828054620002e69062000580565b90600052602060002090601f0160209004810192826200030a576000855562000355565b82601f106200032557805160ff191683800117855562000355565b8280016001018555821562000355579182015b828111156200035557825182559160200191906001019062000338565b506200036392915062000367565b5090565b5b8082111562000363576000815560010162000368565b80516001600160a01b0381168114620002d357600080fd5b600082601f830112620003a7578081fd5b81516001600160401b0380821115620003c457620003c4620005bd565b604051601f8301601f191681016020018281118282101715620003eb57620003eb620005bd565b60405282815284830160200186101562000403578384fd5b620004168360208301602088016200054d565b95945050505050565b80516001600160401b0381168114620002d357600080fd5b60006020828403121562000449578081fd5b62000454826200037e565b9392505050565b60008060008060008060c0878903121562000474578182fd5b6200047f876200037e565b95506200048f602088016200037e565b94506200049f604088016200041f565b9350620004af606088016200041f565b60808801519093506001600160401b0380821115620004cc578384fd5b620004da8a838b0162000396565b935060a0890151915080821115620004f0578283fd5b50620004ff89828a0162000396565b9150509295509295509295565b6000602082840312156200051e578081fd5b815160ff8116811462000454578182fd5b60008251620005438184602087016200054d565b9190910192915050565b60005b838110156200056a57818101518382015260200162000550565b838111156200057a576000848401525b50505050565b6002810460018216806200059557607f821691505b60208210811415620005b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c611b686200062260003960008181610638015281816107d30152818161086e01528181610a3f0152610e7c0152600081816105df0152610c7f0152611b686000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806395d89b41116100d8578063c55dae631161008c578063f340fa0111610066578063f340fa01146102e1578063f3fef3a3146102f4578063f887ea401461031557610177565b8063c55dae63146102b3578063dd62ed3e146102bb578063e56a5ec5146102ce57610177565b8063aa9d881c116100bd578063aa9d881c1461026a578063b5fd282a1461028b578063c45a01551461029e57610177565b806395d89b411461024f578063a9059cbb1461025757610177565b8063313ce5671161012f57806370a082311161011457806370a08231146102215780637651b2841461023457806379cc67901461023c57610177565b8063313ce567146101f757806342966c681461020c57610177565b806313cf47a21161016057806313cf47a2146101ba57806318160ddd146101cf57806323b872dd146101e457610177565b806306fdde031461017c578063095ea7b31461019a575b600080fd5b61018461031d565b60405161019191906117cd565b60405180910390f35b6101ad6101a8366004611682565b6103ab565b604051610191919061179d565b6101c26103c1565b6040516101919190611a0b565b6101d76103e9565b60405161019191906119cd565b6101ad6101f23660046115e9565b6103ef565b6101ff610484565b6040516101919190611a20565b61021f61021a3660046116cd565b61048d565b005b6101d761022f366004611579565b6104c0565b6101c26104d2565b61021f61024a366004611682565b6104e2565b61018461058b565b6101ad610265366004611682565b610598565b61027d610278366004611579565b6105a5565b6040516101919291906117a8565b6101d7610299366004611579565b6105cb565b6102a66105dd565b604051610191919061173b565b6102a6610601565b6101d76102c93660046115b1565b610610565b61021f6102dc366004611629565b61062d565b6101d76102ef366004611579565b6107c6565b610307610302366004611682565b610853565b6040516101919291906119d6565b6102a661086c565b6000805461032a90611aa8565b80601f016020809104026020016040519081016040528092919081815260200182805461035690611aa8565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b505050505081565b60006103b8338484610890565b50600192915050565b60075474010000000000000000000000000000000000000000900467ffffffffffffffff1681565b60035481565b6001600160a01b03831660009081526005602090815260408083203384529091528120546000191461046e576001600160a01b038416600090815260056020908152604080832033845290915290205461044990836108f8565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b610479848484610904565b5060015b9392505050565b60025460ff1681565b806104b35760405162461bcd60e51b81526004016104aa90611800565b60405180910390fd5b6104bd3382610c6d565b50565b60046020526000908152604090205481565b60085467ffffffffffffffff1681565b6001600160a01b0382166105085760405162461bcd60e51b81526004016104aa90611800565b806105255760405162461bcd60e51b81526004016104aa90611800565b600061056f82604051806060016040528060248152602001611b0f602491396001600160a01b03861660009081526005602090815260408083203384529091529020549190610cb2565b905061057c833383610890565b6105868383610c6d565b505050565b6001805461032a90611aa8565b60006103b8338484610904565b60096020526000908152604090205460ff811690610100900467ffffffffffffffff1682565b60066020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6007546001600160a01b031681565b600560209081526000928352604080842090915290825290205481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106755760405162461bcd60e51b81526004016104aa90611902565b6117708167ffffffffffffffff16106106a05760405162461bcd60e51b81526004016104aa90611894565b60405180604001604052808360038111156106cb57634e487b7160e01b600052602160045260246000fd5b815267ffffffffffffffff83166020918201526001600160a01b03851660009081526009909152604090208151815482907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600381111561074057634e487b7160e01b600052602160045260246000fd5b021790555060209190910151815467ffffffffffffffff909116610100027fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ff9091161790556040517f322a14cd72711b473bdc3549ec949cbc27451339a81997e028f2996445b29ded906107b99085908590859061174f565b60405180910390a1505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108105760405162461bcd60e51b81526004016104aa90611902565b600754610825906001600160a01b0316610cde565b9050806108445760405162461bcd60e51b81526004016104aa90611996565b61084e8282610dbf565b919050565b600080610861338585610e4d565b909590945092505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0380841660008181526005602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108eb9085906119cd565b60405180910390a3505050565b600061047d8284611a65565b6001600160a01b0383166000908152600960205260408082208151808301909252805483929190829060ff16600381111561094f57634e487b7160e01b600052602160045260246000fd5b600381111561096e57634e487b7160e01b600052602160045260246000fd5b81529054610100900467ffffffffffffffff166020918201526001600160a01b038616600090815260099091526040808220815180830190925280549394509192909190829060ff1660038111156109d657634e487b7160e01b600052602160045260246000fd5b60038111156109f557634e487b7160e01b600052602160045260246000fd5b81529054610100900467ffffffffffffffff16602091820152604080517fb4a735b200000000000000000000000000000000000000000000000000000000815290519293506000927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169263b4a735b2926004808201939182900301818787803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190611595565b90506000816001600160a01b0316886001600160a01b03161480610af75750816001600160a01b0316876001600160a01b0316145b15610b0157610c27565b6000600285516003811115610b2657634e487b7160e01b600052602160045260246000fd5b1480610b525750600385516003811115610b5057634e487b7160e01b600052602160045260246000fd5b145b15610b6b575050602083015167ffffffffffffffff1660015b600184516003811115610b8e57634e487b7160e01b600052602160045260246000fd5b1480610bba5750600384516003811115610bb857634e487b7160e01b600052602160045260246000fd5b145b8015610bd3575081846020015167ffffffffffffffff16115b15610bec575050602083015167ffffffffffffffff1660015b81158015610bf8575080155b15610c255760075474010000000000000000000000000000000000000000900467ffffffffffffffff1691505b505b8015610c3c57610c378682610f81565b610c3f565b60005b9450610c4b86866108f8565b9550610c58888387610f90565b610c63888888611038565b5050505050505050565b600754610ca4906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083611043565b610cae828261109b565b5050565b60008184841115610cd65760405162461bcd60e51b81526004016104aa91906117cd565b505050900390565b6001600160a01b0381166000818152600660205260408082205490517f70a0823100000000000000000000000000000000000000000000000000000000815291929091610d919183916370a0823190610d3b90309060040161173b565b60206040518083038186803b158015610d5357600080fd5b505afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b91906116e5565b906108f8565b9150610d9d8183611125565b6001600160a01b03909316600090815260066020526040902092909255919050565b600354610dcc9082611125565b6003556001600160a01b038216600090815260046020526040902054610df29082611125565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e419085906119cd565b60405180910390a35050565b6008546000908190610e6a90849067ffffffffffffffff16610f81565b9150610e7683836108f8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b4a735b26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610ed557600080fd5b505af1158015610ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0d9190611595565b9050610f1a868285610f90565b610f24868361109b565b600754610f3b906001600160a01b03168684611043565b7ffc40624533f3a6341b6cd846b808821ff3de38e50edbcbdfc55db74e9c13119084848888604051610f7094939291906119e4565b60405180910390a150935093915050565b600061047d8383612710611131565b610f9b838383611038565b6040517f7ac097500000000000000000000000000000000000000000000000000000000081526001600160a01b03831690637ac0975090610fe090309060040161173b565b602060405180830381600087803b158015610ffa57600080fd5b505af115801561100e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103291906116e5565b50505050565b6105868383836112b2565b6110576001600160a01b0384168383611356565b6001600160a01b03831660009081526006602052604090205461107a90826108f8565b6001600160a01b039093166000908152600660205260409020929092555050565b6001600160a01b0382166000908152600460205260409020546110be90826108f8565b6001600160a01b0383166000908152600460205260409020556003546110e490826108f8565b6003556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e419085906119cd565b600061047d8284611a2e565b6000808060001985870986860292508281109083900303905080611167576000841161115c57600080fd5b50829004905061047d565b80841161117357600080fd5b60008486880980840393811190920391905060008561119481600019611a65565b61119f906001611a2e565b169586900495938490049360008190030460010190506111bf8184611a46565b9093179260006111d0876003611a46565b60021890506111df8188611a46565b6111ea906002611a65565b6111f49082611a46565b90506112008188611a46565b61120b906002611a65565b6112159082611a46565b90506112218188611a46565b61122c906002611a65565b6112369082611a46565b90506112428188611a46565b61124d906002611a65565b6112579082611a46565b90506112638188611a46565b61126e906002611a65565b6112789082611a46565b90506112848188611a46565b61128f906002611a65565b6112999082611a46565b90506112a58186611a46565b9998505050505050505050565b6001600160a01b0383166000908152600460205260409020546112d590826108f8565b6001600160a01b0380851660009081526004602052604080822093909355908416815220546113049082611125565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108eb9085906119cd565b6105868363a9059cbb60e01b8484604051602401611375929190611784565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526000611429826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114639092919063ffffffff16565b805190915015610586578080602001905181019061144791906116ad565b6105865760405162461bcd60e51b81526004016104aa90611939565b6060611472848460008561147a565b949350505050565b60608247101561149c5760405162461bcd60e51b81526004016104aa90611837565b6114a58561153a565b6114c15760405162461bcd60e51b81526004016104aa906118cb565b600080866001600160a01b031685876040516114dd919061171f565b60006040518083038185875af1925050503d806000811461151a576040519150601f19603f3d011682016040523d82523d6000602084013e61151f565b606091505b509150915061152f828286611540565b979650505050505050565b3b151590565b6060831561154f57508161047d565b82511561155f5782518084602001fd5b8160405162461bcd60e51b81526004016104aa91906117cd565b60006020828403121561158a578081fd5b813561047d81611af9565b6000602082840312156115a6578081fd5b815161047d81611af9565b600080604083850312156115c3578081fd5b82356115ce81611af9565b915060208301356115de81611af9565b809150509250929050565b6000806000606084860312156115fd578081fd5b833561160881611af9565b9250602084013561161881611af9565b929592945050506040919091013590565b60008060006060848603121561163d578283fd5b833561164881611af9565b925060208401356004811061165b578283fd5b9150604084013567ffffffffffffffff81168114611677578182fd5b809150509250925092565b60008060408385031215611694578182fd5b823561169f81611af9565b946020939093013593505050565b6000602082840312156116be578081fd5b8151801515811461047d578182fd5b6000602082840312156116de578081fd5b5035919050565b6000602082840312156116f6578081fd5b5051919050565b6004811061171b57634e487b7160e01b600052602160045260246000fd5b9052565b60008251611731818460208701611a7c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03841681526060810161176c60208301856116fd565b67ffffffffffffffff83166040830152949350505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b604081016117b682856116fd565b67ffffffffffffffff831660208301529392505050565b60006020825282518060208401526117ec816040850160208701611a7c565b601f01601f19169190910160400192915050565b60208082526013908201527f43543a20616d6f756e7420726571756972656400000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f43543a2066656520746f6f206c61726765000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600f908201527f43543a206e6f7420616c6c6f7765640000000000000000000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526009908201527f43543a20656d7074790000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b93845260208401929092526001600160a01b03908116604084015216606082015260800190565b67ffffffffffffffff91909116815260200190565b60ff91909116815260200190565b60008219821115611a4157611a41611ae3565b500190565b6000816000190483118215151615611a6057611a60611ae3565b500290565b600082821015611a7757611a77611ae3565b500390565b60005b83811015611a97578181015183820152602001611a7f565b838111156110325750506000910152565b600281046001821680611abc57607f821691505b60208210811415611add57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146104bd57600080fdfe45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365a26469706673582212206b5cd77fd10ffab61fe6c84e708932c4d6f06f4e816b4f5aaf9e063f9762d77a64736f6c63430008000033";

export class CrucibleToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrucibleToken> {
    return super.deploy(overrides || {}) as Promise<CrucibleToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrucibleToken {
    return super.attach(address) as CrucibleToken;
  }
  connect(signer: Signer): CrucibleToken__factory {
    return super.connect(signer) as CrucibleToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrucibleTokenInterface {
    return new utils.Interface(_abi) as CrucibleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrucibleToken {
    return new Contract(address, _abi, signerOrProvider) as CrucibleToken;
  }
}
