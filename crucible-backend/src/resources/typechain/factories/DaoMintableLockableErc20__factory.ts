/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DaoMintableLockableErc20,
  DaoMintableLockableErc20Interface,
} from "../DaoMintableLockableErc20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "action",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "daoAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locker",
    outputs: [
      {
        internalType: "contract ILocker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_locker",
        type: "address",
      },
    ],
    name: "setLocker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051602080820183526000808352835191820190935291825290620000393362000130565b81516200004e90600490602085019062000180565b5080516200006490600590602084019062000180565b505050336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000a357600080fd5b505af1158015620000b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000e29190810190620002f3565b806020019051810190620000f7919062000345565b80516006906000906200011290600790602086019062000180565b50508251620001279190602085019062000180565b505050620003ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200018e90620003ac565b90600052602060002090601f016020900481019282620001b25760008555620001fd565b82601f10620001cd57805160ff1916838001178555620001fd565b82800160010185558215620001fd579182015b82811115620001fd578251825591602001919060010190620001e0565b506200020b9291506200020f565b5090565b5b808211156200020b576000815560010162000210565b60006001600160401b0380841115620002435762000243620003e9565b604051601f8501601f19908116603f011681019082821181831017156200026e576200026e620003e9565b816040528093508581528686860111156200028857600080fd5b600092505b85831015620002ad5782850151602084830101526020830192506200028d565b85831115620002c0576000602087830101525b5050509392505050565b600082601f830112620002db578081fd5b620002ec8383516020850162000226565b9392505050565b60006020828403121562000305578081fd5b81516001600160401b038111156200031b578182fd5b8201601f810184136200032c578182fd5b6200033d8482516020840162000226565b949350505050565b6000806040838503121562000358578081fd5b82516001600160401b03808211156200036f578283fd5b6200037d86838701620002ca565b9350602085015191508082111562000393578283fd5b50620003a285828601620002ca565b9150509250929050565b600281046001821680620003c157607f821691505b60208210811415620003e357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611147806200040f6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806379cc6790116100b8578063b09f12661161007c578063b09f126614610283578063cc640f8d1461028b578063d28d88521461029e578063d7b96d4e146102a6578063dd62ed3e146102b9578063f2fde38b146102f257610137565b806379cc67901461021d5780638da5cb5b1461023057806395d89b4114610255578063a457c2d71461025d578063a9059cbb1461027057610137565b8063313ce567116100ff578063313ce567146101b757806339509351146101c657806342966c68146101d957806370a08231146101ec578063715018a61461021557610137565b806306fdde031461013c578063095ea7b31461015a578063171060ec1461017d57806318160ddd1461019257806323b872dd146101a4575b600080fd5b610144610305565b6040516101519190610ff4565b60405180910390f35b61016d610168366004610f22565b610397565b6040519015158152602001610151565b61019061018b366004610e5c565b6103ad565b005b6003545b604051908152602001610151565b61016d6101b2366004610ee2565b610402565b60405160128152602001610151565b61016d6101d4366004610f22565b6104ac565b6101906101e7366004610fdc565b6104e8565b6101966101fa366004610e5c565b6001600160a01b031660009081526001602052604090205490565b6101906104f5565b61019061022b366004610f22565b61052b565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610151565b6101446105b1565b61016d61026b366004610f22565b6105c0565b61016d61027e366004610f22565b610659565b610144610666565b610190610299366004610f65565b6106f4565b6101446107a2565b60085461023d906001600160a01b031681565b6101966102c7366004610eaa565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610190610300366004610e5c565b6107af565b606060068054610314906110ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906110ab565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b5050505050905090565b60006103a4338484610847565b50600192915050565b6000546001600160a01b031633146103e05760405162461bcd60e51b81526004016103d790611047565b60405180910390fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b600061040f84848461096b565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156104945760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016103d7565b6104a18533858403610847565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103a49185906104e390869061107c565b610847565b6104f23382610a10565b50565b6000546001600160a01b0316331461051f5760405162461bcd60e51b81526004016103d790611047565b6105296000610b5e565b565b600061053783336102c7565b9050818110156105955760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016103d7565b6105a28333848403610847565b6105ac8383610a10565b505050565b606060078054610314906110ab565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156106425760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103d7565b61064f3385858403610847565b5060019392505050565b60006103a433848461096b565b60078054610673906110ab565b80601f016020809104026020016040519081016040528092919081815260200182805461069f906110ab565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b505050505081565b6000546001600160a01b0316331461071e5760405162461bcd60e51b81526004016103d790611047565b7f64742617c0aa6b3831acf1f3ee50863e43760bca8a8f03d043da5be46d4cfe03831461077e5760405162461bcd60e51b815260206004820152600e60248201526d2a221d103130b21030b1ba34b7b760911b60448201526064016103d7565b60008061078d83850185610e7f565b9150915061079b8282610bae565b5050505050565b60068054610673906110ab565b6000546001600160a01b031633146107d95760405162461bcd60e51b81526004016103d790611047565b6001600160a01b03811661083e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d7565b6104f281610b5e565b6001600160a01b0383166108a95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d7565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6008546001600160a01b031615610a055760085460405163aa61a9dd60e01b81526001600160a01b03858116600483015284811660248301529091169063aa61a9dd906044016040805180830381600087803b1580156109ca57600080fd5b505af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190610f34565b50505b6105ac838383610c8d565b6001600160a01b038216610a705760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d7565b6001600160a01b03821660009081526001602052604090205481811015610ae45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d7565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610b13908490611094565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36105ac565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610c045760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d7565b8060036000828254610c16919061107c565b90915550506001600160a01b03821660009081526001602052604081208054839290610c4390849061107c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038316610cf15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d7565b6001600160a01b038216610d535760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d7565b6001600160a01b03831660009081526001602052604090205481811015610dcb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d7565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610e0290849061107c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e4e91815260200190565b60405180910390a350505050565b600060208284031215610e6d578081fd5b8135610e78816110fc565b9392505050565b60008060408385031215610e91578081fd5b8235610e9c816110fc565b946020939093013593505050565b60008060408385031215610ebc578182fd5b8235610ec7816110fc565b91506020830135610ed7816110fc565b809150509250929050565b600080600060608486031215610ef6578081fd5b8335610f01816110fc565b92506020840135610f11816110fc565b929592945050506040919091013590565b60008060408385031215610e91578182fd5b60008060408385031215610f46578182fd5b82518015158114610f55578283fd5b6020939093015192949293505050565b600080600060408486031215610f79578283fd5b83359250602084013567ffffffffffffffff80821115610f97578384fd5b818601915086601f830112610faa578384fd5b813581811115610fb8578485fd5b876020828501011115610fc9578485fd5b6020830194508093505050509250925092565b600060208284031215610fed578081fd5b5035919050565b6000602080835283518082850152825b8181101561102057858101830151858201604001528201611004565b818111156110315783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561108f5761108f6110e6565b500190565b6000828210156110a6576110a66110e6565b500390565b6002810460018216806110bf57607f821691505b602082108114156110e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146104f257600080fdfea26469706673582212207467e4c522f2111791daf6418c65da965adf17c89c5b3dab13cdd4a9bd80cf0c64736f6c63430008020033";

export class DaoMintableLockableErc20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DaoMintableLockableErc20> {
    return super.deploy(overrides || {}) as Promise<DaoMintableLockableErc20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DaoMintableLockableErc20 {
    return super.attach(address) as DaoMintableLockableErc20;
  }
  connect(signer: Signer): DaoMintableLockableErc20__factory {
    return super.connect(signer) as DaoMintableLockableErc20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaoMintableLockableErc20Interface {
    return new utils.Interface(_abi) as DaoMintableLockableErc20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DaoMintableLockableErc20 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DaoMintableLockableErc20;
  }
}
