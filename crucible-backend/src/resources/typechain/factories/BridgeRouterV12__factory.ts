/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRouterV12,
  BridgeRouterV12Interface,
} from "../BridgeRouterV12";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidityIfPossible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stake",
        type: "address",
      },
    ],
    name: "setStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCross",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCrossETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "swapToToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSigned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwapETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6120b5806200008a6000396000f3fe60806040526004361061010e5760003560e01c80638fed0b2c116100a5578063e2ea131911610074578063e91b79bc11610059578063e91b79bc146102b2578063f0102b51146102d2578063f2fde38b146102f25761010e565b8063e2ea131914610272578063e4a76726146102925761010e565b80638fed0b2c146101ff5780639feb8f501461021f578063c64b2e781461023f578063d96ac95a1461025f5761010e565b806360d47c7e116100e157806360d47c7e14610195578063715018a6146101b557806379ab23df146101ca5780638da5cb5b146101ea5761010e565b806316f0115b146101135780631823bf101461013e5780633a4b66f1146101605780634437152a14610175575b600080fd5b34801561011f57600080fd5b50610128610312565b6040516101359190611cc7565b60405180910390f35b34801561014a57600080fd5b5061015e610159366004611941565b610321565b005b34801561016c57600080fd5b50610128610546565b34801561018157600080fd5b5061015e610190366004611832565b610555565b3480156101a157600080fd5b5061015e6101b0366004611b92565b6105cc565b3480156101c157600080fd5b5061015e610678565b3480156101d657600080fd5b5061015e6101e5366004611941565b6106c3565b3480156101f657600080fd5b506101286108ea565b34801561020b57600080fd5b5061015e61021a366004611ada565b6108f9565b34801561022b57600080fd5b5061015e61023a366004611a05565b610aa5565b34801561024b57600080fd5b5061015e61025a3660046118aa565b610b63565b61015e61026d366004611a30565b610c14565b34801561027e57600080fd5b5061015e61028d366004611832565b610d0d565b34801561029e57600080fd5b5061015e6102ad36600461186a565b610d7b565b3480156102be57600080fd5b5061015e6102cd366004611a05565b610e9e565b3480156102de57600080fd5b5061015e6102ed366004611b23565b610fed565b3480156102fe57600080fd5b5061015e61030d366004611832565b6110b9565b6001546001600160a01b031681565b6001546001600160a01b031663c64b2e78858560008161035157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103669190611832565b308b8888610375600182612005565b81811061039257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103a79190611832565b8c8c886040518863ffffffff1660e01b81526004016103cc9796959493929190611d5a565b602060405180830381600087803b1580156103e657600080fd5b505af11580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611c67565b508383600081811061044057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104559190611832565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016104809190611cc7565b60206040518083038186803b15801561049857600080fd5b505afa1580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190611c67565b9750886001600160a01b031663791ac947898787878f886040518763ffffffff1660e01b815260040161050896959493929190611f92565b600060405180830381600087803b15801561052257600080fd5b505af1158015610536573d6000803e3d6000fd5b5050505050505050505050505050565b6002546001600160a01b031681565b61055d61112a565b6001600160a01b031661056e6108ea565b6001600160a01b03161461059d5760405162461bcd60e51b815260040161059490611ec9565b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61061933308b8a8a60008181106105f357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106089190611832565b6001600160a01b031692919061112e565b6106598787600081811061063d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106529190611832565b8b8b6111b3565b61066c338b8b8b8b8b8b8b8b8b8b6113b2565b50505050505050505050565b61068061112a565b6001600160a01b03166106916108ea565b6001600160a01b0316146106b75760405162461bcd60e51b815260040161059490611ec9565b6106c1600061154c565b565b6001546001600160a01b031663c64b2e7885856000816106f357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107089190611832565b308b8888610717600182612005565b81811061073457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107499190611832565b8c8c886040518863ffffffff1660e01b815260040161076e9796959493929190611d5a565b602060405180830381600087803b15801561078857600080fd5b505af115801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c09190611c67565b50838360008181106107e257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107f79190611832565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016108229190611cc7565b60206040518083038186803b15801561083a57600080fd5b505afa15801561084e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108729190611c67565b97506108b48484600081811061089857634e487b7160e01b600052603260045260246000fd5b90506020020160208101906108ad9190611832565b8a8a6111b3565b886001600160a01b0316635c11d795898787878f886040518763ffffffff1660e01b815260040161050896959493929190611f92565b6000546001600160a01b031690565b6002546040517f9046ac820000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690639046ac82906109449033908890600401611cdb565b602060405180830381600087803b15801561095e57600080fd5b505af1158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190611c67565b506001546040517f2388dac10000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632388dac1906109e89033908890889088908890600401611db3565b600060405180830381600087803b158015610a0257600080fd5b505af1158015610a16573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610a4c9033908890600401611cdb565b602060405180830381600087803b158015610a6657600080fd5b505af1158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190611c67565b5050505050565b600254610ac1906001600160a01b03848116913391168461112e565b6002546040517f40b47e1a0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906340b47e1a90610b0c9085908190600401611cdb565b602060405180830381600087803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5e9190611c67565b505050565b6001546040517fc64b2e780000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063c64b2e7890610bb8908a908a908a908a908a908a908a90600401611d5a565b602060405180830381600087803b158015610bd257600080fd5b505af1158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190611c67565b5050505050505050565b600034905060008a6001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5457600080fd5b505afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c919061184e565b9050610c99818c846111b3565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b5050505050610d00338c848d8d8d8d8d8d8d8d6113b2565b5050505050505050505050565b610d1561112a565b6001600160a01b0316610d266108ea565b6001600160a01b031614610d4c5760405162461bcd60e51b815260040161059490611ec9565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600154610d97906001600160a01b03848116913391168461112e565b6001546040517f380ecef20000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063380ecef290610de29086908690600401611cdb565b600060405180830381600087803b158015610dfc57600080fd5b505af1158015610e10573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610e469086908690600401611cdb565b602060405180830381600087803b158015610e6057600080fd5b505af1158015610e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e989190611c67565b50505050565b6002546040517f9046ac820000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690639046ac8290610ee99033908690600401611cdb565b602060405180830381600087803b158015610f0357600080fd5b505af1158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190611c67565b506001546040517fe70787d70000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e70787d790610f8990339086908690600401611cf5565b600060405180830381600087803b158015610fa357600080fd5b505af1158015610fb7573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610b0c9033908690600401611cdb565b600154611009906001600160a01b03888116913391168861112e565b6001546040517f641a08f50000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063641a08f59061105e9033908a9089908990899089908590600401611d19565b602060405180830381600087803b15801561107857600080fd5b505af115801561108c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b09190611c67565b50505050505050565b6110c161112a565b6001600160a01b03166110d26108ea565b6001600160a01b0316146110f85760405162461bcd60e51b815260040161059490611ec9565b6001600160a01b03811661111e5760405162461bcd60e51b815260040161059490611e0f565b6111278161154c565b50565b3390565b610e98846323b872dd60e01b85858560405160240161114f93929190611cf5565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526115a9565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063dd62ed3e906111fd9030908790600401611cdb565b60206040518083038186803b15801561121557600080fd5b505afa158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124d9190611c67565b905081811015610e985780156112f9576040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063095ea7b3906112a5908690600090600401611de3565b602060405180830381600087803b1580156112bf57600080fd5b505af11580156112d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f79190611c47565b505b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063095ea7b3906113609086907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90600401611de3565b602060405180830381600087803b15801561137a57600080fd5b505af115801561138e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e9190611c47565b6001546040517f5c11d7950000000000000000000000000000000000000000000000000000000081526001600160a01b03808d1692635c11d79592611405928e928e928e928e9216908d90600401611f92565b600060405180830381600087803b15801561141f57600080fd5b505af1158015611433573d6000803e3d6000fd5b5060009250899150889050611449600182612005565b81811061146657634e487b7160e01b600052603260045260246000fd5b905060200201602081019061147b9190611832565b6001549091506001600160a01b031663641a08f58d83888888888f8f6000816114b457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114c99190611832565b6040518863ffffffff1660e01b81526004016114eb9796959493929190611d19565b602060405180830381600087803b15801561150557600080fd5b505af1158015611519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153d9190611c67565b50505050505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006115fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116389092919063ffffffff16565b805190915015610b5e578080602001905181019061161c9190611c47565b610b5e5760405162461bcd60e51b815260040161059490611f35565b60606116478484600085611651565b90505b9392505050565b6060824710156116735760405162461bcd60e51b815260040161059490611e6c565b61167c85611711565b6116985760405162461bcd60e51b815260040161059490611efe565b600080866001600160a01b031685876040516116b49190611cab565b60006040518083038185875af1925050503d80600081146116f1576040519150601f19603f3d011682016040523d82523d6000602084013e6116f6565b606091505b509150915061170682828661171b565b979650505050505050565b803b15155b919050565b6060831561172a57508161164a565b82511561173a5782518084602001fd5b8160405162461bcd60e51b81526004016105949190611dfc565b60008083601f840112611765578081fd5b50813567ffffffffffffffff81111561177c578182fd5b602083019150836020808302850101111561179657600080fd5b9250929050565b600082601f8301126117ad578081fd5b813567ffffffffffffffff808211156117c8576117c8612054565b6040516020601f19601f85011682010181811083821117156117ec576117ec612054565b604052828152848301602001861015611803578384fd5b82602086016020830137918201602001929092529392505050565b803563ffffffff8116811461171657600080fd5b600060208284031215611843578081fd5b813561164a8161206a565b60006020828403121561185f578081fd5b815161164a8161206a565b60008060006060848603121561187e578182fd5b83356118898161206a565b925060208401356118998161206a565b929592945050506040919091013590565b600080600080600080600060e0888a0312156118c4578283fd5b87356118cf8161206a565b965060208801356118df8161206a565b95506040880135945060608801356118f68161206a565b93506119046080890161181e565b925060a0880135915060c088013567ffffffffffffffff811115611926578182fd5b6119328a828b0161179d565b91505092959891949750929550565b6000806000806000806000806000806101208b8d031215611960578283fd5b8a3561196b8161206a565b995060208b013561197b8161206a565b985060408b0135975061199060608c0161181e565b965060808b0135955060a08b0135945060c08b013567ffffffffffffffff808211156119ba578485fd5b6119c68e838f01611754565b909650945060e08d013593506101008d01359150808211156119e6578283fd5b506119f38d828e0161179d565b9150509295989b9194979a5092959850565b60008060408385031215611a17578182fd5b8235611a228161206a565b946020939093013593505050565b60008060008060008060008060006101008a8c031215611a4e578485fd5b8935611a598161206a565b985060208a0135975060408a013567ffffffffffffffff811115611a7b578586fd5b611a878c828d01611754565b90985096505060608a0135945060808a0135935060a08a0135611aa98161206a565b925060c08a0135611ab98161206a565b915060e08a0135611ac98161206a565b809150509295985092959850929598565b60008060008060808587031215611aef578384fd5b8435611afa8161206a565b935060208501359250604085013591506060850135611b188161206a565b939692955090935050565b60008060008060008060c08789031215611b3b578384fd5b8635611b468161206a565b955060208701359450604087013593506060870135611b648161206a565b92506080870135611b748161206a565b915060a0870135611b848161206a565b809150509295509295509295565b6000806000806000806000806000806101208b8d031215611bb1578384fd5b8a35611bbc8161206a565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115611be5578485fd5b611bf18d828e01611754565b90985096505060808b0135945060a08b0135935060c08b0135611c138161206a565b925060e08b0135611c238161206a565b91506101008b0135611c348161206a565b809150509295989b9194979a5092959850565b600060208284031215611c58578081fd5b8151801515811461164a578182fd5b600060208284031215611c78578081fd5b5051919050565b60008151808452611c97816020860160208601612028565b601f01601f19169290920160200192915050565b60008251611cbd818460208701612028565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03978816815295871660208701526040860194909452918516606085015284166080840152831660a083015290911660c082015260e00190565b60006001600160a01b03808a168352808916602084015287604084015280871660608401525063ffffffff851660808301528360a083015260e060c0830152611da660e0830184611c7f565b9998505050505050505050565b6001600160a01b039586168152938516602085015260408401929092526060830152909116608082015260a00190565b6001600160a01b03929092168252602082015260400190565b60006020825261164a6020830184611c7f565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015611fe4578335611fc98161206a565b6001600160a01b031682529282019290820190600101611fb6565b506001600160a01b0396909616606085015250505060800152949350505050565b60008282101561202357634e487b7160e01b81526011600452602481fd5b500390565b60005b8381101561204357818101518382015260200161202b565b83811115610e985750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461112757600080fdfea264697066735822122044c53bd231d2068f3658e6b687dfafa3ea34f83ac028897c20d6ef7d8bde9afc64736f6c63430008000033";

export class BridgeRouterV12__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRouterV12> {
    return super.deploy(overrides || {}) as Promise<BridgeRouterV12>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRouterV12 {
    return super.attach(address) as BridgeRouterV12;
  }
  connect(signer: Signer): BridgeRouterV12__factory {
    return super.connect(signer) as BridgeRouterV12__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRouterV12Interface {
    return new utils.Interface(_abi) as BridgeRouterV12Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRouterV12 {
    return new Contract(address, _abi, signerOrProvider) as BridgeRouterV12;
  }
}
