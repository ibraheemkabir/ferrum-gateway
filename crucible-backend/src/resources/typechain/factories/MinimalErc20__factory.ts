/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinimalErc20, MinimalErc20Interface } from "../MinimalErc20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208082018084526000808452845192830190945292815281519192909162000042916003916200022f565b508051620000589060049060208401906200022f565b505050600080336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200009a57600080fd5b505af1158015620000af573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000d99190810190620003a2565b806020019051810190620000ee9190620003f4565b825190955090935083908590600590600090620001139060069060208801906200022f565b5050845162000128919060208701906200022f565b50505050506200013f81836200014760201b60201c565b5050620004fb565b6001600160a01b038216620001a25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b6919062000483565b90915550506001600160a01b03821660009081526020819052604081208054839290620001e590849062000483565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200023d90620004a8565b90600052602060002090601f016020900481019282620002615760008555620002ac565b82601f106200027c57805160ff1916838001178555620002ac565b82800160010185558215620002ac579182015b82811115620002ac5782518255916020019190600101906200028f565b50620002ba929150620002be565b5090565b5b80821115620002ba5760008155600101620002bf565b60006001600160401b0380841115620002f257620002f2620004e5565b604051601f8501601f19908116603f011681019082821181831017156200031d576200031d620004e5565b816040528093508581528686860111156200033757600080fd5b600092505b858310156200035c5782850151602084830101526020830192506200033c565b858311156200036f576000602087830101525b5050509392505050565b600082601f8301126200038a578081fd5b6200039b83835160208501620002d5565b9392505050565b600060208284031215620003b4578081fd5b81516001600160401b03811115620003ca578182fd5b8201601f81018413620003db578182fd5b620003ec84825160208401620002d5565b949350505050565b600080600080608085870312156200040a578283fd5b84516001600160401b038082111562000421578485fd5b6200042f8883890162000379565b9550602087015191508082111562000445578485fd5b50620004548782880162000379565b604087015190945090506001600160a01b038116811462000473578283fd5b6060959095015193969295505050565b60008219821115620004a357634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620004bd57607f821691505b60208210811415620004df57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610bf9806200050b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146101d8578063b09f1266146101eb578063d28d8852146101f3578063dd62ed3e146101fb576100f5565b806370a082311461019757806379cc6790146101aa57806395d89b41146101bd578063a457c2d7146101c5576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806342966c6814610182576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610234565b60405161010f9190610af0565b60405180910390f35b61012b610126366004610aaf565b6102c6565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a74565b6102dc565b6040516012815260200161010f565b61012b61017d366004610aaf565b61038b565b610195610190366004610ad8565b6103c7565b005b61013f6101a5366004610a21565b6103d4565b6101956101b8366004610aaf565b6103f3565b610102610479565b61012b6101d3366004610aaf565b610488565b61012b6101e6366004610aaf565b610521565b61010261052e565b6101026105bc565b61013f610209366004610a42565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606005805461024390610b72565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610b72565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b60006102d33384846105c9565b50600192915050565b60006102e98484846106ed565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103735760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61038085338584036105c9565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102d39185906103c2908690610b43565b6105c9565b6103d133826108bc565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b60006103ff8333610209565b90508181101561045d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161036a565b61046a83338484036105c9565b61047483836108bc565b505050565b60606006805461024390610b72565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561050a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161036a565b61051733858584036105c9565b5060019392505050565b60006102d33384846106ed565b6006805461053b90610b72565b80601f016020809104026020016040519081016040528092919081815260200182805461056790610b72565b80156105b45780601f10610589576101008083540402835291602001916105b4565b820191906000526020600020905b81548152906001019060200180831161059757829003601f168201915b505050505081565b6005805461053b90610b72565b6001600160a01b03831661062b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161036a565b6001600160a01b03821661068c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161036a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107515760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161036a565b6001600160a01b0382166107b35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161036a565b6001600160a01b0383166000908152602081905260409020548181101561082b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161036a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610862908490610b43565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ae91815260200190565b60405180910390a350505050565b6001600160a01b03821661091c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161036a565b6001600160a01b038216600090815260208190526040902054818110156109905760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161036a565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109bf908490610b5b565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610474565b80356001600160a01b03811681146103ee57600080fd5b600060208284031215610a32578081fd5b610a3b82610a0a565b9392505050565b60008060408385031215610a54578081fd5b610a5d83610a0a565b9150610a6b60208401610a0a565b90509250929050565b600080600060608486031215610a88578081fd5b610a9184610a0a565b9250610a9f60208501610a0a565b9150604084013590509250925092565b60008060408385031215610ac1578182fd5b610aca83610a0a565b946020939093013593505050565b600060208284031215610ae9578081fd5b5035919050565b6000602080835283518082850152825b81811015610b1c57858101830151858201604001528201610b00565b81811115610b2d5783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b5657610b56610bad565b500190565b600082821015610b6d57610b6d610bad565b500390565b600281046001821680610b8657607f821691505b60208210811415610ba757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209ed970af570050d4a26ead0e1d89bce0bfd705ea0f6d37da417fec740e5810b464736f6c63430008020033";

export class MinimalErc20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalErc20> {
    return super.deploy(overrides || {}) as Promise<MinimalErc20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalErc20 {
    return super.attach(address) as MinimalErc20;
  }
  connect(signer: Signer): MinimalErc20__factory {
    return super.connect(signer) as MinimalErc20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalErc20Interface {
    return new utils.Interface(_abi) as MinimalErc20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalErc20 {
    return new Contract(address, _abi, signerOrProvider) as MinimalErc20;
  }
}
