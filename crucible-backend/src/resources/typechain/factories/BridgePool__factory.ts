/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgePool, BridgePoolInterface } from "../BridgePool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeLiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeLiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetAddrdess",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BridgeSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TransferBySignature",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "allowTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTargets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "disallowTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidityAdder",
        type: "address",
      },
    ],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidityIfPossible",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee10000",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeDistributor",
        type: "address",
      },
    ],
    name: "setFeeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "swapToAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "withdrawSigned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedVerify",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604080518082018252601881527f46455252554d5f544f4b454e5f4252494447455f504f4f4c00000000000000006020808301918252835180850190945260078452660c0c0c0b8c0c0d60ca1b908401528151902060c08190527fa03408cf072d92154dd19fd8cfe404b94d1b795118dd310c162bfba3a3b7aac160e08190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620000c8818484620000ef565b6080526101005250620000e99250620000e39150506200012b565b6200012f565b620001ad565b600083838346306040516020016200010c95949392919062000181565b6040516020818303038152906040528051906020012090509392505050565b3390565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60805160a05160c05160e05161010051612572620001f260003960006115b4015260006115f6015260006115d5015260006115620152600061158b01526125726000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063aa36acfb116100e3578063e91b79bc1161008c578063f3e6ea8a11610066578063f3e6ea8a1461032d578063f851a44014610340578063faaebd21146103485761018d565b8063e91b79bc146102f4578063eb12d61e14610307578063f2fde38b1461031a5761018d565b8063ccfc2e8d116100bd578063ccfc2e8d146102bb578063dcb0f2d3146102ce578063e55156b5146102e15761018d565b8063aa36acfb14610274578063aef18bf714610295578063b2217281146102a85761018d565b80635668870011610145578063736c0d5b1161011f578063736c0d5b146102395780638d6e9291146102595780638da5cb5b1461026c5761018d565b8063566887001461020b578063704b6c021461021e578063715018a6146102315761018d565b8063278c13fe11610176578063278c13fe146101c557806344da8271146101d857806352f9567d146101eb5761018d565b80630d43e8ad146101925780630e316ab7146101b0575b600080fd5b61019a61035b565b6040516101a79190611be3565b60405180910390f35b6101c36101be366004611886565b61036a565b005b61019a6101d3366004611a42565b6103f9565b6101c36101e6366004611a6b565b61041f565b6101fe6101f9366004611aeb565b61051d565b6040516101a7919061244f565b6101c3610219366004611a42565b61055d565b6101c361022c366004611886565b610642565b6101c36106e4565b61024c610247366004611886565b61072f565b6040516101a79190611c9b565b6101fe61026736600461196a565b610744565b61019a61098c565b6102876102823660046118c9565b61099c565b6040516101a7929190611ca6565b61024c6102a3366004611b61565b610a04565b6101fe6102b63660046118a0565b610a19565b6101c36102c9366004611886565b610a44565b6101c36102dc366004611a42565b610ab2565b6101c36102ef366004611a42565b610b82565b6101fe610302366004611a42565b610c33565b6101c3610315366004611886565b610e1b565b6101c3610328366004611886565b610ea4565b6101fe61033b366004611aa6565b610f15565b61019a610f25565b6101fe610356366004611886565b610f34565b6007546001600160a01b031681565b610372610f46565b6001600160a01b031661038361098c565b6001600160a01b0316146103b25760405162461bcd60e51b81526004016103a990612095565b60405180910390fd5b6001600160a01b0381166103d85760405162461bcd60e51b81526004016103a99061205e565b6001600160a01b03166000908152600360205260409020805460ff19169055565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b6002546001600160a01b0316331480610450575061043b61098c565b6001600160a01b0316336001600160a01b0316145b61046c5760405162461bcd60e51b81526004016103a9906120ca565b6001600160a01b0383166104925760405162461bcd60e51b81526004016103a990611ed9565b6001600160a01b0381166104b85760405162461bcd60e51b81526004016103a9906123e1565b816104d55760405162461bcd60e51b81526004016103a99061216f565b6001600160a01b03928316600090815260066020908152604080832094835293905291909120805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b60006001600160a01b0382166105455760405162461bcd60e51b81526004016103a9906121dd565b610553338787878787610f4a565b9695505050505050565b8061057a5760405162461bcd60e51b81526004016103a990612418565b6001600160a01b0382166105a05760405162461bcd60e51b81526004016103a990611ed9565b6105ac823330846110a1565b6001600160a01b03831660009081526004602090815260408083203384529091529020549091506105dd90826111e6565b6001600160a01b03831660009081526004602090815260408083203380855292529182902092909255517fef3f81f7842dc4087d754ab30e98bb596b7345a806ff6db3c82f0c7d77b74960916106369185908590611c2b565b60405180910390a15050565b61064a610f46565b6001600160a01b031661065b61098c565b6001600160a01b0316146106815760405162461bcd60e51b81526004016103a990612095565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556040517f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c906106d9908390611be3565b60405180910390a150565b6106ec610f46565b6001600160a01b03166106fd61098c565b6001600160a01b0316146107235760405162461bcd60e51b81526004016103a990612095565b61072d60006111f9565b565b60036020526000908152604090205460ff1681565b60006001600160a01b03861661076c5760405162461bcd60e51b81526004016103a9906121a6565b6001600160a01b0385166107925760405162461bcd60e51b81526004016103a990612316565b826107af5760405162461bcd60e51b81526004016103a990611ea2565b836107cc5760405162461bcd60e51b81526004016103a990611e0e565b60006107da87878787611258565b905060006107e882856112b3565b6001600160a01b03811660009081526003602052604090205490915060ff166108235760405162461bcd60e51b81526004016103a990612101565b6007546000906001600160a01b0316801561092b576001600160a01b038a1660009081526005602052604090205461086a9061271090610864908b90611314565b90611320565b9150610876888361132c565b9750811561092b576108926001600160a01b038b168284611338565b6040517f7ac097500000000000000000000000000000000000000000000000000000000081526001600160a01b03821690637ac09750906108d7908d90600401611be3565b602060405180830381600087803b1580156108f157600080fd5b505af1158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190611b79565b505b61093f6001600160a01b038b168a8a611338565b7fc9fbf9f295770004fd3f75553aff7c914cfda0e68ae990146b01fcfa48a27635838a8c8b86604051610976959493929190611bf7565b60405180910390a1509598975050505050505050565b6001546001600160a01b03165b90565b60008060006109ad89898989611258565b90506000806109f28388888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113c092505050565b909c909b509950505050505050505050565b60006020819052908152604090205460ff1681565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610a4c610f46565b6001600160a01b0316610a5d61098c565b6001600160a01b031614610a835760405162461bcd60e51b81526004016103a990612095565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002546001600160a01b0316331480610ae35750610ace61098c565b6001600160a01b0316336001600160a01b0316145b610aff5760405162461bcd60e51b81526004016103a9906120ca565b6001600160a01b038216610b255760405162461bcd60e51b81526004016103a990611ed9565b80610b425760405162461bcd60e51b81526004016103a99061216f565b6001600160a01b03909116600090815260066020908152604080832093835292905220805473ffffffffffffffffffffffffffffffffffffffff19169055565b6002546001600160a01b0316331480610bb35750610b9e61098c565b6001600160a01b0316336001600160a01b0316145b610bcf5760405162461bcd60e51b81526004016103a9906120ca565b6001600160a01b038216610bf55760405162461bcd60e51b81526004016103a990611ed9565b6103e8811115610c175760405162461bcd60e51b81526004016103a9906122df565b6001600160a01b03909116600090815260056020526040902055565b600081610c525760405162461bcd60e51b81526004016103a990612418565b6001600160a01b038316610c785760405162461bcd60e51b81526004016103a990611ed9565b6001600160a01b038316600090815260046020908152604080832033845290915290205482811015610cbc5760405162461bcd60e51b81526004016103a99061234d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038616906370a0823190610d04903090600401611be3565b60206040518083038186803b158015610d1c57600080fd5b505afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190611b79565b90506000848211610d655781610d67565b845b6001600160a01b0387166000908152600460209081526040808320338452909152902054909150610d98908261132c565b6001600160a01b03871660009081526004602090815260408083203384529091529020558015610e1257610dd66001600160a01b0387163383611338565b7f5204091f3aba3d16dbb7fcc090386ce24245ac12f57ae5bf9785e0ab9a79be73338787604051610e0993929190611c2b565b60405180910390a15b95945050505050565b610e23610f46565b6001600160a01b0316610e3461098c565b6001600160a01b031614610e5a5760405162461bcd60e51b81526004016103a990612095565b6001600160a01b038116610e805760405162461bcd60e51b81526004016103a99061205e565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b610eac610f46565b6001600160a01b0316610ebd61098c565b6001600160a01b031614610ee35760405162461bcd60e51b81526004016103a990612095565b6001600160a01b038116610f095760405162461bcd60e51b81526004016103a990611e45565b610f12816111f9565b50565b6000610e12338686868633610f4a565b6002546001600160a01b031681565b60056020526000908152604090205481565b3390565b60006001600160a01b038716610f725760405162461bcd60e51b81526004016103a9906122a8565b6001600160a01b038616610f985760405162461bcd60e51b81526004016103a9906121a6565b83610fb55760405162461bcd60e51b81526004016103a990611fca565b6001600160a01b038316610fdb5760405162461bcd60e51b81526004016103a99061223a565b84610ff85760405162461bcd60e51b81526004016103a990611e0e565b6001600160a01b03868116600090815260066020908152604080832088845290915290205481169084161461103f5760405162461bcd60e51b81526004016103a990612138565b61104b868830886110a1565b9450856001600160a01b03167f0752ea9a96cdaf45ba08b0e73e0bbecc3d4a19e96da74d1ac80edea784d4c62c888686868a60405161108e959493929190611c68565b60405180910390a2509295945050505050565b600080856001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016110d09190611be3565b60206040518083038186803b1580156110e857600080fd5b505afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111209190611b79565b90506111376001600160a01b0387168686866113e1565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038816906370a082319061117f908890600401611be3565b60206040518083038186803b15801561119757600080fd5b505afa1580156111ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cf9190611b79565b90506111db818361132c565b979650505050505050565b60006111f28284612458565b9392505050565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60007fbf78e0e468a2675e8ce0f0c1c79b1d9da1bf9cdef7cb74b324d5f733249250c785858585604051602001611293959493929190611cbd565b604051602081830303815290604052805190602001209050949350505050565b6000806112c084846113c0565b60008281526020819052604090205490935090915060ff16156112f55760405162461bcd60e51b81526004016103a990611da0565b6000908152602081905260409020805460ff1916600117905592915050565b60006111f28284612490565b60006111f28284612470565b60006111f282846124cd565b6113bb8363a9059cbb60e01b8484604051602401611357929190611c4f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611408565b505050565b6000806113cc84611497565b91506113d882846114b2565b90509250929050565b611402846323b872dd60e01b85858560405160240161135793929190611c2b565b50505050565b600061145d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115479092919063ffffffff16565b8051909150156113bb578080602001905181019061147b9190611b41565b6113bb5760405162461bcd60e51b81526004016103a990612384565b60006114aa6114a461155e565b83611621565b90505b919050565b6000806000808451604114156114dc5750505060208201516040830151606084015160001a61153b565b8451604014156115235750505060408201516020830151907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81169060ff1c601b0161153b565b60405162461bcd60e51b81526004016103a990611dd7565b61055386828585611654565b60606115568484600085611741565b949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156115af57507f0000000000000000000000000000000000000000000000000000000000000000610999565b61161a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006117f6565b9050610999565b60008282604051602001611636929190611bad565b60405160208183030381529060405280519060200120905092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156116965760405162461bcd60e51b81526004016103a990611f10565b8360ff16601b14806116ab57508360ff16601c145b6116c75760405162461bcd60e51b81526004016103a990612001565b6000600186868686604051600081526020016040526040516116ec9493929190611d18565b6020604051602081039080840390855afa15801561170e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e125760405162461bcd60e51b81526004016103a990611d69565b6060824710156117635760405162461bcd60e51b81526004016103a990611f6d565b61176c85611830565b6117885760405162461bcd60e51b81526004016103a990612271565b600080866001600160a01b031685876040516117a49190611b91565b60006040518083038185875af1925050503d80600081146117e1576040519150601f19603f3d011682016040523d82523d6000602084013e6117e6565b606091505b50915091506111db828286611836565b60008383834630604051602001611811959493929190611cec565b6040516020818303038152906040528051906020012090509392505050565b3b151590565b606083156118455750816111f2565b8251156118555782518084602001fd5b8160405162461bcd60e51b81526004016103a99190611d36565b80356001600160a01b03811681146114ad57600080fd5b600060208284031215611897578081fd5b6111f28261186f565b600080604083850312156118b2578081fd5b6118bb8361186f565b91506113d86020840161186f565b60008060008060008060a087890312156118e1578182fd5b6118ea8761186f565b95506118f86020880161186f565b94506040870135935060608701359250608087013567ffffffffffffffff80821115611922578384fd5b818901915089601f830112611935578384fd5b813581811115611943578485fd5b8a6020828501011115611954578485fd5b6020830194508093505050509295509295509295565b600080600080600060a08688031215611981578081fd5b61198a8661186f565b9450602061199981880161186f565b94506040870135935060608701359250608087013567ffffffffffffffff808211156119c3578384fd5b818901915089601f8301126119d6578384fd5b8135818111156119e8576119e8612526565b60405184601f19601f8401168201018181108482111715611a0b57611a0b612526565b60405281815283820185018c1015611a21578586fd5b81858501868301378585838301015280955050505050509295509295909350565b60008060408385031215611a54578182fd5b611a5d8361186f565b946020939093013593505050565b600080600060608486031215611a7f578283fd5b611a888461186f565b925060208401359150611a9d6040850161186f565b90509250925092565b60008060008060808587031215611abb578384fd5b611ac48561186f565b93506020850135925060408501359150611ae06060860161186f565b905092959194509250565b600080600080600060a08688031215611b02578081fd5b611b0b8661186f565b94506020860135935060408601359250611b276060870161186f565b9150611b356080870161186f565b90509295509295909350565b600060208284031215611b52578081fd5b815180151581146111f2578182fd5b600060208284031215611b72578081fd5b5035919050565b600060208284031215611b8a578081fd5b5051919050565b60008251611ba38184602087016124e4565b9190910192915050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b901515815260200190565b9182526001600160a01b0316602082015260400190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082528251806020840152611d558160408501602087016124e4565b601f01601f19169190910160400192915050565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b60208082526014908201527f4d65737361676520616c72656164792075736564000000000000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252600e908201527f42503a2062616420616d6f756e74000000000000000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600c908201527f42503a206261642073616c740000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f42616420746f6b656e0000000000000000000000000000000000000000000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f42503a207461726765744e6574776f726b206973207265717572696564000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60408201527f7565000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600a908201527f426164207369676e657200000000000000000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600d908201527f57413a206e6f742061646d696e00000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f427269646765506f6f6c3a20496e76616c6964207369676e6572000000000000604082015260600190565b60208082526016908201527f42503a20746172676574206e6f7420616c6c6f77656400000000000000000000604082015260600190565b6020808252600b908201527f42616420636861696e4964000000000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f42503a2062616420746f6b656e00000000000000000000000000000000000000604082015260600190565b60208082526025908201527f427269646765506f6f6c3a20746172676574416464726573732069732072657160408201527f7569726564000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526014908201527f42503a206261642074617267657420746f6b656e000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600c908201527f42503a206261642066726f6d0000000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f46656520746f6f206c6172676500000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f42503a2062616420706179656500000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4e6f7420656e6f756768206c6971756964697479000000000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f42616420746172676574546f6b656e0000000000000000000000000000000000604082015260600190565b60208082526017908201527f416d6f756e74206d75737420626520706f736974697665000000000000000000604082015260600190565b90815260200190565b6000821982111561246b5761246b612510565b500190565b60008261248b57634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124c8576124c8612510565b500290565b6000828210156124df576124df612510565b500390565b60005b838110156124ff5781810151838201526020016124e7565b838111156114025750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122083b532521d6bfb90bc97ee18d7b4e084caf2c458686076bbf098213a379f78ec64736f6c63430008000033";

export class BridgePool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgePool> {
    return super.deploy(overrides || {}) as Promise<BridgePool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgePool {
    return super.attach(address) as BridgePool;
  }
  connect(signer: Signer): BridgePool__factory {
    return super.connect(signer) as BridgePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgePoolInterface {
    return new utils.Interface(_abi) as BridgePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgePool {
    return new Contract(address, _abi, signerOrProvider) as BridgePool;
  }
}
