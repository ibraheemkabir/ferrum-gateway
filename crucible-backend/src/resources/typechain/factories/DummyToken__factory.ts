/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DummyToken, DummyTokenInterface } from "../DummyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020016444756d6d7960d81b8152506040518060400160405280600381526020016211135560ea1b81525081600390805190602001906200006492919062000214565b5080516200007a90600490602084019062000214565b5050506000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000bb57600080fd5b505af1158015620000d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000fa9190810190620002ea565b8060200190518101906200010f9190620002ba565b90506200012681683635c9adc5dea000006200012d565b5062000471565b6001600160a01b0382166200015f5760405162461bcd60e51b81526004016200015690620003b9565b60405180910390fd5b6200016d600083836200020f565b8060026000828254620001819190620003f9565b90915550506001600160a01b03821660009081526020819052604081208054839290620001b0908490620003f9565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001f5908590620003f0565b60405180910390a36200020b600083836200020f565b5050565b505050565b82805462000222906200041e565b90600052602060002090601f01602090048101928262000246576000855562000291565b82601f106200026157805160ff191683800117855562000291565b8280016001018555821562000291579182015b828111156200029157825182559160200191906001019062000274565b506200029f929150620002a3565b5090565b5b808211156200029f5760008155600101620002a4565b600060208284031215620002cc578081fd5b81516001600160a01b0381168114620002e3578182fd5b9392505050565b60006020808385031215620002fd578182fd5b82516001600160401b038082111562000314578384fd5b818501915085601f83011262000328578384fd5b8151818111156200033d576200033d6200045b565b604051601f8201601f19168101850183811182821017156200036357620003636200045b565b60405281815283820185018810156200037a578586fd5b8592505b818310156200039d57838301850151818401860152918401916200037e565b81831115620003ae57858583830101525b979650505050505050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200041957634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200043357607f821691505b602082108114156200045557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610db880620004816000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b41146101ad578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db576100df565b806342966c681461017257806370a082311461018757806379cc67901461019a576100df565b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a578063395093511461015f576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610122575b600080fd5b6100ec6101ee565b6040516100f991906108a6565b60405180910390f35b61011561011036600461085a565b610280565b6040516100f9919061089b565b61012a61029d565b6040516100f99190610cb9565b61011561014536600461081f565b6102a3565b61015261033c565b6040516100f99190610cc2565b61011561016d36600461085a565b610341565b610185610180366004610883565b610395565b005b61012a6101953660046107cc565b6103a9565b6101856101a836600461085a565b6103c8565b6100ec61041b565b6101156101c336600461085a565b61042a565b6101156101d636600461085a565b6104a3565b61012a6101e93660046107ed565b6104b7565b6060600380546101fd90610cff565b80601f016020809104026020016040519081016040528092919081815260200182805461022990610cff565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b600061029461028d6104e2565b84846104e6565b50600192915050565b60025490565b60006102b084848461059a565b6001600160a01b0384166000908152600160205260408120816102d16104e2565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561031d5760405162461bcd60e51b815260040161031490610a8b565b60405180910390fd5b610331856103296104e2565b8584036104e6565b506001949350505050565b601290565b600061029461034e6104e2565b84846001600061035c6104e2565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103909190610cd0565b6104e6565b6103a66103a06104e2565b826106c4565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b60006103d6836101e96104e2565b9050818110156103f85760405162461bcd60e51b815260040161031490610ae8565b61040c836104046104e2565b8484036104e6565b61041683836106c4565b505050565b6060600480546101fd90610cff565b600080600160006104396104e2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104855760405162461bcd60e51b815260040161031490610c5c565b6104996104906104e2565b858584036104e6565b5060019392505050565b60006102946104b06104e2565b848461059a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661050c5760405162461bcd60e51b815260040161031490610bff565b6001600160a01b0382166105325760405162461bcd60e51b8152600401610314906109d1565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061058d908590610cb9565b60405180910390a3505050565b6001600160a01b0383166105c05760405162461bcd60e51b815260040161031490610ba2565b6001600160a01b0382166105e65760405162461bcd60e51b815260040161031490610917565b6105f1838383610416565b6001600160a01b0383166000908152602081905260409020548181101561062a5760405162461bcd60e51b815260040161031490610a2e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610661908490610cd0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ab9190610cb9565b60405180910390a36106be848484610416565b50505050565b6001600160a01b0382166106ea5760405162461bcd60e51b815260040161031490610b45565b6106f682600083610416565b6001600160a01b0382166000908152602081905260409020548181101561072f5760405162461bcd60e51b815260040161031490610974565b6001600160a01b038316600090815260208190526040812083830390556002805484929061075e908490610ce8565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107a1908690610cb9565b60405180910390a361041683600084610416565b80356001600160a01b03811681146103c357600080fd5b6000602082840312156107dd578081fd5b6107e6826107b5565b9392505050565b600080604083850312156107ff578081fd5b610808836107b5565b9150610816602084016107b5565b90509250929050565b600080600060608486031215610833578081fd5b61083c846107b5565b925061084a602085016107b5565b9150604084013590509250925092565b6000806040838503121561086c578182fd5b610875836107b5565b946020939093013593505050565b600060208284031215610894578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156108d2578581018301518582016040015282016108b6565b818111156108e35783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760408201527f616e636500000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610ce357610ce3610d53565b500190565b600082821015610cfa57610cfa610d53565b500390565b600281046001821680610d1357607f821691505b60208210811415610d4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220159ae247e6f376ee21c69be470343194af5d78a1ab2cba2cacfddbff95c43b0e64736f6c63430008000033";

export class DummyToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyToken> {
    return super.deploy(overrides || {}) as Promise<DummyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyToken {
    return super.attach(address) as DummyToken;
  }
  connect(signer: Signer): DummyToken__factory {
    return super.connect(signer) as DummyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyTokenInterface {
    return new utils.Interface(_abi) as DummyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyToken {
    return new Contract(address, _abi, signerOrProvider) as DummyToken;
  }
}
