/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingTokenPool,
  StakingTokenPoolInterface,
} from "../StakingTokenPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50600080336001600160a01b031663890357306040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005157600080fd5b505af115801562000066573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009091908101906200030d565b80516000908190620000aa9060019060208601906200019f565b50508251620000bf919060208501906200019f565b5050506001600160601b0319606093841b811660805282841b811660a0529281901b90921660c05260405163cabeb62560e01b81529093509091506001600160a01b0383169063cabeb625906200011b908490600401620003d6565b60206040518083038186803b1580156200013457600080fd5b505afa15801562000149573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016f9190620003ad565b620001975760405162461bcd60e51b81526004016200018e90620003ea565b60405180910390fd5b505062000474565b828054620001ad9062000421565b90600052602060002090601f016020900481019282620001d157600085556200021c565b82601f10620001ec57805160ff19168380011785556200021c565b828001600101855582156200021c579182015b828111156200021c578251825591602001919060010190620001ff565b506200022a9291506200022e565b5090565b5b808211156200022a57600081556001016200022f565b80516001600160a01b03811681146200025d57600080fd5b919050565b600082601f83011262000273578081fd5b81516001600160401b03808211156200029057620002906200045e565b6040516020601f8401601f1916820181018381118382101715620002b857620002b86200045e565b6040528382528584018101871015620002cf578485fd5b8492505b83831015620002f25785830181015182840182015291820191620002d3565b838311156200030357848185840101525b5095945050505050565b600080600080600060a0868803121562000325578081fd5b620003308662000245565b9450620003406020870162000245565b9350620003506040870162000245565b60608701519093506001600160401b03808211156200036d578283fd5b6200037b89838a0162000262565b9350608088015191508082111562000391578283fd5b50620003a08882890162000262565b9150509295509295909350565b600060208284031215620003bf578081fd5b81518015158114620003cf578182fd5b9392505050565b6001600160a01b0391909116815260200190565b6020808252601c908201527f5354503a20706f6f6c206973206e6f7420746f6b656e697a61626c6500000000604082015260600190565b6002810460018216806200043657607f821691505b602082108114156200045857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c60c05160601c6109e2620004d7600039600081816102be0152818161042b015281816104bc0152610607015260008181610291015281816103a4015281816103fe01526105da015260006104ed01526109e26000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb1461018c578063c45a01551461019f578063dd62ed3e146101a7576100d4565b806370a082311461016957806395d89b411461017c578063a46c850514610184576100d4565b806323b872dd116100b257806323b872dd1461012c57806325b15a0c1461013f578063313ce56714610154576100d4565b806306fdde03146100d9578063095ea7b3146100f757806318160ddd14610117575b600080fd5b6100e16101ba565b6040516100ee9190610894565b60405180910390f35b61010a6101053660046107cd565b610248565b6040516100ee9190610889565b61011f61025e565b6040516100ee9190610905565b61010a61013a366004610792565b61033b565b6101476103a2565b6040516100ee9190610831565b61015c6103c6565b6040516100ee919061090e565b61011f610177366004610746565b6103cb565b6100e16104ad565b6101476104ba565b61010a61019a3660046107cd565b6104de565b6101476104eb565b61011f6101b5366004610760565b61050f565b600080546101c790610958565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610958565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b505050505081565b600061025533848461052c565b50600192915050565b6040517f602172670000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906360217267906102e6907f000000000000000000000000000000000000000000000000000000000000000090600401610831565b60206040518083038186803b1580156102fe57600080fd5b505afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033691906107f6565b905090565b6001600160a01b03831660009081526002602090815260408083203384529091528120546103699083610594565b6001600160a01b03851660009081526002602090815260408083203384529091529020556103988484846105a7565b5060019392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b6040517fce4cb8760000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ce4cb87690610455907f0000000000000000000000000000000000000000000000000000000000000000908690600401610845565b60206040518083038186803b15801561046d57600080fd5b505afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a591906107f6565b90505b919050565b600180546101c790610958565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006102553384846105a7565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260209081526000928352604080842090915290825290205481565b6001600160a01b0380841660008181526002602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610587908590610905565b60405180910390a3505050565b60006105a0828461091c565b9392505050565b6040517f15dacbea0000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90610635907f00000000000000000000000000000000000000000000000000000000000000009088908890889060040161085f565b6040805180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610686919061080e565b909250905080156106de5760006001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106d59190610905565b60405180910390a35b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107219190610905565b60405180910390a350505050565b80356001600160a01b03811681146104a857600080fd5b600060208284031215610757578081fd5b6105a08261072f565b60008060408385031215610772578081fd5b61077b8361072f565b91506107896020840161072f565b90509250929050565b6000806000606084860312156107a6578081fd5b6107af8461072f565b92506107bd6020850161072f565b9150604084013590509250925092565b600080604083850312156107df578182fd5b6107e88361072f565b946020939093013593505050565b600060208284031215610807578081fd5b5051919050565b60008060408385031215610820578182fd5b505080516020909101519092909150565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b901515815260200190565b6000602080835283518082850152825b818110156108c0578581018301518582016040015282016108a4565b818111156108d15783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b90815260200190565b60ff91909116815260200190565b600082821015610953577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500390565b60028104600182168061096c57607f821691505b602082108114156109a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220169c238d34f44e332bd2dfc89d6761d2623a85422b9fe71ce3d243db79d8203564736f6c63430008000033";

export class StakingTokenPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingTokenPool> {
    return super.deploy(overrides || {}) as Promise<StakingTokenPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingTokenPool {
    return super.attach(address) as StakingTokenPool;
  }
  connect(signer: Signer): StakingTokenPool__factory {
    return super.connect(signer) as StakingTokenPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingTokenPoolInterface {
    return new utils.Interface(_abi) as StakingTokenPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingTokenPool {
    return new Contract(address, _abi, signerOrProvider) as StakingTokenPool;
  }
}
