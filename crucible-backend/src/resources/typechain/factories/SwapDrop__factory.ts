/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapDrop, SwapDropInterface } from "../SwapDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tok",
        type: "address",
      },
    ],
    name: "SwapMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "SwapTaken",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_RATIO_X10000",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "make",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "makers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveTokenFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "takeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPriceX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPriceX128",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "feeFromIn",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "signatureExpiry",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "topUp",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604080518082018252601081526f046455252554d5f535741505f44524f560841b60208083019182528351808501855260078152663030302e30303160c81b9082015260016000559151902060c08181527f216997d4e5731c53bb28f92073a02b69ff283b713a79ae155248b0198261acf960e08190524660a081815286517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818901969096526060810193909352608080840192909252308382015286518084039091018152919092019094528351939092019290922090526101005260805160a05160c05160e05161010051611b0661013a6000396000611184015260006111d3015260006111ae01526000611130015260006111590152611b066000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a656b35011610071578063a656b3501461015d578063aef18bf714610166578063b5fd282a14610199578063c74073a1146101b9578063d488126c146101cc578063e4860339146101fa576100a9565b80631bbed321146100ae57806327e235e3146100d4578063362aecb1146100f45780638c06085514610135578063a3b660aa14610148575b600080fd5b6100c16100bc3660046117b3565b610223565b6040519081526020015b60405180910390f35b6100c16100e23660046117b3565b60056020526000908152604090205481565b61011d6101023660046117b3565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100cb565b6100c16101433660046117cd565b6102c7565b61015b6101563660046118e3565b610495565b005b6100c161012c81565b61018961017436600461193a565b60026020526000908152604090205460ff1681565b60405190151581526020016100cb565b6100c16101a73660046117b3565b60016020526000908152604090205481565b61015b6101c73660046117b3565b6104dc565b6101df6101da366004611820565b61066b565b604080519384526020840192909252908201526060016100cb565b61011d6102083660046117b3565b6003602052600090815260409020546001600160a01b031681565b60006001600160a01b0382166102545760405162461bcd60e51b815260040161024b906119b9565b60405180910390fd5b6001600160a01b0380831660009081526003602052604090205416806102b45760405162461bcd60e51b815260206004820152601560248201527414d10e881a5908191bd95cc81b9bdd08195e1a5cdd605a1b604482015260640161024b565b6102c0836000836109f3565b9392505050565b60006001600160a01b0385166103145760405162461bcd60e51b815260206004820152601260248201527114d10e881d1bc81a5cc81c995c5d5c9a595960721b604482015260640161024b565b6001600160a01b03841661033a5760405162461bcd60e51b815260040161024b906119b9565b6001600160a01b0383166103885760405162461bcd60e51b815260206004820152601560248201527414d10e881d1bdad95b881a5cc81c995c5d5c9a5959605a1b604482015260640161024b565b6001600160a01b0384811660009081526003602052604090205416156103e85760405162461bcd60e51b815260206004820152601560248201527453443a20696420616c72656164792065786973747360581b604482015260640161024b565b846001600160a01b0316826001600160a01b03161461043a5760405162461bcd60e51b815260206004820152600e60248201526d29a21d103130b21039b4b3b732b960911b604482015260640161024b565b6001600160a01b03848116600090815260046020908152604080832080546001600160a01b03199081168b8716179091556003909252909120805490911691851691909117905561048c8486856109f3565b95945050505050565b600260005414156104b85760405162461bcd60e51b815260040161024b906119e5565b60026000556104d26001600160a01b038416833084610acf565b5050600160005550565b6001600160a01b0381166105025760405162461bcd60e51b815260040161024b906119b9565b6001600160a01b038082166000908152600460205260409020541633811461056c5760405162461bcd60e51b815260206004820152601760248201527f53443a204e6f742074686520706f6f6c207369676e6572000000000000000000604482015260640161024b565b6001600160a01b038216600090815260056020526040902054806105d25760405162461bcd60e51b815260206004820152601760248201527f53443a204e6f2062616c616e636520746f20636c6f7365000000000000000000604482015260640161024b565b6001600160a01b03808416600090815260036020526040902054166105f8818484610b40565b6001600160a01b0384811660008181526005602090815260408083208390558051938452878516918401919091529284168284015260608201859052608082015290517f3d12274f75d0bc317535591ea1b16004ae80f6ee9e4b990deeaed28e925ab5249181900360a00190a150505050565b600080806001600160a01b038d166106ba5760405162461bcd60e51b815260206004820152601260248201527114d10e881d1bc81a5cc81c995c5d5c9a595960721b604482015260640161024b565b6001600160a01b038c166106e05760405162461bcd60e51b815260040161024b906119b9565b6001600160a01b038b166107365760405162461bcd60e51b815260206004820152601760248201527f53443a20746f6b656e496e206973207265717572696564000000000000000000604482015260640161024b565b8961077c5760405162461bcd60e51b815260206004820152601660248201527514d10e88185b5bdd5b9d081a5cc81c995c5d5c9a595960521b604482015260640161024b565b886107c55760405162461bcd60e51b815260206004820152601960248201527814d10e881c1c9a58d9560c4c8e081a5cc81c995c5d5c9a5959603a1b604482015260640161024b565b8761080e5760405162461bcd60e51b815260206004820152601960248201527814d10e881c1c9a58d9560c4c8e081a5cc81c995c5d5c9a5959603a1b604482015260640161024b565b428663ffffffff16116108575760405162461bcd60e51b815260206004820152601160248201527014d10e881c1c9a58d948195e1c1a5c9959607a1b604482015260640161024b565b6001600160a01b03808d1660008181526004602090815260408083205481517f867a782c6a7e96411f7d5ae2bffa3368ef2de8fc188a61a311d1e337540b6a7f93810193909352908201939093528e84166060820152608081018d905260a081018c905263ffffffff8a1660c082015260e081018990529190921691906101000160405160208183030381529060405280519060200120905060006108fc8288610bb2565b915050826001600160a01b0316816001600160a01b0316146109515760405162461bcd60e51b815260206004820152600e60248201526d29a21d102130b21039b4b3b732b960911b604482015260640161024b565b505061095c8c610bd3565b93508a9250600061096d8585610cb9565b905089811115801561097f57508a8110155b6109cb5760405162461bcd60e51b815260206004820152601d60248201527f53443a2061637475616c207072696365206f7574206f662072616e6765000000604482015260640161024b565b506109dc8e8e8e8e8888878f610cca565b935093509350509a509a509a975050505050505050565b60006109fe82610bd3565b905080610a425760405162461bcd60e51b815260206004820152601260248201527153443a20616d6f756e74206973207a65726f60701b604482015260640161024b565b6001600160a01b038416600090815260056020526040902054610a659082610de8565b6001600160a01b03858116600081815260056020908152604091829020949094558051918252868316938201939093529084168183015290517f0644a06cfc600fd0f40d2559cfa4d08d4d634b9d49e9f0dc1134267a39013d3b9181900360600190a19392505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610b3a9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610df4565b50505050565b60026000541415610b635760405162461bcd60e51b815260040161024b906119e5565b600260009081556001600160a01b038416815260016020526040902054610b8b908290611a53565b6001600160a01b0384166000818152600160205260409020919091556104d2908383610ecb565b600080610bbe84610efb565b9150610bca8284610f51565b90509250929050565b600060026000541415610bf85760405162461bcd60e51b815260040161024b906119e5565b600260009081556001600160a01b038316808252600160205260408083205490516370a0823160e01b8152306004820152909291906370a082319060240160206040518083038186803b158015610c4e57600080fd5b505afa158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190611952565b9050610c928282611a53565b6001600160a01b039094166000908152600160208190526040822092909255555090919050565b60006102c082600160801b85610f75565b6001600160a01b0380881660009081526003602052604081205490918291829116610cf6818d89610b40565b8415610d1b57610d088861012c6110fa565b9150610d148883611109565b9750610d36565b610d278761012c6110fa565b9150610d338783611109565b96505b610d418a878a610b40565b6001600160a01b038b16600090815260056020526040902054610d64908a611109565b6001600160a01b038c81166000818152600560209081526040918290209490945580519182528f831693820193909352908c1681830152606081018a90526080810184905290517f3d12274f75d0bc317535591ea1b16004ae80f6ee9e4b990deeaed28e925ab5249181900360a00190a150959a9499509497509295505050505050565b60006102c08284611a1c565b6000610e49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111159092919063ffffffff16565b805190915015610ec65780806020019051810190610e67919061191e565b610ec65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161024b565b505050565b6040516001600160a01b038316602482015260448101829052610ec690849063a9059cbb60e01b90606401610b03565b6000610f49610f0861112c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b90505b919050565b6000806000610f608585611222565b91509150610f6d81611292565b509392505050565b600080806000198587098587029250828110838203039150508060001415610faf5760008411610fa457600080fd5b5082900490506102c0565b808411610fbb57600080fd5b600084868809808403938111909203919050600085610fdc81600019611a53565b610fe7906001611a1c565b169586900495938490049360008190030460010190506110078184611a34565b909317926000611018876003611a34565b60021890506110278188611a34565b611032906002611a53565b61103c9082611a34565b90506110488188611a34565b611053906002611a53565b61105d9082611a34565b90506110698188611a34565b611074906002611a53565b61107e9082611a34565b905061108a8188611a34565b611095906002611a53565b61109f9082611a34565b90506110ab8188611a34565b6110b6906002611a53565b6110c09082611a34565b90506110cc8188611a34565b6110d7906002611a53565b6110e19082611a34565b90506110ed8186611a34565b9998505050505050505050565b60006102c08383612710610f75565b60006102c08284611a53565b60606111248484600085611498565b949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561117d57507f000000000000000000000000000000000000000000000000000000000000000061121f565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c090920190925280519101205b90565b6000808251604114156112595760208301516040840151606085015160001a61124d878285856115c0565b9450945050505061128b565b82516040141561128357602083015160408401516112788683836116ad565b93509350505061128b565b506000905060025b9250929050565b60008160048111156112b457634e487b7160e01b600052602160045260246000fd5b14156112bf57611495565b60018160048111156112e157634e487b7160e01b600052602160045260246000fd5b141561132f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161024b565b600281600481111561135157634e487b7160e01b600052602160045260246000fd5b141561139f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161024b565b60038160048111156113c157634e487b7160e01b600052602160045260246000fd5b141561141a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161024b565b600481600481111561143c57634e487b7160e01b600052602160045260246000fd5b14156114955760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161024b565b50565b6060824710156114f95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161024b565b843b6115475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161024b565b600080866001600160a01b03168587604051611563919061196a565b60006040518083038185875af1925050503d80600081146115a0576040519150601f19603f3d011682016040523d82523d6000602084013e6115a5565b606091505b50915091506115b58282866116dc565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115f757506000905060036116a4565b8460ff16601b1415801561160f57508460ff16601c14155b1561162057506000905060046116a4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611674573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661169d576000600192509250506116a4565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b016116ce878288856115c0565b935093505050935093915050565b606083156116eb5750816102c0565b8251156116fb5782518084602001fd5b8160405162461bcd60e51b815260040161024b9190611986565b80356001600160a01b0381168114610f4c57600080fd5b600082601f83011261173c578081fd5b813567ffffffffffffffff8082111561175757611757611aac565b604051601f8301601f19908116603f0116810190828211818310171561177f5761177f611aac565b81604052838152866020858801011115611797578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156117c4578081fd5b6102c082611715565b600080600080608085870312156117e2578283fd5b6117eb85611715565b93506117f960208601611715565b925061180760408601611715565b915061181560608601611715565b905092959194509250565b6000806000806000806000806000806101408b8d03121561183f578586fd5b6118488b611715565b995061185660208c01611715565b985061186460408c01611715565b975060608b0135965060808b0135955060a08b0135945060c08b013561188981611ac2565b935060e08b013563ffffffff811681146118a1578384fd5b92506101008b013591506101208b013567ffffffffffffffff8111156118c5578182fd5b6118d18d828e0161172c565b9150509295989b9194979a5092959850565b6000806000606084860312156118f7578283fd5b61190084611715565b925061190e60208501611715565b9150604084013590509250925092565b60006020828403121561192f578081fd5b81516102c081611ac2565b60006020828403121561194b578081fd5b5035919050565b600060208284031215611963578081fd5b5051919050565b6000825161197c818460208701611a6a565b9190910192915050565b60006020825282518060208401526119a5816040850160208701611a6a565b601f01601f19169190910160400192915050565b60208082526012908201527114d10e881a59081a5cc81c995c5d5c9a595960721b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611a2f57611a2f611a96565b500190565b6000816000190483118215151615611a4e57611a4e611a96565b500290565b600082821015611a6557611a65611a96565b500390565b60005b83811015611a85578181015183820152602001611a6d565b83811115610b3a5750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461149557600080fdfea2646970667358221220ec4b3d7c298fe41d1867a8091063b92375d0874bead911e2b12778f868b9b3ae64736f6c63430008020033";

export class SwapDrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapDrop> {
    return super.deploy(overrides || {}) as Promise<SwapDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapDrop {
    return super.attach(address) as SwapDrop;
  }
  connect(signer: Signer): SwapDrop__factory {
    return super.connect(signer) as SwapDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDropInterface {
    return new utils.Interface(_abi) as SwapDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDrop {
    return new Contract(address, _abi, signerOrProvider) as SwapDrop;
  }
}
