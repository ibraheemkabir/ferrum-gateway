/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiChainToken,
  MultiChainTokenInterface,
} from "../MultiChainToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintChain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnChain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
    ],
    name: "mintAndBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_qp",
        type: "address",
      },
    ],
    name: "setQuantumPortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405269152d02c7e14af68000006006553480156200001f57600080fd5b506040518060400160405280601981526020017f4578616d706c65206d756c74692d636861696e20746f6b656e00000000000000815250604051806040016040528060038152602001621350d560ea1b81525081600390805190602001906200008a92919062000119565b508051620000a090600490602084019062000119565b505050620000bd620000b7620000c360201b60201c565b620000c7565b620001fc565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012790620001bf565b90600052602060002090601f0160209004810192826200014b576000855562000196565b82601f106200016657805160ff191683800117855562000196565b8280016001018555821562000196579182015b828111156200019657825182559160200191906001019062000179565b50620001a4929150620001a8565b5090565b5b80821115620001a45760008155600101620001a9565b600281046001821680620001d457607f821691505b60208210811415620001f657634e487b7160e01b600052602260045260246000fd5b50919050565b6114b3806200020c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063a501e1fb11610071578063a501e1fb14610271578063a9059cbb14610284578063dd62ed3e14610297578063deb0bc13146102d0578063f2fde38b146102e35761012c565b80638da5cb5b1461022a57806395d89b411461023b5780639dc29fac146102435780639fc5ce2a14610256578063a457c2d71461025e5761012c565b806339509351116100f457806339509351146101a657806340c10f19146101b95780636425666b146101ce57806370a08231146101f9578063715018a6146102225761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102f6565b6040516101469190611369565b60405180910390f35b61016261015d366004611275565b610388565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004611235565b61039e565b60405160128152602001610146565b6101626101b4366004611275565b61044d565b6101cc6101c7366004611275565b610489565b005b6007546101e1906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101766102073660046111be565b6001600160a01b031660009081526020819052604090205490565b6101cc61056c565b6005546001600160a01b03166101e1565b6101396105a2565b6101cc610251366004611275565b6105b1565b6101cc61068e565b61016261026c366004611275565b61075a565b6101cc61027f3660046111be565b6107f3565b610162610292366004611275565b61083f565b6101766102a53660046111fd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cc6102de3660046112e4565b61084c565b6101cc6102f13660046111be565b610bb9565b60606003805461030590611417565b80601f016020809104026020016040519081016040528092919081815260200182805461033190611417565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b6000610395338484610c54565b50600192915050565b60006103ab848484610d79565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104355760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104428533858403610c54565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906104849086906113e8565b610c54565b6007546040805163d737d0c760e01b8152815160009384936001600160a01b039091169263d737d0c79260048083019392829003018186803b1580156104ce57600080fd5b505afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906112c0565b9150915060648214801561052257506001600160a01b03811630145b61055c5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161042c565b6105668484610f47565b50505050565b6005546001600160a01b031633146105965760405162461bcd60e51b815260040161042c9061137c565b6105a06000611026565b565b60606004805461030590611417565b6007546040805163d737d0c760e01b8152815160009384936001600160a01b039091169263d737d0c79260048083019392829003018186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e91906112c0565b9150915060648214801561064a57506001600160a01b03811630145b6106845760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161042c565b6105668484611078565b6005546001600160a01b031633146106b85760405162461bcd60e51b815260040161042c9061137c565b600254156106fe5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161042c565b6064461461074e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920696e697469616c697a65206f6e206d617374657220636861696e00604482015260640161042c565b6105a033600654610f47565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107dc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042c565b6107e93385858403610c54565b5060019392505050565b6005546001600160a01b0316331461081d5760405162461bcd60e51b815260040161042c9061137c565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000610395338484610d79565b6007546040805163d0fb020360e01b815290516000926001600160a01b03169163d0fb0203916004808301926020929190829003018186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c991906111e1565b9050806001600160a01b031663647846a56040518163ffffffff1660e01b815260040160206040518083038186803b15801561090457600080fd5b505afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c91906111e1565b6001600160a01b03166323b872dd338361095686886113e8565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156109a557600080fd5b505af11580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd91906112a0565b506040516380352cfd60e01b81523060048201526001600160a01b038216906380352cfd90602401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b5050505046861415610a4e57610a493385610f47565b610af4565b60408051336024820152604480820187905282518083039091018152606490910182526020810180516001600160e01b03166340c10f1960e01b179052600754915163b912c40960e01b815290916001600160a01b03169063b912c40990610ac09087908b90309087906004016113b1565b600060405180830381600087803b158015610ada57600080fd5b505af1158015610aee573d6000803e3d6000fd5b50505050505b46851415610b0b57610b063385611078565b610bb1565b60408051336024820152604480820187905282518083039091018152606490910182526020810180516001600160e01b0316632770a7eb60e21b179052600754915163b912c40960e01b815290916001600160a01b03169063b912c40990610b7d9086908a90309087906004016113b1565b600060405180830381600087803b158015610b9757600080fd5b505af1158015610bab573d6000803e3d6000fd5b50505050505b505050505050565b6005546001600160a01b03163314610be35760405162461bcd60e51b815260040161042c9061137c565b6001600160a01b038116610c485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b610c5181611026565b50565b6001600160a01b038316610cb65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042c565b6001600160a01b038216610d175760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610ddd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042c565b6001600160a01b038216610e3f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042c565b6001600160a01b03831660009081526020819052604090205481811015610eb75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610eee9084906113e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f3a91815260200190565b60405180910390a3610566565b6001600160a01b038216610f9d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042c565b8060026000828254610faf91906113e8565b90915550506001600160a01b03821660009081526020819052604081208054839290610fdc9084906113e8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166110d85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042c565b6001600160a01b0382166000908152602081905260409020548181101561114c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042c565b6001600160a01b038316600090815260208190526040812083830390556002805484929061117b908490611400565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610d6c565b6000602082840312156111cf578081fd5b81356111da81611468565b9392505050565b6000602082840312156111f2578081fd5b81516111da81611468565b6000806040838503121561120f578081fd5b823561121a81611468565b9150602083013561122a81611468565b809150509250929050565b600080600060608486031215611249578081fd5b833561125481611468565b9250602084013561126481611468565b929592945050506040919091013590565b60008060408385031215611287578182fd5b823561129281611468565b946020939093013593505050565b6000602082840312156112b1578081fd5b815180151581146111da578182fd5b600080604083850312156112d2578182fd5b82519150602083015161122a81611468565b600080600080600060a086880312156112fb578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008151808452815b8181101561134357602081850181015186830182015201611327565b818111156113545782602083870101525b50601f01601f19169290920160200192915050565b6000602082526111da602083018461131e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600085825284602083015260018060a01b0384166040830152608060608301526113de608083018461131e565b9695505050505050565b600082198211156113fb576113fb611452565b500190565b60008282101561141257611412611452565b500390565b60028104600182168061142b57607f821691505b6020821081141561144c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c5157600080fdfea2646970667358221220911590411b96377043ede1029b4e848858652faca97f2f3a5463f24f0be008dd64736f6c63430008020033";

export class MultiChainToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiChainToken> {
    return super.deploy(overrides || {}) as Promise<MultiChainToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiChainToken {
    return super.attach(address) as MultiChainToken;
  }
  connect(signer: Signer): MultiChainToken__factory {
    return super.connect(signer) as MultiChainToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiChainTokenInterface {
    return new utils.Interface(_abi) as MultiChainTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiChainToken {
    return new Contract(address, _abi, signerOrProvider) as MultiChainToken;
  }
}
