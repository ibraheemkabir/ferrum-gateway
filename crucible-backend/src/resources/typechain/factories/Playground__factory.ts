/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Playground, PlaygroundInterface } from "../Playground";

const _abi = [
  {
    inputs: [],
    name: "log",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "multiSig",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "rs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "ss",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "vs",
        type: "uint8[]",
      },
    ],
    name: "testMultiSig",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct MultiSigLib.Sig[]",
        name: "sigs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806351973ec91461003b578063731fbf2714610045575b600080fd5b61004361006e565b005b61005861005336600461092b565b610120565b6040516100659190610a6c565b60405180910390f35b60408051808201825260888082523060208084018290529351601160e31b9481019490945260601b6bffffffffffffffffffffffff19166024840152916100c7906038015b604051602081830303815290604052610403565b6040805163ffffffff8416602082015230918101919091526100eb906060016100b3565b61011c60405180604001604052806006815260200165414e4420257360d01b8152506101178430610449565b61054a565b5050565b606061012b8561058f565b905060005b81518110156103fa576101796040518060400160405280601881526020017f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d207b7d200000000000000000815250835161054a565b6101ad82828151811061019c57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516107f5565b6101e18282815181106101d057634e487b7160e01b600052603260045260246000fd5b6020026020010151604001516107f5565b610233604051806040016040528060028152602001617b7d60f01b81525083838151811061021f57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015160ff1661054a565b81818151811061025357634e487b7160e01b600052603260045260246000fd5b60200260200101516020015185828151811061027f57634e487b7160e01b600052603260045260246000fd5b6020026020010151146102c65760405162461bcd60e51b815260206004820152600a60248201526926b4b9b6b0ba31b4102960b11b60448201526064015b60405180910390fd5b8181815181106102e657634e487b7160e01b600052603260045260246000fd5b60200260200101516040015184828151811061031257634e487b7160e01b600052603260045260246000fd5b6020026020010151146103545760405162461bcd60e51b815260206004820152600a6024820152694d69736d61746368205360b01b60448201526064016102bd565b81818151811061037457634e487b7160e01b600052603260045260246000fd5b60200260200101516000015160ff168382815181106103a357634e487b7160e01b600052603260045260246000fd5b602002602001015160ff16146103e85760405162461bcd60e51b815260206004820152600a60248201526926b4b9b6b0ba31b4102b60b11b60448201526064016102bd565b806103f281610bc7565b915050610130565b50949350505050565b610446816040516024016104179190610ac8565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610836565b50565b60006104836040518060400160405280600d81526020016c414444522049534f203120257360981b815250836001600160a01b031661054a565b6104bc6040518060400160405280600d81526020016c414444522049534f203220257360981b81525060a08563ffffffff16901b61054a565b6104f16040518060400160405280600d81526020016c414444522049534f203220257360981b8152508463ffffffff1661054a565b60408051808201909152600d81526c414444522049534f203220257360981b602082015261052d9061011763ffffffff8616600160a01b610b91565b506001600160a01b031660a09190911b63ffffffff60a01b161790565b61011c8282604051602401610560929190610ae2565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610836565b60606000602083516105a19190610b71565b905060416105b0826020610b91565b6105bb906002610b91565b6105c59190610b71565b9050600081602085516105d89190610b71565b6105e29190610bb0565b90506105ef600283610b71565b6105fa906002610b91565b6106049083610bb0565b156106495760405162461bcd60e51b81526020600482015260156024820152744d534c3a20496e76616c6964207369672073697a6560581b60448201526064016102bd565b610654600283610b71565b67ffffffffffffffff81111561067a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106c557816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816106985790505b5092506020604060006106d88484610b91565b87516106e49190610bb0565b6106ef906001610b59565b905060005b6106ff600287610b71565b8110156107ea578784015183890151838a015161071d876040610b59565b965061072a866040610b59565b9550610737856001610b59565b9450808a858151811061075a57634e487b7160e01b600052603260045260246000fd5b60200260200101516000019060ff16908160ff1681525050828a858151811061079357634e487b7160e01b600052603260045260246000fd5b60200260200101516020018181525050818a85815181106107c457634e487b7160e01b600052603260045260246000fd5b6020026020010151604001818152505050505080806107e290610bc7565b9150506106f4565b505050505050919050565b6104468160405160240161080b91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600082601f830112610867578081fd5b8135602061087c61087783610b35565b610b04565b8281528181019085830183850287018401881015610898578586fd5b855b858110156108b65781358452928401929084019060010161089a565b5090979650505050505050565b600082601f8301126108d3578081fd5b813560206108e361087783610b35565b82815281810190858301838502870184018810156108ff578586fd5b855b858110156108b657813560ff81168114610919578788fd5b84529284019290840190600101610901565b60008060008060808587031215610940578384fd5b843567ffffffffffffffff80821115610957578586fd5b818701915087601f83011261096a578586fd5b813560208282111561097e5761097e610bf8565b610990601f8301601f19168201610b04565b8281528a828487010111156109a3578889fd5b8282860183830137918201810197909752958701359150808211156109c6578485fd5b6109d288838901610857565b945060408701359150808211156109e7578384fd5b6109f388838901610857565b93506060870135915080821115610a08578283fd5b50610a15878288016108c3565b91505092959194509250565b60008151808452815b81811015610a4657602081850181015186830182015201610a2a565b81811115610a575782602083870101525b50601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190868401855b82811015610abb578151805160ff16855286810151878601528501518585015260609093019290850190600101610a89565b5091979650505050505050565b600060208252610adb6020830184610a21565b9392505050565b600060408252610af56040830185610a21565b90508260208301529392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2d57610b2d610bf8565b604052919050565b600067ffffffffffffffff821115610b4f57610b4f610bf8565b5060209081020190565b60008219821115610b6c57610b6c610be2565b500190565b600082610b8c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610bab57610bab610be2565b500290565b600082821015610bc257610bc2610be2565b500390565b6000600019821415610bdb57610bdb610be2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122009ab38149476aac276b438a5dd6b750731e489e420f0772a369c7354c9153ad064736f6c63430008020033";

export class Playground__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Playground> {
    return super.deploy(overrides || {}) as Promise<Playground>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Playground {
    return super.attach(address) as Playground;
  }
  connect(signer: Signer): Playground__factory {
    return super.connect(signer) as Playground__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlaygroundInterface {
    return new utils.Interface(_abi) as PlaygroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Playground {
    return new Contract(address, _abi, signerOrProvider) as Playground;
  }
}
