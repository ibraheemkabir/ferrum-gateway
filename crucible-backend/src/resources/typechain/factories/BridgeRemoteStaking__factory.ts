/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRemoteStaking,
  BridgeRemoteStakingInterface,
} from "../BridgeRemoteStaking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount_",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "addMarginalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "addReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "fakeRewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "syncStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewardsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506200004e6040518060400160405280600e81526020016d434f4e5354525543544f5220257360901b8152506200027560201b620005731760201c565b620000de336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200008e57600080fd5b505af1158015620000a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000cd9190810190620003d7565b620002c360201b620005e71760201c565b600080336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200011d57600080fd5b505af115801562000132573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200015c9190810190620003d7565b806020019051810190620001719190620003a0565b91509150620001c26040518060400160405280601381526020017f434f4e5354525543544f52202573203a2025730000000000000000000000000081525083836200030e60201b620006581760201c565b336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620001fe57600080fd5b505af115801562000213573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200023d9190810190620003d7565b806020019051810190620002529190620003a0565b6001600160601b0319606091821b811660a05291901b16608052506200054d9050565b620002c0816040516024016200028c9190620004b3565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b179091526200036216565b50565b620002c081604051602401620002da9190620004b3565b60408051601f198184030181529190526020810180516001600160e01b039081166305f3bfab60e11b179091526200036216565b6200035d8383836040516024016200032993929190620004cf565b60408051601f198184030181529190526020810180516001600160e01b039081166307e763af60e51b179091526200036216565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80516001600160a01b03811681146200039b57600080fd5b919050565b60008060408385031215620003b3578182fd5b620003be8362000383565b9150620003ce6020840162000383565b90509250929050565b600060208284031215620003e9578081fd5b81516001600160401b038082111562000400578283fd5b818401915084601f83011262000414578283fd5b81518181111562000429576200042962000537565b604051601f8201601f19168101602001838111828210171562000450576200045062000537565b60405281815283820160200187101562000468578485fd5b6200047b82602083016020870162000504565b9695505050505050565b600081518084526200049f81602086016020860162000504565b601f01601f19169290920160200192915050565b600060208252620004c8602083018462000485565b9392505050565b600060608252620004e4606083018662000485565b6001600160a01b0394851660208401529290931660409091015292915050565b60005b838110156200052157818101518382015260200162000507565b8381111562000531576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c6116936200058e6000396000818161034201526104e7015260008181610276015281816103de015261049701526116936000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636021726711610097578063b5fd282a11610066578063b5fd282a14610201578063f5ab16cc14610214578063f887ea4014610227578063fdbfc4741461022f57610100565b806360217267146101b55780636a1d4c89146101c85780639046ac82146101db578063a4e47b66146101ee57610100565b80634732aa1d116100d35780634732aa1d146101675780634afc71871461017a5780635471bcdd1461018f5780635aed85f9146101a257610100565b80632513502a1461010557806339ef9fdc1461012e57806340b47e1a1461014157806342d8669314610154575b600080fd5b61011861011336600461120e565b610242565b6040516101259190611554565b60405180910390f35b61011861013c36600461120e565b610254565b61011861014f366004611228565b610269565b61011861016236600461120e565b6102cf565b610118610175366004611228565b6102f8565b610182610340565b60405161012591906112da565b61011861019d366004611228565b610364565b6101186101b036600461120e565b610381565b6101186101c336600461120e565b610393565b6101186101d6366004611228565b6103a5565b6101186101e9366004611228565b6103d1565b6101186101fc366004611228565b61044b565b61011861020f36600461120e565b610468565b61018261022236600461120e565b61047a565b610182610495565b61011861023d366004611228565b6104b9565b60066020526000908152604090205481565b60006102618260006106d2565b90505b919050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102bc5760405162461bcd60e51b81526004016102b3906114e6565b60405180910390fd5b6102c683836106d2565b90505b92915050565b6000336102ee5760405162461bcd60e51b81526004016102b39061141b565b610261338361080a565b6001600160a01b0380821660008181526001602090815260408083209487168352938152838220549282526003905291822054610338908590838661099b565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260209081526000928352604080842090915290825290205481565b60056020526000908152604090205481565b60036020526000908152604090205481565b6001600160a01b0380821660009081526002602090815260408083209386168352929052205492915050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461041b5760405162461bcd60e51b81526004016102b3906114e6565b6001600160a01b0383166104415760405162461bcd60e51b81526004016102b39061141b565b6102c6838361080a565b600160209081526000928352604080842090915290825290205481565b60006020819052908152604090205481565b6004602052600090815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0380821660009081526001602090815260408083209386168352929052908120548161050d7f00000000000000000000000000000000000000000000000000000000000000008686610a06565b90508181111561053b5760006105238284610aaa565b905061053186868584610ab6565b92506102c9915050565b8181101561056857600061054f8383610aaa565b905061055d86868584610ac8565b5092506102c9915050565b506000949350505050565b6105e481604051602401610587919061136f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052610aef565b50565b6105e4816040516024016105fb919061136f565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f0be77f5600000000000000000000000000000000000000000000000000000000179052610aef565b6106cd83838360405160240161067093929190611382565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ffcec75e000000000000000000000000000000000000000000000000000000000179052610aef565b505050565b6001600160a01b038083166000908152600460205260408120549091168015801561070557506001600160a01b03831615155b1561075357506001600160a01b03838116600090815260046020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016918416919091179055815b6001600160a01b0381166107795760405162461bcd60e51b81526004016102b39061151d565b600061078482610b10565b905080610796576000925050506102c9565b6001600160a01b0385166000908152600560205260409020546107b99082610bf1565b6001600160a01b0386166000908152600560209081526040808320939093556006905220546107e89082610bf1565b6001600160a01b03861660009081526006602052604090205591505092915050565b600061081683836104b9565b506001600160a01b0380831660008181526001602090815260408083209488168084529482528083205493835260038252808320546006835281842054600284528285209685529590925282205492939092909161087685838686610bfd565b90506108b96040518060400160405280601081526020017f55736572207374616b6520697320257300000000000000000000000000000000815250868484610c2f565b6001600160a01b0387166000908152600560205260409020546108dc9082610aaa565b6001600160a01b0388166000908152600560205260409020556108ff8282610bf1565b6001600160a01b038089166000908152600260209081526040808320938d16835292905220558015610990576001600160a01b0380881660009081526004602052604090205416610951818a84610ca6565b7fac0c09f599ad30636a442dcfe0b0eac1612c7c9b1bceedf65a278526838c359788828b856040516109869493929190611308565b60405180910390a1505b979650505050505050565b6000826109aa57506000610338565b6001600160a01b038083166000818152600260209081526040808320948a1683529381528382205492825260069052918220549091906109ec90879087610cfe565b90508181116109fc576000610990565b6109908183610aaa565b6040517fb22172810000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063b221728190610a5090859087906004016112ee565b60206040518083038186803b158015610a6857600080fd5b505afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa0919061127a565b90505b9392505050565b60006102c682846115eb565b610ac284848484610d14565b50505050565b600081610ad757506001610338565b610ae385858585610d61565b50600195945050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b0381166000818152602081905260408082205490517f70a0823100000000000000000000000000000000000000000000000000000000815291929091610bc39183916370a0823190610b6d9030906004016112da565b60206040518083038186803b158015610b8557600080fd5b505afa158015610b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd919061127a565b90610aaa565b9150610bcf8183610bf1565b6001600160a01b03909316600090815260208190526040902092909255919050565b60006102c6828461155d565b600080610c0b848488610cfe565b9050848111610c1b576000610c25565b610c258186610aaa565b9695505050505050565b610ac284848484604051602401610c4994939291906113b5565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f08ee566600000000000000000000000000000000000000000000000000000000179052610aef565b610cba6001600160a01b0384168383610ed4565b6001600160a01b038316600090815260208190526040902054610cdd9082610aaa565b6001600160a01b039093166000908152602081905260409020929092555050565b6000610aa084610d0e8585610f57565b90610f63565b610d2084848484610f6f565b7f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd7838583604051610d5393929190611332565b60405180910390a150505050565b600082821115610d835760405162461bcd60e51b81526004016102b3906113e4565b6001600160a01b038085166000818152600260209081526040808320948a16835293815283822054928252600681528382205460039091529281205491929190610dce86848461107b565b9050600084821115610e1b57610de48286610aaa565b9450849050610dfd81610df78685610aaa565b90610bf1565b6001600160a01b038a16600090815260066020526040902055610e4b565b610e258583610aaa565b9450610e318483610aaa565b6001600160a01b038a166000908152600660205260409020555b6001600160a01b03808a166000908152600260209081526040808320938e16835292905220859055610e7d8888610aaa565b6001600160a01b03808b166000908152600160209081526040808320938f1683529290522055610ead8388610aaa565b6001600160a01b038a16600090815260036020526040902055945050505050949350505050565b6106cd8363a9059cbb60e01b8484604051602401610ef3929190611356565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261108b565b60006102c682846115ae565b60006102c68284611575565b6001600160a01b038316600090815260036020908152604080832054600690925282205490918215159081610fa45782610faf565b610faf85848661107b565b9050610fbb8486610bf1565b9350610fc78686610bf1565b6001600160a01b038089166000818152600160209081526040808320948e168084529482528083209590955591815260028252838120928152919052205461100f9082610bf1565b6001600160a01b038089166000818152600260209081526040808320948e16835293815283822094909455908152600390925290208490558115611071576110578382610bf1565b6001600160a01b0388166000908152600660205260409020555b5050505050505050565b6000610aa082610d0e8686610f57565b60006110e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661111a9092919063ffffffff16565b8051909150156106cd57808060200190518101906110fe919061125a565b6106cd5760405162461bcd60e51b81526004016102b390611489565b6060610aa084846000858561112e856111b8565b61114a5760405162461bcd60e51b81526004016102b390611452565b600080866001600160a01b0316858760405161116691906112be565b60006040518083038185875af1925050503d80600081146111a3576040519150601f19603f3d011682016040523d82523d6000602084013e6111a8565b606091505b50915091506109908282866111be565b3b151590565b606083156111cd575081610aa3565b8251156111dd5782518084602001fd5b8160405162461bcd60e51b81526004016102b3919061136f565b80356001600160a01b038116811461026457600080fd5b60006020828403121561121f578081fd5b6102c6826111f7565b6000806040838503121561123a578081fd5b611243836111f7565b9150611251602084016111f7565b90509250929050565b60006020828403121561126b578081fd5b81518015158114610aa3578182fd5b60006020828403121561128b578081fd5b5051919050565b600081518084526112aa816020860160208601611602565b601f01601f19169290920160200192915050565b600082516112d0818460208701611602565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082526102c66020830184611292565b6000606082526113956060830186611292565b6001600160a01b0394851660208401529290931660409091015292915050565b6000608082526113c86080830187611292565b6020830195909552506040810192909252606090910152919050565b60208082526018908201527f5253524d3a204e6f7420656e6f7567682062616c616e63650000000000000000604082015260600190565b60208082526011908201527f5253524d3a204261642061646472657373000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526018908201527f5253524d3a204f6e6c7920726f75746572206d6574686f640000000000000000604082015260600190565b60208082526015908201527f5253524d3a204e6f2072657761726420746f6b656e0000000000000000000000604082015260600190565b90815260200190565b600082198211156115705761157061162e565b500190565b6000826115a9577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115e6576115e661162e565b500290565b6000828210156115fd576115fd61162e565b500390565b60005b8381101561161d578181015183820152602001611605565b83811115610ac25750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220f95a028d15d758c6cb2a9fd8655604bdbff6d7653e3d9fedc16f1e678a26ce7364736f6c63430008000033";

export class BridgeRemoteStaking__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRemoteStaking> {
    return super.deploy(overrides || {}) as Promise<BridgeRemoteStaking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRemoteStaking {
    return super.attach(address) as BridgeRemoteStaking;
  }
  connect(signer: Signer): BridgeRemoteStaking__factory {
    return super.connect(signer) as BridgeRemoteStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRemoteStakingInterface {
    return new utils.Interface(_abi) as BridgeRemoteStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRemoteStaking {
    return new Contract(address, _abi, signerOrProvider) as BridgeRemoteStaking;
  }
}
