/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DirectMinimalErc20,
  DirectMinimalErc20Interface,
} from "../DirectMinimalErc20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080516020808201808452600080845284519283019094529281528151919290916200004291600391620000d1565b50805162000058906004906020840190620000d1565b505050620000756200006f6200007b60201b60201c565b6200007f565b620001b4565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000df9062000177565b90600052602060002090601f0160209004810192826200010357600085556200014e565b82601f106200011e57805160ff19168380011785556200014e565b828001600101855582156200014e579182015b828111156200014e57825182559160200191906001019062000131565b506200015c92915062000160565b5090565b5b808211156200015c576000815560010162000161565b6002810460018216806200018c57607f821691505b60208210811415620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b61112880620001c46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806379cc6790116100ad578063b09f126611610071578063b09f12661461023a578063d2209ad914610242578063d28d885214610255578063dd62ed3e1461025d578063f2fde38b1461029657610121565b806379cc6790146101de5780638da5cb5b146101f157806395d89b411461020c578063a457c2d714610214578063a9059cbb1461022757610121565b8063313ce567116100f4578063313ce5671461018c578063395093511461019b57806342966c68146101ae57806370a08231146101c3578063715018a6146101d657610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102a9565b60405161013b9190610fd4565b60405180910390f35b610157610152366004610f93565b61033b565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610edf565b610351565b6040516012815260200161013b565b6101576101a9366004610f93565b610400565b6101c16101bc366004610fbc565b61043c565b005b61016b6101d1366004610e8c565b610449565b6101c1610468565b6101c16101ec366004610f93565b61049e565b6005546040516001600160a01b03909116815260200161013b565b61012e610524565b610157610222366004610f93565b610533565b610157610235366004610f93565b6105cc565b61012e6105d9565b6101c1610250366004610f1a565b610667565b61012e61073f565b61016b61026b366004610ead565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101c16102a4366004610e8c565b61074c565b6060600680546102b89061108b565b80601f01602080910402602001604051908101604052809291908181526020018280546102e49061108b565b80156103315780601f1061030657610100808354040283529160200191610331565b820191906000526020600020905b81548152906001019060200180831161031457829003601f168201915b5050505050905090565b60006103483384846107e4565b50600192915050565b600061035e848484610908565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103e85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103f585338584036107e4565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161034891859061043790869061105c565b6107e4565b6104463382610ad6565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b6005546001600160a01b031633146104925760405162461bcd60e51b81526004016103df90611027565b61049c6000610c24565b565b60006104aa833361026b565b9050818110156105085760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016103df565b61051583338484036107e4565b61051f8383610ad6565b505050565b6060600780546102b89061108b565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103df565b6105c233858584036107e4565b5060019392505050565b6000610348338484610908565b600780546105e69061108b565b80601f01602080910402602001604051908101604052809291908181526020018280546106129061108b565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505081565b6005546001600160a01b031633146106915760405162461bcd60e51b81526004016103df90611027565b6006805461069e9061108b565b15905080156106b95750600780546106b59061108b565b1590505b80156106c55750600254155b6107075760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016103df565b825161071a906006906020860190610d55565b50815161072e906007906020850190610d55565b506107398482610c76565b50505050565b600680546105e69061108b565b6005546001600160a01b031633146107765760405162461bcd60e51b81526004016103df90611027565b6001600160a01b0381166107db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103df565b61044681610c24565b6001600160a01b0383166108465760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103df565b6001600160a01b0382166108a75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103df565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661096c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103df565b6001600160a01b0382166109ce5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103df565b6001600160a01b03831660009081526020819052604090205481811015610a465760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103df565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a7d90849061105c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ac991815260200190565b60405180910390a3610739565b6001600160a01b038216610b365760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103df565b6001600160a01b03821660009081526020819052604090205481811015610baa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103df565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bd9908490611074565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361051f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610ccc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103df565b8060026000828254610cde919061105c565b90915550506001600160a01b03821660009081526020819052604081208054839290610d0b90849061105c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054610d619061108b565b90600052602060002090601f016020900481019282610d835760008555610dc9565b82601f10610d9c57805160ff1916838001178555610dc9565b82800160010185558215610dc9579182015b82811115610dc9578251825591602001919060010190610dae565b50610dd5929150610dd9565b5090565b5b80821115610dd55760008155600101610dda565b80356001600160a01b038116811461046357600080fd5b600082601f830112610e15578081fd5b813567ffffffffffffffff80821115610e3057610e306110dc565b604051601f8301601f19908116603f01168101908282118183101715610e5857610e586110dc565b81604052838152866020858801011115610e70578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610e9d578081fd5b610ea682610dee565b9392505050565b60008060408385031215610ebf578081fd5b610ec883610dee565b9150610ed660208401610dee565b90509250929050565b600080600060608486031215610ef3578081fd5b610efc84610dee565b9250610f0a60208501610dee565b9150604084013590509250925092565b60008060008060808587031215610f2f578081fd5b610f3885610dee565b9350602085013567ffffffffffffffff80821115610f54578283fd5b610f6088838901610e05565b94506040870135915080821115610f75578283fd5b50610f8287828801610e05565b949793965093946060013593505050565b60008060408385031215610fa5578182fd5b610fae83610dee565b946020939093013593505050565b600060208284031215610fcd578081fd5b5035919050565b6000602080835283518082850152825b8181101561100057858101830151858201604001528201610fe4565b818111156110115783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561106f5761106f6110c6565b500190565b600082821015611086576110866110c6565b500390565b60028104600182168061109f57607f821691505b602082108114156110c057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220798c971e23c7cfc1f65c2efc92f693b690da6bda65241ed5b3060cf392b865f764736f6c63430008020033";

export class DirectMinimalErc20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DirectMinimalErc20> {
    return super.deploy(overrides || {}) as Promise<DirectMinimalErc20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DirectMinimalErc20 {
    return super.attach(address) as DirectMinimalErc20;
  }
  connect(signer: Signer): DirectMinimalErc20__factory {
    return super.connect(signer) as DirectMinimalErc20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DirectMinimalErc20Interface {
    return new utils.Interface(_abi) as DirectMinimalErc20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DirectMinimalErc20 {
    return new Contract(address, _abi, signerOrProvider) as DirectMinimalErc20;
  }
}
