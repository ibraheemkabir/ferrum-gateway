/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HasTaxDistributor,
  HasTaxDistributorInterface,
} from "../HasTaxDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxDistributor",
        type: "address",
      },
    ],
    name: "setTaxDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610394806100896000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a5bb096d11610050578063a5bb096d14610094578063b4a735b2146100a7578063f2fde38b146100af57610067565b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100c2565b005b61007e610116565b60405161008b91906102b8565b60405180910390f35b6100746100a236600461028a565b610125565b61007e61019e565b6100746100bd36600461028a565b6101ad565b6100ca61021e565b6001600160a01b03166100db610116565b6001600160a01b03161461010a5760405162461bcd60e51b815260040161010190610329565b60405180910390fd5b6101146000610222565b565b6000546001600160a01b031690565b61012d61021e565b6001600160a01b031661013e610116565b6001600160a01b0316146101645760405162461bcd60e51b815260040161010190610329565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b6101b561021e565b6001600160a01b03166101c6610116565b6001600160a01b0316146101ec5760405162461bcd60e51b815260040161010190610329565b6001600160a01b0381166102125760405162461bcd60e51b8152600401610101906102cc565b61021b81610222565b50565b3390565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561029b578081fd5b81356001600160a01b03811681146102b1578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122088596840295722b34707d5a5b61b06a7133d103d23d4e231dd725b1030b39ef364736f6c63430008000033";

export class HasTaxDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HasTaxDistributor> {
    return super.deploy(overrides || {}) as Promise<HasTaxDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HasTaxDistributor {
    return super.attach(address) as HasTaxDistributor;
  }
  connect(signer: Signer): HasTaxDistributor__factory {
    return super.connect(signer) as HasTaxDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HasTaxDistributorInterface {
    return new utils.Interface(_abi) as HasTaxDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HasTaxDistributor {
    return new Contract(address, _abi, signerOrProvider) as HasTaxDistributor;
  }
}
