/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QuantumPortalGateway,
  QuantumPortalGatewayInterface,
} from "../QuantumPortalGateway";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WFRM",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalLedgerMgr",
    outputs: [
      {
        internalType: "contract IQuantumPortalLedgerMgr",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalPoc",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalStake",
    outputs: [
      {
        internalType: "contract IQuantumPortalStake",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poc",
        type: "address",
      },
      {
        internalType: "address",
        name: "ledgerMgr",
        type: "address",
      },
      {
        internalType: "address",
        name: "qpStake",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506200001d33620000c9565b6000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005b57600080fd5b505af115801562000070573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009a919081019062000149565b905080806020019051810190620000b2919062000119565b60601b6001600160601b0319166080525062000235565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200012b578081fd5b81516001600160a01b038116811462000142578182fd5b9392505050565b600060208083850312156200015c578182fd5b82516001600160401b038082111562000173578384fd5b818501915085601f83011262000187578384fd5b8151818111156200019c576200019c6200021f565b604051601f8201601f19908116603f01168101908382118183101715620001c757620001c76200021f565b816040528281528886848701011115620001df578687fd5b8693505b82841015620002025784840186015181850187015292850192620001e3565b828411156200021357868684830101525b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60805160601c610fc062000270600039600081816101a30152818161057e015281816105f70152818161067e01526107720152610fc06000f3fe6080604052600436106100a75760003560e01c8063adc9772e11610064578063adc9772e1461017e578063d9101b0414610191578063f000999e146101c5578063f2fde38b146101e5578063f851a44014610205578063ffa1ad7414610225576100a7565b80635ba108ff146100ac578063704b6c02146100e9578063715018a61461010b57806372599a80146101205780638207c5d9146101405780638da5cb5b14610160575b600080fd5b3480156100b857600080fd5b506004546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b50610109610104366004610deb565b610265565b005b34801561011757600080fd5b506101096102c1565b34801561012c57600080fd5b506002546100cc906001600160a01b031681565b34801561014c57600080fd5b506003546100cc906001600160a01b031681565b34801561016c57600080fd5b506000546001600160a01b03166100cc565b61010961018c366004610e74565b6102d5565b34801561019d57600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d157600080fd5b506101096101e0366004610e2a565b6102e3565b3480156101f157600080fd5b50610109610200366004610deb565b610386565b34801561021157600080fd5b506001546100cc906001600160a01b031681565b34801561023157600080fd5b506102586040518060400160405280600781526020016603030302e3031360cc1b81525081565b6040516100e09190610ef3565b61026d6103ff565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b6102c96103ff565b6102d36000610459565b565b6102df82826104a9565b5050565b6001546001600160a01b031633148061030657506000546001600160a01b031633145b6103475760405162461bcd60e51b815260206004820152600d60248201526c2ba09d103737ba1030b236b4b760991b60448201526064015b60405180910390fd5b600280546001600160a01b039485166001600160a01b031991821617909155600380549385169382169390931790925560048054919093169116179055565b61038e6103ff565b6001600160a01b0381166103f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033e565b6103fc81610459565b50565b6000546001600160a01b031633146102d35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166104f25760405162461bcd60e51b815260206004820152601060248201526f09dd1bc9c81a5cc81c995c5d5a5c995960821b604482015260640161033e565b6000600460009054906101000a90046001600160a01b03166001600160a01b0316630dd5a2bd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561054257600080fd5b505afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190610e0e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614156108c65734806105f55760405162461bcd60e51b815260206004820152600e60248201526d15985b1d59481c995c5d5a5c995960921b604482015260640161033e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528493507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a08231915060240160206040518083038186803b1580156106ca57600080fd5b505afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190610ebf565b10156107465760405162461bcd60e51b815260206004820152601360248201527215985b1d59481b9bdd0819195c1bdcda5d1959606a1b604482015260640161033e565b6004805460405163a9059cbb60e01b81526001600160a01b0391821692810192909252602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156107b657600080fd5b505af11580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190610e9f565b50806108365760405162461bcd60e51b8152602060048201526017602482015276145411ce88185b5bdd5b9d081a5cc81c995c5d5a5c9959604a1b604482015260640161033e565b60048054604051632021856b60e21b81526001600160a01b0387811693820193909352848316602482015291169063808615ac90604401602060405180830381600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190610ebf565b50506109b4565b6004546108e090829033906001600160a01b0316856109b9565b9150816109295760405162461bcd60e51b8152602060048201526017602482015276145411ce88185b5bdd5b9d081a5cc81c995c5d5a5c9959604a1b604482015260640161033e565b60048054604051632021856b60e21b81526001600160a01b0386811693820193909352838316602482015291169063808615ac90604401602060405180830381600087803b15801561097a57600080fd5b505af115801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190610ebf565b505b505050565b6040516370a0823160e01b81526001600160a01b03838116600483015260009182918716906370a082319060240160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190610ebf565b9050610a4e6001600160a01b038716868686610b49565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908816906370a082319060240160206040518083038186803b158015610a9357600080fd5b505afa158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb9190610ebf565b9050610ad78282610f26565b925083831115610b3f5760405162461bcd60e51b815260206004820152602d60248201527f53413a2061637475616c20616d6f756e74206c6172676572207468616e20747260448201526c185b9cd9995c88185b5bdd5b9d609a1b606482015260840161033e565b5050949350505050565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526109b292879291600091610be1918516908490610c5e565b8051909150156109b45780806020019051810190610bff9190610e9f565b6109b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161033e565b6060610c6d8484600085610c75565b949350505050565b606082471015610cd65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161033e565b600080866001600160a01b03168587604051610cf29190610ed7565b60006040518083038185875af1925050503d8060008114610d2f576040519150601f19603f3d011682016040523d82523d6000602084013e610d34565b606091505b5091509150610d4587838387610d50565b979650505050505050565b60608315610dbc578251610db5576001600160a01b0385163b610db55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161033e565b5081610c6d565b610c6d8383815115610dd15781518083602001fd5b8060405162461bcd60e51b815260040161033e9190610ef3565b600060208284031215610dfc578081fd5b8135610e0781610f75565b9392505050565b600060208284031215610e1f578081fd5b8151610e0781610f75565b600080600060608486031215610e3e578182fd5b8335610e4981610f75565b92506020840135610e5981610f75565b91506040840135610e6981610f75565b809150509250925092565b60008060408385031215610e86578182fd5b8235610e9181610f75565b946020939093013593505050565b600060208284031215610eb0578081fd5b81518015158114610e07578182fd5b600060208284031215610ed0578081fd5b5051919050565b60008251610ee9818460208701610f49565b9190910192915050565b6000602082528251806020840152610f12816040850160208701610f49565b601f01601f19169190910160400192915050565b600082821015610f4457634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015610f64578181015183820152602001610f4c565b838111156109b25750506000910152565b6001600160a01b03811681146103fc57600080fdfea26469706673582212202d824e0708120474cc8b3099958b4081baf52058ddd8b6202f0a5e1f5430073e64736f6c63430008020033";

export class QuantumPortalGateway__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QuantumPortalGateway> {
    return super.deploy(overrides || {}) as Promise<QuantumPortalGateway>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QuantumPortalGateway {
    return super.attach(address) as QuantumPortalGateway;
  }
  connect(signer: Signer): QuantumPortalGateway__factory {
    return super.connect(signer) as QuantumPortalGateway__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuantumPortalGatewayInterface {
    return new utils.Interface(_abi) as QuantumPortalGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuantumPortalGateway {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as QuantumPortalGateway;
  }
}
