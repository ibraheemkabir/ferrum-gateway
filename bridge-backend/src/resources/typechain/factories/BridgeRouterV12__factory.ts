/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRouterV12,
  BridgeRouterV12Interface,
} from "../BridgeRouterV12";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidityIfPossible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stake",
        type: "address",
      },
    ],
    name: "setStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCross",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCrossETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSigned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwapETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060006200001e6200010e565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000a457600080fd5b505af1158015620000b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000e3919081019062000142565b806020019051810190620000f8919062000112565b60601b6001600160601b03191660805262000227565b3390565b60006020828403121562000124578081fd5b81516001600160a01b03811681146200013b578182fd5b9392505050565b6000602080838503121562000155578182fd5b82516001600160401b03808211156200016c578384fd5b818501915085601f83011262000180578384fd5b81518181111562000195576200019562000211565b604051601f8201601f1916810185018381118282101715620001bb57620001bb62000211565b6040528181528382018501881015620001d2578586fd5b8592505b81831015620001f55783830185015181840186015291840191620001d6565b818311156200020657858583830101525b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60805160601c611d7662000254600039600081816109c3015281816109ec0152610a630152611d766000f3fe6080604052600436106101095760003560e01c80639feb8f5011610095578063e4a7672611610064578063e4a7672614610282578063e91b79bc146102a2578063f0102b51146102c2578063f2fde38b146102e2578063f5a67aec1461030257610109565b80639feb8f501461021a578063ad5c46481461023a578063d96ac95a1461024f578063e2ea13191461026257610109565b806360d47c7e116100dc57806360d47c7e14610190578063715018a6146101b05780638d6e9291146101c55780638da5cb5b146101e55780638fed0b2c146101fa57610109565b80630832e70d1461010e57806316f0115b146101305780633a4b66f11461015b5780634437152a14610170575b600080fd5b34801561011a57600080fd5b5061012e6101293660046116ba565b610322565b005b34801561013c57600080fd5b50610145610544565b6040516101529190611a06565b60405180910390f35b34801561016757600080fd5b50610145610553565b34801561017c57600080fd5b5061012e61018b3660046115f5565b610562565b34801561019c57600080fd5b5061012e6101ab3660046118db565b6105cc565b3480156101bc57600080fd5b5061012e610678565b3480156101d157600080fd5b5061012e6101e036600461164a565b610701565b3480156101f157600080fd5b50610145610793565b34801561020657600080fd5b5061012e610215366004611831565b6107a2565b34801561022657600080fd5b5061012e610235366004611768565b61091c565b34801561024657600080fd5b506101456109c1565b61012e61025d366004611791565b6109e5565b34801561026e57600080fd5b5061012e61027d3660046115f5565b610a9c565b34801561028e57600080fd5b5061012e61029d36600461160f565b610afd565b3480156102ae57600080fd5b5061012e6102bd366004611768565b610c07565b3480156102ce57600080fd5b5061012e6102dd366004611876565b610d24565b3480156102ee57600080fd5b5061012e6102fd3660046115f5565b610dd5565b34801561030e57600080fd5b5061012e61031d3660046116ba565b610e95565b6001546001600160a01b0316638d6e9291858560008161035257634e487b7160e01b600052603260045260246000fd5b905060200201602081019061036791906115f5565b308a8a866040518663ffffffff1660e01b815260040161038b959493929190611a92565b602060405180830381600087803b1580156103a557600080fd5b505af11580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd91906119a6565b50838360008181106103ff57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061041491906115f5565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161043f9190611a06565b60206040518083038186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f91906119a6565b96506104d1848460008181106104b557634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104ca91906115f5565b898961103a565b876001600160a01b0316635c11d795888787878e886040518763ffffffff1660e01b815260040161050796959493929190611c6a565b600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b50505050505050505050505050565b6001546001600160a01b031681565b6002546001600160a01b031681565b61056a6111d0565b6001600160a01b031661057b610793565b6001600160a01b0316146105aa5760405162461bcd60e51b81526004016105a190611bb4565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61061933308b8a8a60008181106105f357634e487b7160e01b600052603260045260246000fd5b905060200201602081019061060891906115f5565b6001600160a01b03169291906111d4565b6106598787600081811061063d57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061065291906115f5565b8b8b61103a565b61066c338b8b8b8b8b8b8b8b8b8b61122c565b50505050505050505050565b6106806111d0565b6001600160a01b0316610691610793565b6001600160a01b0316146106b75760405162461bcd60e51b81526004016105a190611bb4565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600154604051638d6e929160e01b81526001600160a01b0390911690638d6e9291906107399088908890889088908890600401611a92565b602060405180830381600087803b15801561075357600080fd5b505af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b91906119a6565b505050505050565b6000546001600160a01b031690565b600254604051634823564160e11b81526001600160a01b0390911690639046ac82906107d49033908890600401611a1a565b602060405180830381600087803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082691906119a6565b50600154604051632388dac160e01b81526001600160a01b0390911690632388dac19061085f9033908890889088908890600401611acc565b600060405180830381600087803b15801561087957600080fd5b505af115801561088d573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc47491506108c39033908890600401611a1a565b602060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091591906119a6565b5050505050565b600254610938906001600160a01b0384811691339116846111d4565b60025460405163205a3f0d60e11b81526001600160a01b03909116906340b47e1a9061096a9085908190600401611a1a565b602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc91906119a6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60003490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610a4557600080fd5b505af1158015610a59573d6000803e3d6000fd5b5050505050610a897f00000000000000000000000000000000000000000000000000000000000000008b8361103a565b61066c338b838c8c8c8c8c8c8c8c61122c565b610aa46111d0565b6001600160a01b0316610ab5610793565b6001600160a01b031614610adb5760405162461bcd60e51b81526004016105a190611bb4565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600154610b19906001600160a01b0384811691339116846111d4565b600154604051631c07677960e11b81526001600160a01b039091169063380ecef290610b4b9086908690600401611a1a565b600060405180830381600087803b158015610b6557600080fd5b505af1158015610b79573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610baf9086908690600401611a1a565b602060405180830381600087803b158015610bc957600080fd5b505af1158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906119a6565b50505050565b600254604051634823564160e11b81526001600160a01b0390911690639046ac8290610c399033908690600401611a1a565b602060405180830381600087803b158015610c5357600080fd5b505af1158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b91906119a6565b5060015460405163e70787d760e01b81526001600160a01b039091169063e70787d790610cc090339086908690600401611a34565b600060405180830381600087803b158015610cda57600080fd5b505af1158015610cee573d6000803e3d6000fd5b5050600254604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc474915061096a9033908690600401611a1a565b600154610d40906001600160a01b0388811691339116886111d4565b600154604051635b5b8a6b60e11b81526001600160a01b039091169063b6b714d690610d7a9033908a908990899089908990600401611a58565b602060405180830381600087803b158015610d9457600080fd5b505af1158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc91906119a6565b50505050505050565b610ddd6111d0565b6001600160a01b0316610dee610793565b6001600160a01b031614610e145760405162461bcd60e51b81526004016105a190611bb4565b6001600160a01b038116610e3a5760405162461bcd60e51b81526004016105a190611b28565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316638d6e92918585600081610ec557634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610eda91906115f5565b308a8a866040518663ffffffff1660e01b8152600401610efe959493929190611a92565b602060405180830381600087803b158015610f1857600080fd5b505af1158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5091906119a6565b5083836000818110610f7257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f8791906115f5565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610fb29190611a06565b60206040518083038186803b158015610fca57600080fd5b505afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100291906119a6565b9650876001600160a01b031663791ac947888787878e886040518763ffffffff1660e01b815260040161050796959493929190611c6a565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e9061106b9030908790600401611a1a565b60206040518083038186803b15801561108357600080fd5b505afa158015611097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bb91906119a6565b905081811015610c0157801561114e5760405163095ea7b360e01b81526001600160a01b0385169063095ea7b3906110fa908690600090600401611afc565b602060405180830381600087803b15801561111457600080fd5b505af1158015611128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114c9190611986565b505b60405163095ea7b360e01b81526001600160a01b0385169063095ea7b39061117e90869060001990600401611afc565b602060405180830381600087803b15801561119857600080fd5b505af11580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190611986565b3390565b610c01846323b872dd60e01b8585856040516024016111f593929190611a34565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611369565b600154604051635c11d79560e01b81526001600160a01b03808d1692635c11d79592611266928e928e928e928e9216908d90600401611c6a565b600060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b50600092508991508890506112aa600182611cdb565b8181106112c757634e487b7160e01b600052603260045260246000fd5b90506020020160208101906112dc91906115f5565b600154604051635b5b8a6b60e11b81529192506001600160a01b03169063b6b714d690611317908f9085908a908a908a908a90600401611a58565b602060405180830381600087803b15801561133157600080fd5b505af1158015611345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053591906119a6565b60006113be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113f89092919063ffffffff16565b8051909150156109bc57808060200190518101906113dc9190611986565b6109bc5760405162461bcd60e51b81526004016105a190611c20565b60606114078484600085611411565b90505b9392505050565b6060824710156114335760405162461bcd60e51b81526004016105a190611b6e565b61143c856114d1565b6114585760405162461bcd60e51b81526004016105a190611be9565b600080866001600160a01b0316858760405161147491906119ea565b60006040518083038185875af1925050503d80600081146114b1576040519150601f19603f3d011682016040523d82523d6000602084013e6114b6565b606091505b50915091506114c68282866114db565b979650505050505050565b803b15155b919050565b606083156114ea57508161140a565b8251156114fa5782518084602001fd5b8160405162461bcd60e51b81526004016105a19190611b15565b80356001600160a01b03811681146114d657600080fd5b60008083601f84011261153c578081fd5b50813567ffffffffffffffff811115611553578182fd5b602083019150836020808302850101111561156d57600080fd5b9250929050565b600082601f830112611584578081fd5b813567ffffffffffffffff8082111561159f5761159f611d2a565b604051601f8301601f1916810160200182811182821017156115c3576115c3611d2a565b6040528281528483016020018610156115da578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215611606578081fd5b61140a82611514565b600080600060608486031215611623578182fd5b61162c84611514565b925061163a60208501611514565b9150604084013590509250925092565b600080600080600060a08688031215611661578081fd5b61166a86611514565b945061167860208701611514565b93506040860135925060608601359150608086013567ffffffffffffffff8111156116a1578182fd5b6116ad88828901611574565b9150509295509295909350565b60008060008060008060008060006101008a8c0312156116d8578384fd5b6116e18a611514565b98506116ef60208b01611514565b975060408a0135965060608a0135955060808a0135945060a08a013567ffffffffffffffff80821115611720578586fd5b61172c8d838e0161152b565b909650945060c08c0135935060e08c013591508082111561174b578283fd5b506117588c828d01611574565b9150509295985092959850929598565b6000806040838503121561177a578182fd5b61178383611514565b946020939093013593505050565b60008060008060008060008060006101008a8c0312156117af578485fd5b6117b88a611514565b985060208a0135975060408a013567ffffffffffffffff8111156117da578586fd5b6117e68c828d0161152b565b90985096505060608a0135945060808a0135935061180660a08b01611514565b925061181460c08b01611514565b915061182260e08b01611514565b90509295985092959850929598565b60008060008060808587031215611846578384fd5b61184f85611514565b9350602085013592506040850135915061186b60608601611514565b905092959194509250565b60008060008060008060c0878903121561188e578182fd5b61189787611514565b955060208701359450604087013593506118b360608801611514565b92506118c160808801611514565b91506118cf60a08801611514565b90509295509295509295565b6000806000806000806000806000806101208b8d0312156118fa578384fd5b6119038b611514565b995060208b0135985060408b0135975060608b013567ffffffffffffffff81111561192c578485fd5b6119388d828e0161152b565b90985096505060808b0135945060a08b0135935061195860c08c01611514565b925061196660e08c01611514565b91506119756101008c01611514565b90509295989b9194979a5092959850565b600060208284031215611997578081fd5b8151801515811461140a578182fd5b6000602082840312156119b7578081fd5b5051919050565b600081518084526119d6816020860160208601611cfe565b601f01601f19169290920160200192915050565b600082516119fc818460208701611cfe565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0396871681529486166020860152604085019390935290841660608401528316608083015290911660a082015260c00190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114c6908301846119be565b6001600160a01b039586168152938516602085015260408401929092526060830152909116608082015260a00190565b6001600160a01b03929092168252602082015260400190565b60006020825261140a60208301846119be565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015611cba576001600160a01b03611ca785611514565b1682529282019290820190600101611c8e565b506001600160a01b0396909616606085015250505060800152949350505050565b600082821015611cf957634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015611d19578181015183820152602001611d01565b83811115610c015750506000910152565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d2016c1657ce96a95b1d5dace4902c7618b6a274a3413f241fdee30afe7ca90064736f6c63430008000033";

export class BridgeRouterV12__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRouterV12> {
    return super.deploy(overrides || {}) as Promise<BridgeRouterV12>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRouterV12 {
    return super.attach(address) as BridgeRouterV12;
  }
  connect(signer: Signer): BridgeRouterV12__factory {
    return super.connect(signer) as BridgeRouterV12__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRouterV12Interface {
    return new utils.Interface(_abi) as BridgeRouterV12Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRouterV12 {
    return new Contract(address, _abi, signerOrProvider) as BridgeRouterV12;
  }
}
