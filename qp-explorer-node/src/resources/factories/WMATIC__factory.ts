/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WMATIC, WMATICInterface } from "../WMATIC";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600d60808190526c57726170706564204d6174696360981b60a090815261002e916000919061007c565b5060408051808201909152600680825265574d4154494360d01b602090920191825261005c9160019161007c565b506002805460ff1916601217905534801561007657600080fd5b50610150565b82805461008890610115565b90600052602060002090601f0160209004810192826100aa57600085556100f0565b82601f106100c357805160ff19168380011785556100f0565b828001600101855582156100f0579182015b828111156100f05782518255916020019190600101906100d5565b506100fc929150610100565b5090565b5b808211156100fc5760008155600101610101565b60028104600182168061012957607f821691505b6020821081141561014a57634e487b7160e01b600052602260045260246000fd5b50919050565b6107d78061015f6000396000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461017c57806370a08231146101a857806395d89b41146101d5578063a9059cbb146101ea578063d0e30db01461020a578063dd62ed3e14610212576100af565b806306fdde03146100c4578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013c5780632e1a7d4d1461015c576100af565b366100af576100ad61024a565b005b3480156100bb57600080fd5b506100ad61024a565b3480156100d057600080fd5b506100d96102a5565b6040516100e691906106ce565b60405180910390f35b3480156100fb57600080fd5b5061010f61010a36600461068d565b610333565b60405190151581526020016100e6565b34801561012b57600080fd5b50475b6040519081526020016100e6565b34801561014857600080fd5b5061010f610157366004610652565b61039f565b34801561016857600080fd5b506100ad6101773660046106b6565b610523565b34801561018857600080fd5b506002546101969060ff1681565b60405160ff90911681526020016100e6565b3480156101b457600080fd5b5061012e6101c3366004610606565b60036020526000908152604090205481565b3480156101e157600080fd5b506100d96105c9565b3480156101f657600080fd5b5061010f61020536600461068d565b6105d6565b6100ad61024a565b34801561021e57600080fd5b5061012e61022d366004610620565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610269908490610721565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b600080546102b290610750565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610750565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061038e9086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600360205260408120548211156103c457600080fd5b6001600160a01b038416331480159061040257506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b15610470576001600160a01b038416600090815260046020908152604080832033845290915290205482111561043757600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061046a908490610739565b90915550505b6001600160a01b03841660009081526003602052604081208054849290610498908490610739565b90915550506001600160a01b038316600090815260036020526040812080548492906104c5908490610721565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161051191815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561053f57600080fd5b336000908152600360205260408120805483929061055e908490610739565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610590573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b600180546102b290610750565b60006105e333848461039f565b9392505050565b80356001600160a01b038116811461060157600080fd5b919050565b600060208284031215610617578081fd5b6105e3826105ea565b60008060408385031215610632578081fd5b61063b836105ea565b9150610649602084016105ea565b90509250929050565b600080600060608486031215610666578081fd5b61066f846105ea565b925061067d602085016105ea565b9150604084013590509250925092565b6000806040838503121561069f578182fd5b6106a8836105ea565b946020939093013593505050565b6000602082840312156106c7578081fd5b5035919050565b6000602080835283518082850152825b818110156106fa578581018301518582016040015282016106de565b8181111561070b5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156107345761073461078b565b500190565b60008282101561074b5761074b61078b565b500390565b60028104600182168061076457607f821691505b6020821081141561078557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ae77d9a76d6c349ebb889d68f99d0db06b36ab793715da380e1892bc5be5bb6364736f6c63430008020033";

export class WMATIC__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WMATIC> {
    return super.deploy(overrides || {}) as Promise<WMATIC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WMATIC {
    return super.attach(address) as WMATIC;
  }
  connect(signer: Signer): WMATIC__factory {
    return super.connect(signer) as WMATIC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WMATICInterface {
    return new utils.Interface(_abi) as WMATICInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WMATIC {
    return new Contract(address, _abi, signerOrProvider) as WMATIC;
  }
}
