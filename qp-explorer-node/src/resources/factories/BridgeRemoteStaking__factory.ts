/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRemoteStaking,
  BridgeRemoteStakingInterface,
} from "../BridgeRemoteStaking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount_",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "addReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "addRewardPublic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "fakeRewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "syncStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "userStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewardsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506001600081905550336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005657600080fd5b505af11580156200006b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009591908101906200011e565b806020019051810190620000aa9190620000e7565b6001600160601b0319606091821b811660a05291901b166080526200020a565b80516001600160a01b0381168114620000e257600080fd5b919050565b60008060408385031215620000fa578182fd5b6200010583620000ca565b91506200011560208401620000ca565b90509250929050565b6000602080838503121562000131578182fd5b82516001600160401b038082111562000148578384fd5b818501915085601f8301126200015c578384fd5b815181811115620001715762000171620001f4565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c620001f4565b816040528281528886848701011115620001b4578687fd5b8693505b82841015620001d75784840186015181850187015292850192620001b8565b82841115620001e857868684830101525b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c61173962000259600039600081816101940152818161052d015281816106180152610d02015260008181610312015281816103d8015261064b01526117396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80635aed85f9116100a2578063a4e47b6611610071578063a4e47b6614610299578063b5fd282a146102c4578063f5ab16cc146102e4578063f887ea401461030d578063fdbfc474146103345761010b565b80635aed85f91461020c578063602172671461022c5780636a1d4c891461024c5780639046ac82146102865761010b565b80634732aa1d116100de5780634732aa1d1461017c5780634afc71871461018f57806351bdca3e146101ce5780635471bcdd146101e15761010b565b806322803774146101105780632513502a1461013657806340b47e1a1461015657806342d8669314610169575b600080fd5b61012361011e366004611569565b610349565b6040519081526020015b60405180910390f35b610123610144366004611569565b60076020526000908152604090205481565b610123610164366004611583565b6103cb565b610123610177366004611569565b610453565b61012361018a366004611583565b6104d3565b6101b67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161012d565b6101236101dc366004611583565b610611565b6101236101ef366004611583565b600360209081526000928352604080842090915290825290205481565b61012361021a366004611569565b60066020526000908152604090205481565b61012361023a366004611569565b60046020526000908152604090205481565b61012361025a366004611583565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205492915050565b610123610294366004611583565b61063e565b6101236102a7366004611583565b600260209081526000928352604080842090915290825290205481565b6101236102d2366004611569565b60016020526000908152604090205481565b6101b66102f2366004611569565b6005602052600090815260409020546001600160a01b031681565b6101b67f000000000000000000000000000000000000000000000000000000000000000081565b610347610342366004611583565b61073b565b005b6001600160a01b03808216600090815260056020526040812054909116806103b85760405162461bcd60e51b815260206004820152601e60248201527f5253524d3a207374616b65206973206e6f7420696e697469616c697a6564000060448201526064015b60405180910390fd5b6103c28382610776565b9150505b919050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104405760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103af565b61044a8383610776565b90505b92915050565b6000600260005414156104785760405162461bcd60e51b81526004016103af9061163c565b6002600055336104be5760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103af565b6104c833836108c0565b600160005592915050565b6001600160a01b0380821660008181526002602090815260408083209487168084529482528083205484845260038352818420958452948252808320549383526004825280832054600790925282205491939291846105537f00000000000000000000000000000000000000000000000000000000000000008989610a81565b9050848111156105ba5760008080806105778c8c8b610572818a6116aa565b610b10565b9350935093509350838961058b9190611673565b98506105978389611673565b97506105a38288611673565b96506105af8187611673565b9550505050506105e6565b848110156105e65760006105d98989886105d486826116aa565b610b7e565b5090985090965094509250505b846105f95760009550505050505061044d565b61060585858585610ca2565b98975050505050505050565b600061044a7f00000000000000000000000000000000000000000000000000000000000000008484610a81565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106b35760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103af565b600260005414156106d65760405162461bcd60e51b81526004016103af9061163c565b60026000556001600160a01b0383166107255760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103af565b61072f83836108c0565b60016000559392505050565b6002600054141561075e5760405162461bcd60e51b81526004016103af9061163c565b600260005561076d8282610cd4565b50506001600055565b6001600160a01b03808316600090815260056020526040812054909116801580156107a957506001600160a01b03831615155b156107df57506001600160a01b03838116600090815260056020526040902080546001600160a01b031916918416919091179055815b6001600160a01b03811661082d5760405162461bcd60e51b81526020600482015260156024820152742929a9269d102737903932bbb0b932103a37b5b2b760591b60448201526064016103af565b600061083882610d7c565b90508061084a5760009250505061044d565b6001600160a01b03851660009081526006602052604090205461086e908290611673565b6001600160a01b03861660009081526006602090815260408083209390935560079052205461089e908290611673565b6001600160a01b03861660009081526007602052604090205591505092915050565b60006108cc8383610cd4565b6001600160a01b038083166000908152600260209081526040808320938716835292905220548061093f5760405162461bcd60e51b815260206004820152601760248201527f5253524d3a207573657220686173206e6f207374616b6500000000000000000060448201526064016103af565b6001600160a01b03808416600090815260046020908152604080832054600783528184205460038452828520958a1685529490925282205490929161098685838686610ca2565b6001600160a01b0388166000908152600660205260409020549091506109ad9082906116aa565b6001600160a01b0388166000908152600660205260409020556109d08183611673565b6001600160a01b038089166000908152600360209081526040808320938d16835292905220558015610a76576001600160a01b0380881660009081526005602052604090205416610a22818a84610e62565b604080516001600160a01b038a8116825283811660208301528b16818301526060810184905290517fac0c09f599ad30636a442dcfe0b0eac1612c7c9b1bceedf65a278526838c35979181900360800190a1505b979650505050505050565b60405163b221728160e01b81526001600160a01b03828116600483015283811660248301526000919085169063b22172819060440160206040518083038186803b158015610ace57600080fd5b505afa158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0691906115d5565b90505b9392505050565b6001600160a01b0383166000908152600460209081526040808320546007909252822054829182918291908115158381610b4a5782610b55565b610b55898486610ede565b905088818a84610b66576000610b68565b835b929f919e509c50909a5098505050505050505050565b600080600080600086861115610bd65760405162461bcd60e51b815260206004820152601860248201527f5253524d3a204e6f7420656e6f7567682062616c616e6365000000000000000060448201526064016103af565b6001600160a01b038089166000818152600360209081526040808320948e16835293815283822054928252600781528382205460049091529281205491929190610c218a8484610ede565b9050600084821115610c5857610c3785836116aa565b945084905080610c4783866116aa565b610c519190611673565b9350610c71565b610c6282866116aa565b9450610c6e82856116aa565b93505b8385610c7d8d8f6116aa565b610c878e876116aa565b84995099509950995099505050505050945094509450945094565b600080610cb0848488610eeb565b9050848111610cc0576000610cca565b610cca85826116aa565b9695505050505050565b6001600160a01b03808216600090815260026020908152604080832093861683529290529081205490610d287f00000000000000000000000000000000000000000000000000000000000000008585610a81565b905081811115610d52576000610d3e83836116aa565b9050610d4c85858584610ef8565b50610d76565b81811015610d76576000610d6682846116aa565b9050610d7485858584610f55565b505b50505050565b600060026000541415610da15760405162461bcd60e51b81526004016103af9061163c565b600260009081556001600160a01b038316808252600160205260408083205490516370a0823160e01b8152306004820152909291906370a082319060240160206040518083038186803b158015610df757600080fd5b505afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f91906115d5565b9050610e3b82826116aa565b6001600160a01b039094166000908152600160208190526040822092909255555090919050565b60026000541415610e855760405162461bcd60e51b81526004016103af9061163c565b600260009081556001600160a01b038416815260016020526040902054610ead9082906116aa565b6001600160a01b038416600081815260016020526040902091909155610ed4908383610f6b565b5050600160005550565b6000610b06848484610fc2565b6000610b06838386610fc2565b610f0484848484611147565b604080516001600160a01b038086168252861660208201529081018290527f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd79060600160405180910390a150505050565b80610f5f57610d76565b610d748484848461125e565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610fbd908490611385565b505050565b600080806000198587098587029250828110838203039150508060001415610ffc5760008411610ff157600080fd5b508290049050610b09565b80841161100857600080fd5b600084868809808403938111909203919050600085611029816000196116aa565b611034906001611673565b16958690049593849004936000819003046001019050611054818461168b565b90931792600061106587600361168b565b6002189050611074818861168b565b61107f9060026116aa565b611089908261168b565b9050611095818861168b565b6110a09060026116aa565b6110aa908261168b565b90506110b6818861168b565b6110c19060026116aa565b6110cb908261168b565b90506110d7818861168b565b6110e29060026116aa565b6110ec908261168b565b90506110f8818861168b565b6111039060026116aa565b61110d908261168b565b9050611119818861168b565b6111249060026116aa565b61112e908261168b565b905061113a818661168b565b9998505050505050505050565b60008060008061115988888888610b10565b9350935093509350838661116d9190611673565b6001600160a01b038089166000818152600260209081526040808320948e16808452948252808320959095559181526003825283812092815291905220546111b6908490611673565b6001600160a01b038089166000818152600360209081526040808320948e1683529381528382209490945590815260049092529020546111f7908390611673565b6001600160a01b0388166000908152600460205260409020558015611254576001600160a01b03871660009081526007602052604090205461123a908290611673565b6001600160a01b0388166000908152600760205260409020555b5050505050505050565b600061126c85858585610b7e565b909150905060076000886001600160a01b03166001600160a01b031681526020019081526020016000206000600360008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000849750859190505584919050555050508160026000866001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b03168152602001908152602001600020600082825461134a91906116aa565b90915550506001600160a01b038416600090815260046020526040812080548492906113779084906116aa565b909155509095945050505050565b60006113da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114579092919063ffffffff16565b805190915015610fbd57808060200190518101906113f891906115b5565b610fbd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103af565b6060610b06848460008585843b6114b05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103af565b600080866001600160a01b031685876040516114cc91906115ed565b60006040518083038185875af1925050503d8060008114611509576040519150601f19603f3d011682016040523d82523d6000602084013e61150e565b606091505b5091509150610a7682828660608315611528575081610b09565b8251156115385782518084602001fd5b8160405162461bcd60e51b81526004016103af9190611609565b80356001600160a01b03811681146103c657600080fd5b60006020828403121561157a578081fd5b61044a82611552565b60008060408385031215611595578081fd5b61159e83611552565b91506115ac60208401611552565b90509250929050565b6000602082840312156115c6578081fd5b81518015158114610b09578182fd5b6000602082840312156115e6578081fd5b5051919050565b600082516115ff8184602087016116c1565b9190910192915050565b60006020825282518060208401526116288160408501602087016116c1565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611686576116866116ed565b500190565b60008160001904831182151516156116a5576116a56116ed565b500290565b6000828210156116bc576116bc6116ed565b500390565b60005b838110156116dc5781810151838201526020016116c4565b83811115610d765750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122061555fcaa941b8b6bc8ba85243d77b4ef6fa4ff714de2bb56b3a999a6a51667064736f6c63430008020033";

export class BridgeRemoteStaking__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRemoteStaking> {
    return super.deploy(overrides || {}) as Promise<BridgeRemoteStaking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRemoteStaking {
    return super.attach(address) as BridgeRemoteStaking;
  }
  connect(signer: Signer): BridgeRemoteStaking__factory {
    return super.connect(signer) as BridgeRemoteStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRemoteStakingInterface {
    return new utils.Interface(_abi) as BridgeRemoteStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRemoteStaking {
    return new Contract(address, _abi, signerOrProvider) as BridgeRemoteStaking;
  }
}
