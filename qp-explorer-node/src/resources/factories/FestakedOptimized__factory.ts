/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FestakedOptimized,
  FestakedOptimizedInterface,
} from "../FestakedOptimized";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stakingStarts_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingEnds_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawStarts_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawEnds_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingCap_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestedAmount_",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount_",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeState",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedTotal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakingCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawnEarly",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingEnds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingStarts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEnds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawStarts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

export class FestakedOptimized__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    tokenAddress_: string,
    stakingStarts_: BigNumberish,
    stakingEnds_: BigNumberish,
    withdrawStarts_: BigNumberish,
    withdrawEnds_: BigNumberish,
    stakingCap_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FestakedOptimized> {
    return super.deploy(
      name_,
      tokenAddress_,
      stakingStarts_,
      stakingEnds_,
      withdrawStarts_,
      withdrawEnds_,
      stakingCap_,
      overrides || {}
    ) as Promise<FestakedOptimized>;
  }
  getDeployTransaction(
    name_: string,
    tokenAddress_: string,
    stakingStarts_: BigNumberish,
    stakingEnds_: BigNumberish,
    withdrawStarts_: BigNumberish,
    withdrawEnds_: BigNumberish,
    stakingCap_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      tokenAddress_,
      stakingStarts_,
      stakingEnds_,
      withdrawStarts_,
      withdrawEnds_,
      stakingCap_,
      overrides || {}
    );
  }
  attach(address: string): FestakedOptimized {
    return super.attach(address) as FestakedOptimized;
  }
  connect(signer: Signer): FestakedOptimized__factory {
    return super.connect(signer) as FestakedOptimized__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FestakedOptimizedInterface {
    return new utils.Interface(_abi) as FestakedOptimizedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FestakedOptimized {
    return new Contract(address, _abi, signerOrProvider) as FestakedOptimized;
  }
}
