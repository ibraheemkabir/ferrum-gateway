/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HasTaxDistributor,
  HasTaxDistributorInterface,
} from "../HasTaxDistributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxDistributor",
        type: "address",
      },
    ],
    name: "setTaxDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "taxDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102d78061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a5bb096d1461008f578063b4a735b2146100a2578063f2fde38b146100b5575b600080fd5b6100646100c8565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006461009d36600461023e565b610107565b600154610073906001600160a01b031681565b6100646100c336600461023e565b610153565b6000546001600160a01b031633146100fb5760405162461bcd60e51b81526004016100f29061026c565b60405180910390fd5b61010560006101ee565b565b6000546001600160a01b031633146101315760405162461bcd60e51b81526004016100f29061026c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461017d5760405162461bcd60e51b81526004016100f29061026c565b6001600160a01b0381166101e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b6101eb816101ee565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561024f578081fd5b81356001600160a01b0381168114610265578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212200e54257f023d26d0d68f1b939fb99b2a108d2cf47a5956be31931057ab3992f064736f6c63430008020033";

export class HasTaxDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HasTaxDistributor> {
    return super.deploy(overrides || {}) as Promise<HasTaxDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HasTaxDistributor {
    return super.attach(address) as HasTaxDistributor;
  }
  connect(signer: Signer): HasTaxDistributor__factory {
    return super.connect(signer) as HasTaxDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HasTaxDistributorInterface {
    return new utils.Interface(_abi) as HasTaxDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HasTaxDistributor {
    return new Contract(address, _abi, signerOrProvider) as HasTaxDistributor;
  }
}
