/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiChainToken,
  MultiChainTokenInterface,
} from "../MultiChainToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MASTER_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "masterChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "quantumPortal",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintTo",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "mintChain",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "burnChain",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
    ],
    name: "mintAndBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "remoteAddress",
    outputs: [
      {
        internalType: "address",
        name: "rv",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remotes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526002805460ff19166012179055610a2860075569152d02c7e14af68000006008553480156200003257600080fd5b506200003e3362000124565b6000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200007c57600080fd5b505af115801562000091573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000bb9190810190620002e9565b806020019051810190620000d091906200033b565b815190935083906000908190620000ef90600190602087019062000176565b50508351620001049190602086019062000176565b50505050806000146200011857806200011a565b465b60805250620003fe565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200018490620003ab565b90600052602060002090601f016020900481019282620001a85760008555620001f3565b82601f10620001c357805160ff1916838001178555620001f3565b82800160010185558215620001f3579182015b82811115620001f3578251825591602001919060010190620001d6565b506200020192915062000205565b5090565b5b8082111562000201576000815560010162000206565b60006001600160401b0380841115620002395762000239620003e8565b604051601f8501601f19908116603f01168101908282118183101715620002645762000264620003e8565b816040528093508581528686860111156200027e57600080fd5b600092505b85831015620002a357828501516020848301015260208301925062000283565b85831115620002b6576000602087830101525b5050509392505050565b600082601f830112620002d1578081fd5b620002e2838351602085016200021c565b9392505050565b600060208284031215620002fb578081fd5b81516001600160401b0381111562000311578182fd5b8201601f8101841362000322578182fd5b62000333848251602084016200021c565b949350505050565b60008060006060848603121562000350578182fd5b83516001600160401b038082111562000367578384fd5b6200037587838801620002c0565b945060208601519150808211156200038b578384fd5b506200039a86828701620002c0565b925050604084015190509250925092565b600281046001821680620003c057607f821691505b60208210811415620003e257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805161110d6200042f600039600081816102b4015281816104a9015281816105ae0152610851015261110d6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806364494fdf116100c357806395d89b411161007c57806395d89b41146102f05780639dc29fac146102f8578063a9059cbb1461030b578063b14c13fb1461031e578063dd62ed3e14610331578063f2fde38b1461035c5761014d565b806364494fdf1461027e57806370a0823114610287578063715018a6146102a757806385e1f4d0146102af5780638da5cb5b146102d6578063902d55a5146102e75761014d565b8063313ce56711610115578063313ce567146101d257806340c10f19146101f15780634557b4bb146102045780634ff834931461021757806353e417d01461022a5780636425666b1461026b5761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101aa5780632ed0dfb3146101bd575b600080fd5b61015a61036f565b6040516101679190610fad565b60405180910390f35b61018361017e366004610e37565b6103fd565b6040519015158152602001610167565b61019c60035481565b604051908152602001610167565b6101836101b8366004610df7565b610413565b6101d06101cb366004610f16565b6104a7565b005b6002546101df9060ff1681565b60405160ff9091168152602001610167565b6101d06101ff366004610e37565b6106b8565b6101d0610212366004610e9e565b6107bf565b6101d0610225366004610e7a565b610888565b610253610238366004610e62565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610167565b600a54610253906001600160a01b031681565b61019c60075481565b61019c610295366004610da3565b60046020526000908152604090205481565b6101d06108e0565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b0316610253565b61019c60085481565b61015a610916565b6101d0610306366004610e37565b610923565b610183610319366004610e37565b610a1f565b61025361032c366004610e62565b610a2c565b61019c61033f366004610dbf565b600560209081526000928352604080842090915290825290205481565b6101d061036a366004610da3565b610a58565b6000805461037c90611071565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611071565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b600061040a338484610af3565b50600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205460001914610492576001600160a01b038416600090815260056020908152604080832033845290915290205461046d9083610b55565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b61049d848484610b68565b5060019392505050565b7f00000000000000000000000000000000000000000000000000000000000000008567ffffffffffffffff1614156104e8576104e33384610c0e565b6105ac565b60006104fd8667ffffffffffffffff16610a2c565b604080513360248201819052604480830189905283518084039091018152606490920183526020820180516001600160e01b03166340c10f1960e01b179052600a5492516338d6ddff60e01b815293945090926001600160a01b03909216916338d6ddff916105779188918c918891908890600401610ff5565b600060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b5050505050505b7f00000000000000000000000000000000000000000000000000000000000000008467ffffffffffffffff1614156105ed576105e83384610c9e565b6106b1565b60006106028567ffffffffffffffff16610a2c565b604080513360248201819052604480830189905283518084039091018152606490920183526020820180516001600160e01b0316632770a7eb60e21b179052600a5492516338d6ddff60e01b815293945090926001600160a01b03909216916338d6ddff9161067c9187918b918891908890600401610ff5565b600060405180830381600087803b15801561069657600080fd5b505af11580156106aa573d6000803e3d6000fd5b5050505050505b5050505050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b815260040160606040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190610edf565b509150915060075482148015610770575061075b82610a2c565b6001600160a01b0316816001600160a01b0316145b6107af5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6107b98484610c0e565b50505050565b6006546001600160a01b031633146107e95760405162461bcd60e51b81526004016107a690610fc0565b6003541561082f5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016107a6565b6007839055600a80546001600160a01b0319166001600160a01b0384161790557f00000000000000000000000000000000000000000000000000000000000000008314156108835761088381600854610c0e565b505050565b6006546001600160a01b031633146108b25760405162461bcd60e51b81526004016107a690610fc0565b60009182526009602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6006546001600160a01b0316331461090a5760405162461bcd60e51b81526004016107a690610fc0565b6109146000610d28565b565b6001805461037c90611071565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b815260040160606040518083038186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190610edf565b5091509150600754821480156109db57506109c682610a2c565b6001600160a01b0316816001600160a01b0316145b610a155760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064016107a6565b6107b98484610c9e565b600061040a338484610b68565b6000818152600960205260409020546001600160a01b03168015610a505780610a52565b305b92915050565b6006546001600160a01b03163314610a825760405162461bcd60e51b81526004016107a690610fc0565b6001600160a01b038116610ae75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a6565b610af081610d28565b50565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610b61828461105a565b9392505050565b6001600160a01b038316600090815260046020526040902054610b8b9082610b55565b6001600160a01b038085166000908152600460205260408082209390935590841681522054610bba9082610d7a565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b489085815260200190565b600354610c1b9082610d7a565b6003556001600160a01b038216600090815260046020526040902054610c419082610d7a565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c929085815260200190565b60405180910390a35050565b6001600160a01b038216600090815260046020526040902054610cc19082610b55565b6001600160a01b038316600090815260046020526040902055600354610ce79082610b55565b6003556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c92565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610b618284611042565b803567ffffffffffffffff81168114610d9e57600080fd5b919050565b600060208284031215610db4578081fd5b8135610b61816110c2565b60008060408385031215610dd1578081fd5b8235610ddc816110c2565b91506020830135610dec816110c2565b809150509250929050565b600080600060608486031215610e0b578081fd5b8335610e16816110c2565b92506020840135610e26816110c2565b929592945050506040919091013590565b60008060408385031215610e49578182fd5b8235610e54816110c2565b946020939093013593505050565b600060208284031215610e73578081fd5b5035919050565b60008060408385031215610e8c578182fd5b823591506020830135610dec816110c2565b600080600060608486031215610eb2578283fd5b833592506020840135610ec4816110c2565b91506040840135610ed4816110c2565b809150509250925092565b600080600060608486031215610ef3578283fd5b835192506020840151610f05816110c2565b6040850151909250610ed4816110c2565b600080600080600060a08688031215610f2d578081fd5b610f3686610d86565b9450610f4460208701610d86565b94979496505050506040830135926060810135926080909101359150565b60008151808452815b81811015610f8757602081850181015186830182015201610f6b565b81811115610f985782602083870101525b50601f01601f19169290920160200192915050565b600060208252610b616020830184610f62565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b85815267ffffffffffffffff851660208201526001600160a01b0384811660408301528316606082015260a06080820181905260009061103790830184610f62565b979650505050505050565b60008219821115611055576110556110ac565b500190565b60008282101561106c5761106c6110ac565b500390565b60028104600182168061108557607f821691505b602082108114156110a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610af057600080fdfea26469706673582212207f01d421cd79f211d99a77039772033da2e14e1fcfb83933f284ff3deedf29ee64736f6c63430008020033";

export class MultiChainToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiChainToken> {
    return super.deploy(overrides || {}) as Promise<MultiChainToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiChainToken {
    return super.attach(address) as MultiChainToken;
  }
  connect(signer: Signer): MultiChainToken__factory {
    return super.connect(signer) as MultiChainToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiChainTokenInterface {
    return new utils.Interface(_abi) as MultiChainTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiChainToken {
    return new Contract(address, _abi, signerOrProvider) as MultiChainToken;
  }
}
