/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRouterV12,
  BridgeRouterV12Interface,
} from "../BridgeRouterV12";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidityIfPossible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stake",
        type: "address",
      },
    ],
    name: "setStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCross",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountCrossMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crossTargetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "crossTargetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossSwapTargetTokenTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "crossTargetAddress",
        type: "address",
      },
    ],
    name: "swapAndCrossETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSigned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "sourceChainId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "swapTxId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
    ],
    name: "withdrawSignedAndSwapETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6121b0806100826000396000f3fe6080604052600436106101025760003560e01c80638fed0b2c11610095578063e2ea131911610064578063e2ea131914610292578063e4a76726146102b2578063e91b79bc146102d2578063f0102b51146102f2578063f2fde38b1461031257610109565b80638fed0b2c1461021f5780639feb8f501461023f578063c88d63261461025f578063d96ac95a1461027f57610109565b806360d47c7e116100d157806360d47c7e146101ac578063715018a6146101cc57806379ab23df146101e15780638da5cb5b1461020157610109565b806316f0115b1461010e5780631823bf101461014a5780633a4b66f11461016c5780634437152a1461018c57610109565b3661010957005b600080fd5b34801561011a57600080fd5b5060025461012e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561015657600080fd5b5061016a610165366004611c09565b610332565b005b34801561017857600080fd5b5060035461012e906001600160a01b031681565b34801561019857600080fd5b5061016a6101a7366004611b0e565b610555565b3480156101b857600080fd5b5061016a6101c7366004611e5a565b6105aa565b3480156101d857600080fd5b5061016a6106a6565b3480156101ed57600080fd5b5061016a6101fc366004611c09565b6106dc565b34801561020d57600080fd5b506000546001600160a01b031661012e565b34801561022b57600080fd5b5061016a61023a366004611da2565b610946565b34801561024b57600080fd5b5061016a61025a366004611ccd565b610be1565b34801561026b57600080fd5b5061016a61027a366004611b86565b610c86565b61016a61028d366004611cf8565b610d1d565b34801561029e57600080fd5b5061016a6102ad366004611b0e565b610e16565b3480156102be57600080fd5b5061016a6102cd366004611b46565b610e62565b3480156102de57600080fd5b5061016a6102ed366004611ccd565b610f42565b3480156102fe57600080fd5b5061016a61030d366004611deb565b611129565b34801561031e57600080fd5b5061016a61032d366004611b0e565b611181565b6002546001600160a01b031663c64b2e78858560008161036257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103779190611b0e565b308b8888610386600182612100565b8181106103a357634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103b89190611b0e565b8c8c886040518863ffffffff1660e01b81526004016103dd9796959493929190611fea565b602060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042f9190611f2f565b508383600081811061045157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104669190611b0e565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156104a757600080fd5b505afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190611f2f565b9750886001600160a01b031663791ac947898787878f886040518763ffffffff1660e01b81526004016105179695949392919061208d565b600060405180830381600087803b15801561053157600080fd5b505af1158015610545573d6000803e3d6000fd5b5050505050505050505050505050565b6000546001600160a01b031633146105885760405162461bcd60e51b815260040161057f90612058565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600260015414156105fd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057f565b6002600155610641878760008161062457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106399190611b0e565b33308c61121c565b98506106838787600081811061066757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061067c9190611b0e565b8b8b6113ac565b610696338b8b8b8b8b8b8b8b8b8b61146e565b5050600180555050505050505050565b6000546001600160a01b031633146106d05760405162461bcd60e51b815260040161057f90612058565b6106da60006115ef565b565b600183116107215760405162461bcd60e51b815260206004820152601260248201527110948e881c185d1a081d1bdbc81cda1bdc9d60721b604482015260640161057f565b6002546001600160a01b031663c64b2e78858560008161075157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107669190611b0e565b308b8888610775600182612100565b81811061079257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107a79190611b0e565b8c8c886040518863ffffffff1660e01b81526004016107cc9796959493929190611fea565b602060405180830381600087803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611f2f565b508383600081811061084057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906108559190611b0e565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b15801561089657600080fd5b505afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190611f2f565b9750610910848460008181106108f457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906109099190611b0e565b8a8a6113ac565b886001600160a01b0316635c11d795898787878f886040518763ffffffff1660e01b81526004016105179695949392919061208d565b6001600160a01b0384166109915760405162461bcd60e51b815260206004820152601260248201527110948e881d1bdad95b881c995c5d5a5c995960721b604482015260640161057f565b826109d45760405162461bcd60e51b815260206004820152601360248201527210948e88185b5bdd5b9d081c995c5d5a5c9959606a1b604482015260640161057f565b81610a215760405162461bcd60e51b815260206004820152601a60248201527f42523a207461726765744e6574776f726b207265717569726564000000000000604482015260640161057f565b6001600160a01b038116610a775760405162461bcd60e51b815260206004820152601860248201527f42523a20746172676574546f6b656e2072657175697265640000000000000000604482015260640161057f565b600354604051634823564160e11b81526001600160a01b0390911690639046ac8290610aa99033908890600401611f8f565b602060405180830381600087803b158015610ac357600080fd5b505af1158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb9190611f2f565b50600254604051632388dac160e01b81523360048201526001600160a01b0386811660248301526044820186905260648201859052838116608483015290911690632388dac19060a401600060405180830381600087803b158015610b5f57600080fd5b505af1158015610b73573d6000803e3d6000fd5b5050600354604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610ba99033908890600401611f8f565b600060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b5050505050505050565b600354610bfd906001600160a01b03848116913391168461163f565b60035460405163205a3f0d60e11b81526001600160a01b03909116906340b47e1a90610c2f9085908190600401611f8f565b602060405180830381600087803b158015610c4957600080fd5b505af1158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c819190611f2f565b505050565b6002546040516318c965cf60e31b81526001600160a01b039091169063c64b2e7890610cc29089908990899083908a908a908a90600401611fea565b602060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190611f2f565b50505050505050565b600034905060008a6001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5d57600080fd5b505afa158015610d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d959190611b2a565b9050610da2818c846113ac565b806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b5050505050610e09338c848d8d8d8d8d8d8d8d61146e565b5050505050505050505050565b6000546001600160a01b03163314610e405760405162461bcd60e51b815260040161057f90612058565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600254610e7e906001600160a01b03848116913391168461163f565b600254604051631c07677960e11b81526001600160a01b039091169063380ecef290610eb09086908690600401611f8f565b600060405180830381600087803b158015610eca57600080fd5b505af1158015610ede573d6000803e3d6000fd5b5050600354604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc4749150610f149086908690600401611f8f565b600060405180830381600087803b158015610f2e57600080fd5b505af1158015610d14573d6000803e3d6000fd5b6001600160a01b038216610f8d5760405162461bcd60e51b815260206004820152601260248201527110948e881d1bdad95b881c995c5d5a5c995960721b604482015260640161057f565b80610fd05760405162461bcd60e51b815260206004820152601360248201527210948e88185b5bdd5b9d081c995c5d5a5c9959606a1b604482015260640161057f565b600354604051634823564160e11b81526001600160a01b0390911690639046ac82906110029033908690600401611f8f565b602060405180830381600087803b15801561101c57600080fd5b505af1158015611030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110549190611f2f565b5060025460405163e70787d760e01b81523360048201526001600160a01b038481166024830152604482018490529091169063e70787d790606401600060405180830381600087803b1580156110a957600080fd5b505af11580156110bd573d6000803e3d6000fd5b5050600354604051633f6ff11d60e21b81526001600160a01b03909116925063fdbfc47491506110f39033908690600401611f8f565b600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050505050565b600254611145906001600160a01b03888116913391168861163f565b60025460405163641a08f560e01b81526001600160a01b039091169063641a08f590610cc29033908a9089908990899089908590600401611fa9565b6000546001600160a01b031633146111ab5760405162461bcd60e51b815260040161057f90612058565b6001600160a01b0381166112105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161057f565b611219816115ef565b50565b6040516370a0823160e01b81526001600160a01b03838116600483015260009182918716906370a082319060240160206040518083038186803b15801561126257600080fd5b505afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a9190611f2f565b90506112b16001600160a01b03871686868661163f565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908816906370a082319060240160206040518083038186803b1580156112f657600080fd5b505afa15801561130a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132e9190611f2f565b905061133a8282612100565b9250838311156113a25760405162461bcd60e51b815260206004820152602d60248201527f53413a2061637475616c20616d6f756e74206c6172676572207468616e20747260448201526c185b9cd9995c88185b5bdd5b9d609a1b606482015260840161057f565b5050949350505050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906113dd9030908790600401611f8f565b60206040518083038186803b1580156113f557600080fd5b505afa158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142d9190611f2f565b905081811015611468578015611452576114526001600160a01b0385168460006116aa565b6114686001600160a01b038516846000196116aa565b50505050565b600254604051635c11d79560e01b81526001600160a01b03808d1692635c11d795926114a8928e928e928e928e9216908d9060040161208d565b600060405180830381600087803b1580156114c257600080fd5b505af11580156114d6573d6000803e3d6000fd5b50600092508991508890506114ec600182612100565b81811061150957634e487b7160e01b600052603260045260246000fd5b905060200201602081019061151e9190611b0e565b6002549091506001600160a01b031663641a08f58d83888888888f8f60008161155757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061156c9190611b0e565b6040518863ffffffff1660e01b815260040161158e9796959493929190611fa9565b602060405180830381600087803b1580156115a857600080fd5b505af11580156115bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e09190611f2f565b50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526114689085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117cd565b8015806117325750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906116e09030908690600401611f8f565b60206040518083038186803b1580156116f857600080fd5b505afa15801561170c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117309190611f2f565b155b61179d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161057f565b6040516001600160a01b038316602482015260448101829052610c8190849063095ea7b360e01b90606401611673565b6000611822826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661189f9092919063ffffffff16565b805190915015610c8157808060200190518101906118409190611f0f565b610c815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161057f565b60606118ae84846000856118b8565b90505b9392505050565b6060824710156119195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161057f565b611922856119e7565b61196e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057f565b600080866001600160a01b0316858760405161198a9190611f73565b60006040518083038185875af1925050503d80600081146119c7576040519150601f19603f3d011682016040523d82523d6000602084013e6119cc565b606091505b50915091506119dc8282866119f1565b979650505050505050565b803b15155b919050565b60608315611a005750816118b1565b825115611a105782518084602001fd5b8160405162461bcd60e51b815260040161057f9190612045565b60008083601f840112611a3b578081fd5b50813567ffffffffffffffff811115611a52578182fd5b6020830191508360208083028501011115611a6c57600080fd5b9250929050565b600082601f830112611a83578081fd5b813567ffffffffffffffff80821115611a9e57611a9e61214f565b604051601f8301601f19908116603f01168101908282118183101715611ac657611ac661214f565b81604052838152866020858801011115611ade578485fd5b8360208701602083013792830160200193909352509392505050565b803563ffffffff811681146119ec57600080fd5b600060208284031215611b1f578081fd5b81356118b181612165565b600060208284031215611b3b578081fd5b81516118b181612165565b600080600060608486031215611b5a578182fd5b8335611b6581612165565b92506020840135611b7581612165565b929592945050506040919091013590565b60008060008060008060c08789031215611b9e578182fd5b8635611ba981612165565b95506020870135611bb981612165565b945060408701359350611bce60608801611afa565b92506080870135915060a087013567ffffffffffffffff811115611bf0578182fd5b611bfc89828a01611a73565b9150509295509295509295565b6000806000806000806000806000806101208b8d031215611c28578384fd5b8a35611c3381612165565b995060208b0135611c4381612165565b985060408b01359750611c5860608c01611afa565b965060808b0135955060a08b0135945060c08b013567ffffffffffffffff80821115611c82578586fd5b611c8e8e838f01611a2a565b909650945060e08d013593506101008d0135915080821115611cae578283fd5b50611cbb8d828e01611a73565b9150509295989b9194979a5092959850565b60008060408385031215611cdf578182fd5b8235611cea81612165565b946020939093013593505050565b60008060008060008060008060006101008a8c031215611d16578485fd5b8935611d2181612165565b985060208a0135975060408a013567ffffffffffffffff811115611d43578586fd5b611d4f8c828d01611a2a565b90985096505060608a0135945060808a0135935060a08a0135611d7181612165565b925060c08a0135611d8181612165565b915060e08a0135611d9181612165565b809150509295985092959850929598565b60008060008060808587031215611db7578384fd5b8435611dc281612165565b935060208501359250604085013591506060850135611de081612165565b939692955090935050565b60008060008060008060c08789031215611e03578384fd5b8635611e0e81612165565b955060208701359450604087013593506060870135611e2c81612165565b92506080870135611e3c81612165565b915060a0870135611e4c81612165565b809150509295509295509295565b6000806000806000806000806000806101208b8d031215611e79578384fd5b8a35611e8481612165565b995060208b0135985060408b0135975060608b013567ffffffffffffffff811115611ead578485fd5b611eb98d828e01611a2a565b90985096505060808b0135945060a08b0135935060c08b0135611edb81612165565b925060e08b0135611eeb81612165565b91506101008b0135611efc81612165565b809150509295989b9194979a5092959850565b600060208284031215611f20578081fd5b815180151581146118b1578182fd5b600060208284031215611f40578081fd5b5051919050565b60008151808452611f5f816020860160208601612123565b601f01601f19169290920160200192915050565b60008251611f85818460208701612123565b9190910192915050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03978816815295871660208701526040860194909452918516606085015284166080840152831660a083015290911660c082015260e00190565b6001600160a01b0388811682528781166020830152604082018790528516606082015263ffffffff8416608082015260a0810183905260e060c0820181905260009061203890830184611f47565b9998505050505050505050565b6000602082526118b16020830184611f47565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b868152602080820187905260a0604083018190528201859052600090869060c08401835b888110156120df5783356120c481612165565b6001600160a01b0316825292820192908201906001016120b1565b506001600160a01b0396909616606085015250505060800152949350505050565b60008282101561211e57634e487b7160e01b81526011600452602481fd5b500390565b60005b8381101561213e578181015183820152602001612126565b838111156114685750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461121957600080fdfea2646970667358221220b114b82131735d3b300050d6a67a6fd324e2454340b60b088efc2485958b77c364736f6c63430008020033";

export class BridgeRouterV12__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRouterV12> {
    return super.deploy(overrides || {}) as Promise<BridgeRouterV12>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRouterV12 {
    return super.attach(address) as BridgeRouterV12;
  }
  connect(signer: Signer): BridgeRouterV12__factory {
    return super.connect(signer) as BridgeRouterV12__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRouterV12Interface {
    return new utils.Interface(_abi) as BridgeRouterV12Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRouterV12 {
    return new Contract(address, _abi, signerOrProvider) as BridgeRouterV12;
  }
}
