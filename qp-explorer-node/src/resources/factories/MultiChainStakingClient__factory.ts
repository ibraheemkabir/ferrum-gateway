/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiChainStakingClient,
  MultiChainStakingClientInterface,
} from "../MultiChainStakingClient";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MASTER_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "setMasterChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_masterContract",
        type: "address",
      },
    ],
    name: "setMasterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610a286005553480156200001757600080fd5b50620000233362000037565b600180556200003162000087565b62000276565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000c657600080fd5b505af1158015620000db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200010591908101906200018a565b8060200190518101906200011a919062000150565b600380546001600160a01b0319166001600160a01b03841617905592509050811562000147578162000149565b465b6002555050565b6000806040838503121562000163578182fd5b82516001600160a01b03811681146200017a578283fd5b6020939093015192949293505050565b600060208083850312156200019d578182fd5b82516001600160401b0380821115620001b4578384fd5b818501915085601f830112620001c8578384fd5b815181811115620001dd57620001dd62000260565b604051601f8201601f19908116603f0116810190838211818310171562000208576200020862000260565b81604052828152888684870101111562000220578687fd5b8693505b8284101562000243578484018601518185018701529285019262000224565b828411156200025457868684830101525b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b610a7880620002866000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a61461012557806385e1f4d01461012d5780638da5cb5b14610136578063cd446e2214610147578063f2fde38b1461015a5761009e565b80630c51b88f146100a35780632a3a236f146100b85780634ae3a5d6146100cb5780636425666b146100de57806364494fdf1461010e575b600080fd5b6100b66100b136600461088b565b61016d565b005b6100b66100c6366004610871565b61026c565b6100b66100d93660046108dd565b6102b8565b6003546100f1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61011760055481565b604051908152602001610105565b6100b66102e7565b61011760025481565b6000546001600160a01b03166100f1565b6004546100f1906001600160a01b031681565b6100b6610168366004610871565b61031d565b60035461018790849033906001600160a01b0316856103b8565b6101ce5760405162461bcd60e51b8152602060048201526013602482015272139bdd1a1a5b99c81d1c985b9cd9995c9c9959606a1b60448201526064015b60405180910390fd5b6040805160048082526024820183526020820180516001600160e01b03166303183e7360e41b1790526003546005548254945163182a98c560e31b815293946001600160a01b039283169463c154c6289461023494899493169133918c918a910161099d565b600060405180830381600087803b15801561024e57600080fd5b505af1158015610262573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146102965760405162461bcd60e51b81526004016101c590610968565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102e25760405162461bcd60e51b81526004016101c590610968565b600555565b6000546001600160a01b031633146103115760405162461bcd60e51b81526004016101c590610968565b61031b6000610548565b565b6000546001600160a01b031633146103475760405162461bcd60e51b81526004016101c590610968565b6001600160a01b0381166103ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c5565b6103b581610548565b50565b6040516370a0823160e01b81526001600160a01b03838116600483015260009182918716906370a082319060240160206040518083038186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906108f5565b905061044d6001600160a01b038716868686610598565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908816906370a082319060240160206040518083038186803b15801561049257600080fd5b505afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca91906108f5565b90506104d682826109f3565b92508383111561053e5760405162461bcd60e51b815260206004820152602d60248201527f53413a2061637475616c20616d6f756e74206c6172676572207468616e20747260448201526c185b9cd9995c88185b5bdd5b9d609a1b60648201526084016101c5565b5050949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526105f29085906105f8565b50505050565b600061064d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106cf9092919063ffffffff16565b8051909150156106ca578080602001905181019061066b91906108bd565b6106ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101c5565b505050565b60606106de84846000856106e8565b90505b9392505050565b6060824710156107495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101c5565b61075285610817565b61079e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101c5565b600080866001600160a01b031685876040516107ba9190610939565b60006040518083038185875af1925050503d80600081146107f7576040519150601f19603f3d011682016040523d82523d6000602084013e6107fc565b606091505b509150915061080c828286610821565b979650505050505050565b803b15155b919050565b606083156108305750816106e1565b8251156108405782518084602001fd5b8160405162461bcd60e51b81526004016101c59190610955565b80356001600160a01b038116811461081c57600080fd5b600060208284031215610882578081fd5b6106e18261085a565b60008060006060848603121561089f578182fd5b6108a88461085a565b95602085013595506040909401359392505050565b6000602082840312156108ce578081fd5b815180151581146106e1578182fd5b6000602082840312156108ee578081fd5b5035919050565b600060208284031215610906578081fd5b5051919050565b60008151808452610925816020860160208601610a16565b601f01601f19169290920160200192915050565b6000825161094b818460208701610a16565b9190910192915050565b6000602082526106e1602083018461090d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b86815267ffffffffffffffff861660208201526001600160a01b03858116604083015284811660608301528316608082015260c060a082018190526000906109e79083018461090d565b98975050505050505050565b600082821015610a1157634e487b7160e01b81526011600452602481fd5b500390565b60005b83811015610a31578181015183820152602001610a19565b838111156105f2575050600091015256fea264697066735822122027e36cb08a7fd4560ac3d35bead5e0115e955b8f1c89126f5df51ef72a3a1b0464736f6c63430008020033";

export class MultiChainStakingClient__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiChainStakingClient> {
    return super.deploy(overrides || {}) as Promise<MultiChainStakingClient>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiChainStakingClient {
    return super.attach(address) as MultiChainStakingClient;
  }
  connect(signer: Signer): MultiChainStakingClient__factory {
    return super.connect(signer) as MultiChainStakingClient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiChainStakingClientInterface {
    return new utils.Interface(_abi) as MultiChainStakingClientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiChainStakingClient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiChainStakingClient;
  }
}
