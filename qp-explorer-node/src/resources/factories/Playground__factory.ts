/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Playground, PlaygroundInterface } from "../Playground";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
    ],
    name: "blockIdx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "log",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "multiSig",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "rs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "ss",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "vs",
        type: "uint8[]",
      },
    ],
    name: "testMultiSig",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct MultiSigLib.Sig[]",
        name: "sigs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ceb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806351973ec914610046578063731fbf271461005057806373979e8e14610079575b600080fd5b61004e61009a565b005b61006361005e3660046109a7565b61014c565b6040516100709190610b1a565b60405180910390f35b61008c610087366004610a9d565b61042f565b604051908152602001610070565b60408051808201825260888082523060208084018290529351601160e31b9481019490945260601b6bffffffffffffffffffffffff19166024840152916100f3906038015b604051602081830303815290604052610462565b6040805163ffffffff841660208201523091810191909152610117906060016100df565b61014860405180604001604052806006815260200165414e4420257360d01b81525061014384306104a8565b6105a9565b5050565b6060610157856105ee565b905060005b8151811015610426576101a56040518060400160405280601881526020017f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d207b7d20000000000000000081525083516105a9565b6101d98282815181106101c857634e487b7160e01b600052603260045260246000fd5b602002602001015160200151610854565b61020d8282815181106101fc57634e487b7160e01b600052603260045260246000fd5b602002602001015160400151610854565b61025f604051806040016040528060028152602001617b7d60f01b81525083838151811061024b57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015160ff166105a9565b81818151811061027f57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001518582815181106102ab57634e487b7160e01b600052603260045260246000fd5b6020026020010151146102f25760405162461bcd60e51b815260206004820152600a60248201526926b4b9b6b0ba31b4102960b11b60448201526064015b60405180910390fd5b81818151811061031257634e487b7160e01b600052603260045260246000fd5b60200260200101516040015184828151811061033e57634e487b7160e01b600052603260045260246000fd5b6020026020010151146103805760405162461bcd60e51b815260206004820152600a6024820152694d69736d61746368205360b01b60448201526064016102e9565b8181815181106103a057634e487b7160e01b600052603260045260246000fd5b60200260200101516000015160ff168382815181106103cf57634e487b7160e01b600052603260045260246000fd5b602002602001015160ff16146104145760405162461bcd60e51b815260206004820152600a60248201526926b4b9b6b0ba31b4102b60b11b60448201526064016102e9565b8061041e81610c6e565b91505061015c565b50949350505050565b600061045b67ffffffffffffffff83166fffffffffffffffff0000000000000000604086901b16610c00565b9392505050565b6104a5816040516024016104769190610b76565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610895565b50565b60006104e26040518060400160405280600d81526020016c414444522049534f203120257360981b815250836001600160a01b03166105a9565b61051b6040518060400160405280600d81526020016c414444522049534f203220257360981b81525060a08563ffffffff16901b6105a9565b6105506040518060400160405280600d81526020016c414444522049534f203220257360981b8152508463ffffffff166105a9565b60408051808201909152600d81526c414444522049534f203220257360981b602082015261058c9061014363ffffffff8616600160a01b610c38565b506001600160a01b031660a09190911b63ffffffff60a01b161790565b61014882826040516024016105bf929190610b89565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610895565b60606000602083516106009190610c18565b9050604161060f826020610c38565b61061a906002610c38565b6106249190610c18565b9050600081602085516106379190610c18565b6106419190610c57565b905061064e600283610c18565b610659906002610c38565b6106639083610c57565b156106a85760405162461bcd60e51b81526020600482015260156024820152744d534c3a20496e76616c6964207369672073697a6560581b60448201526064016102e9565b6106b3600283610c18565b67ffffffffffffffff8111156106d957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561072457816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816106f75790505b5092506020604060006107378484610c38565b87516107439190610c57565b61074e906001610c00565b905060005b61075e600287610c18565b811015610849578784015183890151838a015161077c876040610c00565b9650610789866040610c00565b9550610796856001610c00565b9450808a85815181106107b957634e487b7160e01b600052603260045260246000fd5b60200260200101516000019060ff16908160ff1681525050828a85815181106107f257634e487b7160e01b600052603260045260246000fd5b60200260200101516020018181525050818a858151811061082357634e487b7160e01b600052603260045260246000fd5b60200260200101516040018181525050505050808061084190610c6e565b915050610753565b505050505050919050565b6104a58160405160240161086a91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600082601f8301126108c6578081fd5b813560206108db6108d683610bdc565b610bab565b82815281810190858301838502870184018810156108f7578586fd5b855b85811015610915578135845292840192908401906001016108f9565b5090979650505050505050565b600082601f830112610932578081fd5b813560206109426108d683610bdc565b828152818101908583018385028701840188101561095e578586fd5b855b8581101561091557813560ff81168114610978578788fd5b84529284019290840190600101610960565b803567ffffffffffffffff811681146109a257600080fd5b919050565b600080600080608085870312156109bc578384fd5b843567ffffffffffffffff808211156109d3578586fd5b818701915087601f8301126109e6578586fd5b81356020828211156109fa576109fa610c9f565b610a0c601f8301601f19168201610bab565b8281528a82848701011115610a1f578889fd5b828286018383013791820181019790975295870135915080821115610a42578485fd5b610a4e888389016108b6565b94506040870135915080821115610a63578384fd5b610a6f888389016108b6565b93506060870135915080821115610a84578283fd5b50610a9187828801610922565b91505092959194509250565b60008060408385031215610aaf578182fd5b610ab88361098a565b9150610ac66020840161098a565b90509250929050565b60008151808452815b81811015610af457602081850181015186830182015201610ad8565b81811115610b055782602083870101525b50601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190868401855b82811015610b69578151805160ff16855286810151878601528501518585015260609093019290850190600101610b37565b5091979650505050505050565b60006020825261045b6020830184610acf565b600060408252610b9c6040830185610acf565b90508260208301529392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bd457610bd4610c9f565b604052919050565b600067ffffffffffffffff821115610bf657610bf6610c9f565b5060209081020190565b60008219821115610c1357610c13610c89565b500190565b600082610c3357634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610c5257610c52610c89565b500290565b600082821015610c6957610c69610c89565b500390565b6000600019821415610c8257610c82610c89565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200cac075cbeec2b4cd13a67fb94a1e65ed20f91c86d806a3e7e1db2dac4b2a8c664736f6c63430008020033";

export class Playground__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Playground> {
    return super.deploy(overrides || {}) as Promise<Playground>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Playground {
    return super.attach(address) as Playground;
  }
  connect(signer: Signer): Playground__factory {
    return super.connect(signer) as Playground__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlaygroundInterface {
    return new utils.Interface(_abi) as PlaygroundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Playground {
    return new Contract(address, _abi, signerOrProvider) as Playground;
  }
}
