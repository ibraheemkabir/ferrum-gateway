/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingTokenPool,
  StakingTokenPoolInterface,
} from "../StakingTokenPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50600080336001600160a01b031663890357306040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005157600080fd5b505af115801562000066573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009091908101906200034b565b8051600190600090620000ab906002906020860190620001d5565b50508251620000c091906020850190620001d5565b505050606092831b6001600160601b03199081166080529282901b90921660a052600080546001600160a01b0319166001600160a01b0380851691821790925560405163cabeb62560e01b815260048101919091529194509192509083169063cabeb6259060240160206040518083038186803b1580156200014157600080fd5b505afa15801562000156573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017c9190620003eb565b620001cd5760405162461bcd60e51b815260206004820152601c60248201527f5354503a20706f6f6c206973206e6f7420746f6b656e697a61626c6500000000604482015260640160405180910390fd5b505062000467565b828054620001e39062000414565b90600052602060002090601f01602090048101928262000207576000855562000252565b82601f106200022257805160ff191683800117855562000252565b8280016001018555821562000252579182015b828111156200025257825182559160200191906001019062000235565b506200026092915062000264565b5090565b5b8082111562000260576000815560010162000265565b80516001600160a01b03811681146200029357600080fd5b919050565b600082601f830112620002a9578081fd5b81516001600160401b0380821115620002c657620002c662000451565b604051601f8301601f19908116603f01168101908282118183101715620002f157620002f162000451565b816040528381526020925086838588010111156200030d578485fd5b8491505b8382101562000330578582018301518183018401529082019062000311565b838211156200034157848385830101525b9695505050505050565b600080600080600060a0868803121562000363578081fd5b6200036e866200027b565b94506200037e602087016200027b565b93506200038e604087016200027b565b60608701519093506001600160401b0380821115620003ab578283fd5b620003b989838a0162000298565b93506080880151915080821115620003cf578283fd5b50620003de8882890162000298565b9150509295509295909350565b600060208284031215620003fd578081fd5b815180151581146200040d578182fd5b9392505050565b6002810460018216806200042957607f821691505b602082108114156200044b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c61093d620004bd60003960008181610128015281816102bd015281816103ee015281816104af015281816105600152818161062901526106f7015260006101c2015261093d6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461017c57806395d89b411461018f578063a46c850514610197578063a9059cbb146101aa578063c45a0155146101bd578063dd62ed3e146101e4576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461011057806325b15a0c14610123578063313ce56714610162575b600080fd5b6100c16101f7565b6040516100ce9190610879565b60405180910390f35b6100ea6100e5366004610818565b610285565b60405190151581526020016100ce565b6101026103cb565b6040519081526020016100ce565b6100ea61011e3660046107dd565b61046f565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ce565b61016a601281565b60405160ff90911681526020016100ce565b61010261018a366004610791565b610535565b6100c16105e4565b60005461014a906001600160a01b031681565b6100ea6101b8366004610818565b6105f1565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b6101026101f23660046107ab565b6106c4565b60018054610204906108cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610230906108cc565b801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b505050505081565b60008054604051638068dc3360e01b81526001600160a01b0391821660048201523360248201528482166044820152606481018490527f000000000000000000000000000000000000000000000000000000000000000090911690638068dc3390608401602060405180830381600087803b15801561030357600080fd5b505af1158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b9190610841565b6103815760405162461bcd60e51b815260206004820152601360248201527214d5140e88185c1c1c9bdd994819985a5b1959606a1b604482015260640160405180910390fd5b6040518281526001600160a01b0384169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a350600192915050565b60008054604051636021726760e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063602172679060240160206040518083038186803b15801561043257600080fd5b505afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190610861565b905090565b6000805460405163045e30fb60e31b81526001600160a01b03918216600482015233602482015285821660448201528482166064820152608481018490527f0000000000000000000000000000000000000000000000000000000000000000909116906322f187d89060a401602060405180830381600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190610841565b949350505050565b600080546040516367265c3b60e11b81526001600160a01b03918216600482015283821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063ce4cb8769060440160206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190610861565b90505b919050565b60028054610204906108cc565b6000805460405163f52f9b9f60e01b81526001600160a01b0391821660048201523360248201528482166044820152606481018490527f00000000000000000000000000000000000000000000000000000000000000009091169063f52f9b9f90608401600060405180830381600087803b15801561066f57600080fd5b505af1158015610683573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103ba565b6000805460405163927da10560e01b81526001600160a01b039182166004820152848216602482015283821660448201527f00000000000000000000000000000000000000000000000000000000000000009091169063927da1059060640160206040518083038186803b15801561073b57600080fd5b505afa15801561074f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107739190610861565b9392505050565b80356001600160a01b03811681146105df57600080fd5b6000602082840312156107a2578081fd5b6107738261077a565b600080604083850312156107bd578081fd5b6107c68361077a565b91506107d46020840161077a565b90509250929050565b6000806000606084860312156107f1578081fd5b6107fa8461077a565b92506108086020850161077a565b9150604084013590509250925092565b6000806040838503121561082a578182fd5b6108338361077a565b946020939093013593505050565b600060208284031215610852578081fd5b81518015158114610773578182fd5b600060208284031215610872578081fd5b5051919050565b6000602080835283518082850152825b818110156108a557858101830151858201604001528201610889565b818111156108b65783604083870101525b50601f01601f1916929092016040019392505050565b6002810460018216806108e057607f821691505b6020821081141561090157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220eef544f142d0be8e5d89a8ae4cb71aa115c146af02c99e906fef6ec580535d5664736f6c63430008020033";

export class StakingTokenPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingTokenPool> {
    return super.deploy(overrides || {}) as Promise<StakingTokenPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingTokenPool {
    return super.attach(address) as StakingTokenPool;
  }
  connect(signer: Signer): StakingTokenPool__factory {
    return super.connect(signer) as StakingTokenPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingTokenPoolInterface {
    return new utils.Interface(_abi) as StakingTokenPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingTokenPool {
    return new Contract(address, _abi, signerOrProvider) as StakingTokenPool;
  }
}
