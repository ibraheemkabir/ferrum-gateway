/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRemoteStakeRewardManager,
  TestRemoteStakeRewardManagerInterface,
} from "../TestRemoteStakeRewardManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount_",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "addReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "addRewardPublic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "fakeRewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "syncStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "userStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewardsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506001600081905550336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005657600080fd5b505af11580156200006b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009591908101906200011e565b806020019051810190620000aa9190620000e7565b6001600160601b0319606091821b811660a05291901b166080526200020a565b80516001600160a01b0381168114620000e257600080fd5b919050565b60008060408385031215620000fa578182fd5b6200010583620000ca565b91506200011560208401620000ca565b90509250929050565b6000602080838503121562000131578182fd5b82516001600160401b038082111562000148578384fd5b818501915085601f8301126200015c578384fd5b815181811115620001715762000171620001f4565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c620001f4565b816040528281528886848701011115620001b4578687fd5b8693505b82841015620001d75784840186015181850187015292850192620001b8565b82841115620001e857868684830101525b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c61175f620002596000396000818161019f015281816105710152818161065c0152610ce50152600081816103580152818161041c015261068f015261175f6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806360217267116100a2578063b5fd282a11610071578063b5fd282a146102cf578063c16fc545146102ef578063f5ab16cc1461032a578063f887ea4014610353578063fdbfc4741461037a57610116565b806360217267146102375780636a1d4c89146102575780639046ac8214610291578063a4e47b66146102a457610116565b80634732aa1d116100e95780634732aa1d146101875780634afc71871461019a57806351bdca3e146101d95780635471bcdd146101ec5780635aed85f91461021757610116565b8063228037741461011b5780632513502a1461014157806340b47e1a1461016157806342d8669314610174575b600080fd5b61012e610129366004611554565b61038d565b6040519081526020015b60405180910390f35b61012e61014f366004611554565b60076020526000908152604090205481565b61012e61016f36600461156e565b61040f565b61012e610182366004611554565b610497565b61012e61019536600461156e565b610517565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61012e6101e736600461156e565b610655565b61012e6101fa36600461156e565b600360209081526000928352604080842090915290825290205481565b61012e610225366004611554565b60066020526000908152604090205481565b61012e610245366004611554565b60046020526000908152604090205481565b61012e61026536600461156e565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205492915050565b61012e61029f36600461156e565b610682565b61012e6102b236600461156e565b600260209081526000928352604080842090915290825290205481565b61012e6102dd366004611554565b60016020526000908152604090205481565b6103286102fd3660046115a0565b6001600160a01b03918216600090815260086020908152604080832095909416825293909352912055565b005b6101c1610338366004611554565b6005602052600090815260409020546001600160a01b031681565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b61032861038836600461156e565b61077f565b6001600160a01b03808216600090815260056020526040812054909116806103fc5760405162461bcd60e51b815260206004820152601e60248201527f5253524d3a207374616b65206973206e6f7420696e697469616c697a6564000060448201526064015b60405180910390fd5b61040683826107ba565b9150505b919050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104845760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103f3565b61048e83836107ba565b90505b92915050565b6000600260005414156104bc5760405162461bcd60e51b81526004016103f390611662565b6002600055336105025760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103f3565b61050c3383610904565b600160005592915050565b6001600160a01b0380821660008181526002602090815260408083209487168084529482528083205484845260038352818420958452948252808320549383526004825280832054600790925282205491939291846105977f00000000000000000000000000000000000000000000000000000000000000008989610ac5565b9050848111156105fe5760008080806105bb8c8c8b6105b6818a6116d0565b610af3565b935093509350935083896105cf9190611699565b98506105db8389611699565b97506105e78288611699565b96506105f38187611699565b95505050505061062a565b8481101561062a57600061061d89898861061886826116d0565b610b61565b5090985090965094509250505b8461063d57600095505050505050610491565b61064985858585610c85565b98975050505050505050565b600061048e7f00000000000000000000000000000000000000000000000000000000000000008484610ac5565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106f75760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103f3565b6002600054141561071a5760405162461bcd60e51b81526004016103f390611662565b60026000556001600160a01b0383166107695760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103f3565b6107738383610904565b60016000559392505050565b600260005414156107a25760405162461bcd60e51b81526004016103f390611662565b60026000556107b18282610cb7565b50506001600055565b6001600160a01b03808316600090815260056020526040812054909116801580156107ed57506001600160a01b03831615155b1561082357506001600160a01b03838116600090815260056020526040902080546001600160a01b031916918416919091179055815b6001600160a01b0381166108715760405162461bcd60e51b81526020600482015260156024820152742929a9269d102737903932bbb0b932103a37b5b2b760591b60448201526064016103f3565b600061087c82610d5f565b90508061088e57600092505050610491565b6001600160a01b0385166000908152600660205260409020546108b2908290611699565b6001600160a01b0386166000908152600660209081526040808320939093556007905220546108e2908290611699565b6001600160a01b03861660009081526007602052604090205591505092915050565b60006109108383610cb7565b6001600160a01b03808316600090815260026020908152604080832093871683529290522054806109835760405162461bcd60e51b815260206004820152601760248201527f5253524d3a207573657220686173206e6f207374616b6500000000000000000060448201526064016103f3565b6001600160a01b03808416600090815260046020908152604080832054600783528184205460038452828520958a168552949092528220549092916109ca85838686610c85565b6001600160a01b0388166000908152600660205260409020549091506109f19082906116d0565b6001600160a01b038816600090815260066020526040902055610a148183611699565b6001600160a01b038089166000908152600360209081526040808320938d16835292905220558015610aba576001600160a01b0380881660009081526005602052604090205416610a66818a84610e45565b604080516001600160a01b038a8116825283811660208301528b16818301526060810184905290517fac0c09f599ad30636a442dcfe0b0eac1612c7c9b1bceedf65a278526838c35979181900360800190a1505b979650505050505050565b6001600160a01b038082166000908152600860209081526040808320938616835292905220545b9392505050565b6001600160a01b0383166000908152600460209081526040808320546007909252822054829182918291908115158381610b2d5782610b38565b610b38898486610ec1565b905088818a84610b49576000610b4b565b835b929f919e509c50909a5098505050505050505050565b600080600080600086861115610bb95760405162461bcd60e51b815260206004820152601860248201527f5253524d3a204e6f7420656e6f7567682062616c616e6365000000000000000060448201526064016103f3565b6001600160a01b038089166000818152600360209081526040808320948e16835293815283822054928252600781528382205460049091529281205491929190610c048a8484610ec1565b9050600084821115610c3b57610c1a85836116d0565b945084905080610c2a83866116d0565b610c349190611699565b9350610c54565b610c4582866116d0565b9450610c5182856116d0565b93505b8385610c608d8f6116d0565b610c6a8e876116d0565b84995099509950995099505050505050945094509450945094565b600080610c93848488610ed6565b9050848111610ca3576000610cad565b610cad85826116d0565b9695505050505050565b6001600160a01b03808216600090815260026020908152604080832093861683529290529081205490610d0b7f00000000000000000000000000000000000000000000000000000000000000008585610ac5565b905081811115610d35576000610d2183836116d0565b9050610d2f85858584610ee3565b50610d59565b81811015610d59576000610d4982846116d0565b9050610d5785858584610f40565b505b50505050565b600060026000541415610d845760405162461bcd60e51b81526004016103f390611662565b600260009081556001600160a01b038316808252600160205260408083205490516370a0823160e01b8152306004820152909291906370a082319060240160206040518083038186803b158015610dda57600080fd5b505afa158015610dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1291906115fb565b9050610e1e82826116d0565b6001600160a01b039094166000908152600160208190526040822092909255555090919050565b60026000541415610e685760405162461bcd60e51b81526004016103f390611662565b600260009081556001600160a01b038416815260016020526040902054610e909082906116d0565b6001600160a01b038416600081815260016020526040902091909155610eb7908383610f56565b5050600160005550565b6000610ece848484610fad565b949350505050565b6000610ece838386610fad565b610eef84848484611132565b604080516001600160a01b038086168252861660208201529081018290527f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd79060600160405180910390a150505050565b80610f4a57610d59565b610d5784848484611249565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610fa8908490611370565b505050565b600080806000198587098587029250828110838203039150508060001415610fe75760008411610fdc57600080fd5b508290049050610aec565b808411610ff357600080fd5b600084868809808403938111909203919050600085611014816000196116d0565b61101f906001611699565b1695869004959384900493600081900304600101905061103f81846116b1565b9093179260006110508760036116b1565b600218905061105f81886116b1565b61106a9060026116d0565b61107490826116b1565b905061108081886116b1565b61108b9060026116d0565b61109590826116b1565b90506110a181886116b1565b6110ac9060026116d0565b6110b690826116b1565b90506110c281886116b1565b6110cd9060026116d0565b6110d790826116b1565b90506110e381886116b1565b6110ee9060026116d0565b6110f890826116b1565b905061110481886116b1565b61110f9060026116d0565b61111990826116b1565b905061112581866116b1565b9998505050505050505050565b60008060008061114488888888610af3565b935093509350935083866111589190611699565b6001600160a01b038089166000818152600260209081526040808320948e16808452948252808320959095559181526003825283812092815291905220546111a1908490611699565b6001600160a01b038089166000818152600360209081526040808320948e1683529381528382209490945590815260049092529020546111e2908390611699565b6001600160a01b038816600090815260046020526040902055801561123f576001600160a01b038716600090815260076020526040902054611225908290611699565b6001600160a01b0388166000908152600760205260409020555b5050505050505050565b600061125785858585610b61565b909150905060076000886001600160a01b03166001600160a01b031681526020019081526020016000206000600360008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000849750859190505584919050555050508160026000866001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b03168152602001908152602001600020600082825461133591906116d0565b90915550506001600160a01b038416600090815260046020526040812080548492906113629084906116d0565b909155509095945050505050565b60006113c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114429092919063ffffffff16565b805190915015610fa857808060200190518101906113e391906115db565b610fa85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103f3565b6060610ece848460008585843b61149b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f3565b600080866001600160a01b031685876040516114b79190611613565b60006040518083038185875af1925050503d80600081146114f4576040519150601f19603f3d011682016040523d82523d6000602084013e6114f9565b606091505b5091509150610aba82828660608315611513575081610aec565b8251156115235782518084602001fd5b8160405162461bcd60e51b81526004016103f3919061162f565b80356001600160a01b038116811461040a57600080fd5b600060208284031215611565578081fd5b61048e8261153d565b60008060408385031215611580578081fd5b6115898361153d565b91506115976020840161153d565b90509250929050565b6000806000606084860312156115b4578081fd5b6115bd8461153d565b92506115cb6020850161153d565b9150604084013590509250925092565b6000602082840312156115ec578081fd5b81518015158114610aec578182fd5b60006020828403121561160c578081fd5b5051919050565b600082516116258184602087016116e7565b9190910192915050565b600060208252825180602084015261164e8160408501602087016116e7565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082198211156116ac576116ac611713565b500190565b60008160001904831182151516156116cb576116cb611713565b500290565b6000828210156116e2576116e2611713565b500390565b60005b838110156117025781810151838201526020016116ea565b83811115610d595750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cd8844f48d76e3658a09b924b153b8f6b703fa6e511b73c8073ad8f6ca54e5fb64736f6c63430008020033";

export class TestRemoteStakeRewardManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRemoteStakeRewardManager> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestRemoteStakeRewardManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestRemoteStakeRewardManager {
    return super.attach(address) as TestRemoteStakeRewardManager;
  }
  connect(signer: Signer): TestRemoteStakeRewardManager__factory {
    return super.connect(signer) as TestRemoteStakeRewardManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRemoteStakeRewardManagerInterface {
    return new utils.Interface(_abi) as TestRemoteStakeRewardManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRemoteStakeRewardManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestRemoteStakeRewardManager;
  }
}
